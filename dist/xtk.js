/*
 * 
 *                  xxxxxxx      xxxxxxx
 *                   x:::::x    x:::::x 
 *                    x:::::x  x:::::x  
 *                     x:::::xx:::::x   
 *                      x::::::::::x    
 *                       x::::::::x     
 *                       x::::::::x     
 *                      x::::::::::x    
 *                     x:::::xx:::::x   
 *                    x:::::x  x:::::x  
 *                   x:::::x    x:::::x 
 *              THE xxxxxxx      xxxxxxx TOOLKIT
 *                    
 *                  http://www.goXTK.com
 *                   
 * Copyright (c) 2012 The X Toolkit Developers <dev@goXTK.com>
 *                   
 *    The X Toolkit (XTK) is licensed under the MIT License:
 *      http://www.opensource.org/licenses/mit-license.php
 * 
 *      "Free software" is a matter of liberty, not price.
 *      "Free" as in "free speech", not as in "free beer".
 *                                         - Richard M. Stallman
 * 
 * FUELED BY:
 *  - the wonderful Constructive Solid Geometry library by Evan Wallace (http://madebyevan.com)
 *    LICENSE: https://raw.github.com/xtk/X/master/lib/csg/LICENSE
 *
 *  - parts of the Google Closure Library (http://code.google.com/closure/library)
 *    LICENSE: https://raw.github.com/xtk/google-closure-library/master/LICENSE
 *
 *  - zlib.js, the ultimate gzip/zlib javascript implementation (https://github.com/imaya/zlib.js)
 *    LICENSE: https://raw.github.com/imaya/zlib.js/master/LICENSE
 *
 * MORE CREDITS: https://raw.github.com/xtk/X/master/LICENSE
 *
 */
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_DEFINES;
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if(!COMPILED) {
    if(goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
      value = goog.global.CLOSURE_DEFINES[name]
    }
  }
  goog.exportPath_(name, value)
};
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(goog.DEBUG) {
    if(!caller) {
      throw Error("arguments.caller not defined.  goog.base() expects not " + "to be running in strict mode. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
    }
  }
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("csgVector");
csgVector = function(ix, iy, iz) {
  this.x_ = 0;
  this.y_ = 0;
  this.z_ = 0;
  if(arguments.length == 3) {
    this.x_ = Number(ix);
    this.y_ = Number(iy);
    this.z_ = Number(iz)
  }else {
    if(ix instanceof csgVector) {
      this.x_ = Number(ix.x());
      this.y_ = Number(ix.y());
      this.z_ = Number(ix.z())
    }else {
      this.x_ = Number(ix[0]);
      this.y_ = Number(ix[1]);
      this.z_ = Number(ix[2])
    }
  }
};
csgVector.prototype = {clone:function() {
  return new csgVector(this.x_, this.y_, this.z_)
}, negated:function() {
  return new csgVector(-this.x_, -this.y_, -this.z_)
}, plus:function(a) {
  return new csgVector(this.x_ + a.x(), this.y_ + a.y(), this.z_ + a.z())
}, minus:function(a) {
  return new csgVector(this.x_ - a.x(), this.y_ - a.y(), this.z_ - a.z())
}, times:function(a) {
  return new csgVector(this.x_ * a, this.y_ * a, this.z_ * a)
}, dividedBy:function(a) {
  return new csgVector(this.x_ / a, this.y_ / a, this.z_ / a)
}, dot:function(a) {
  var result = this.x_ * a.x() + this.y_ * a.y() + this.z_ * a.z();
  return result
}, lerp:function(a, t) {
  return this.plus(a.minus(this).times(t))
}, length:function() {
  return Math.sqrt(this.dot(this))
}, unit:function() {
  return this.dividedBy(this.length())
}, cross:function(a) {
  return new csgVector(this.y_ * a.z() - this.z_ * a.y(), this.z_ * a.x() - this.x_ * a.z(), this.x_ * a.y() - this.y_ * a.x())
}, x:function() {
  return this.x_
}, y:function() {
  return this.y_
}, z:function() {
  return this.z_
}};
goog.provide("X");
goog.provide("X.counter");
var X = X || {};
X.DEV = true;
X.TIMER = function(what) {
  if(eval("X.DEV === undefined")) {
    return
  }
  window.console.time(what)
};
X.TIMERSTOP = function(what) {
  if(eval("X.DEV === undefined")) {
    return
  }
  window.console.timeEnd(what)
};
X.counter = function() {
  this._counter = 0;
  this.uniqueId = function() {
    return this._counter++
  }
};
window["X.counter"] = new X.counter;
function inject(a, b) {
  for(var i in b) {
    var g = b.__lookupGetter__(i), s = b.__lookupSetter__(i);
    if(i in a) {
      continue
    }
    if(g || s) {
      if(g) {
        a.__defineGetter__(i, g)
      }
      if(s) {
        a.__defineSetter__(i, s)
      }
    }else {
      a[i] = b[i]
    }
  }
  return a
}
var $ = window.$;
function bind_shim() {
  if(!Function.prototype.bind) {
    Function.prototype.bind = function(oThis) {
      if(typeof this !== "function") {
        throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
      }
      var fSlice = Array.prototype.slice, aArgs = fSlice.call(arguments, 1), fToBind = this;
      var fNOP = function() {
      };
      var fBound = function() {
        return fToBind.apply(this instanceof fNOP ? this : oThis || window, aArgs.concat(fSlice.call(arguments)))
      };
      fNOP.prototype = this.prototype;
      fBound.prototype = new fNOP;
      return fBound
    }
  }
}
function requestAnimationFrame_shim() {
  (function() {
    var lastTime = 0;
    var vendors = ["ms", "moz", "webkit", "o"];
    for(var x = 0;x < vendors.length && !window.requestAnimationFrame;++x) {
      window.requestAnimationFrame = window[vendors[x] + "RequestAnimationFrame"];
      window.cancelAnimationFrame = window[vendors[x] + "CancelAnimationFrame"] || window[vendors[x] + "CancelRequestAnimationFrame"]
    }
    if(!window.requestAnimationFrame) {
      window.requestAnimationFrame = function(callback, element) {
        var currTime = Date.now();
        var timeToCall = Math.max(0, 16 - (currTime - lastTime));
        var id = window.setTimeout(function() {
          callback(currTime + timeToCall)
        }, timeToCall);
        lastTime = currTime + timeToCall;
        return id
      }
    }
    if(!window.cancelAnimationFrame) {
      window.cancelAnimationFrame = function(id) {
        clearTimeout(id)
      }
    }
  })()
}
function arrayBufferSlice_shim() {
  if(!("slice" in ArrayBuffer.prototype)) {
    ArrayBuffer.prototype.slice = function(start, opt_end) {
      if(start === undefined) {
        throw new Error("Not enough arguments.");
      }
      var end = opt_end || this.byteLength;
      if(start < 0) {
        start = this.byteLength + start
      }
      if(end < 0) {
        end = this.byteLength + end
      }
      if(end < start) {
        start = 0;
        end = 0
      }
      if(start < 0) {
        start = 0
      }
      if(end < 0) {
        end = 0
      }
      if(start > this.byteLength) {
        start = this.byteLength
      }
      if(end > this.byteLength) {
        end = this.byteLength
      }
      var result = new ArrayBuffer(end - start);
      var inBytes = new Uint8Array(this);
      var outBytes = new Uint8Array(result);
      for(var inIndex = start, outIndex = 0;inIndex < end;++inIndex, ++outIndex) {
        outBytes[outIndex] = inBytes[inIndex]
      }
      return result
    }
  }
}
bind_shim();
requestAnimationFrame_shim();
arrayBufferSlice_shim();
goog.exportSymbol("$", $);
goog.exportSymbol("Function.prototype.bind", Function.prototype.bind);
goog.exportSymbol("window.requestAnimationFrame", window.requestAnimationFrame);
goog.exportSymbol("window.cancelAnimationFrame", window.cancelAnimationFrame);
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP])
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if(goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase()
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if(!doc || !goog.userAgent.IE) {
    return undefined
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5)
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && goog.userAgent.isVersionOrHigher("8") || 
goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return value
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if(goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable))
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if(!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = []
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope))
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.onDisposeCallbacks_) {
    while(this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()()
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if(obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed()
  }
  return false
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if(e.defaultPrevented) {
    this.preventDefault()
  }
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.Key;
goog.events.ListenableType;
goog.events.STRICT_EVENT_TARGET = true;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen(type, goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_(src, type, listener, false, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.CUSTOM_EVENT_ATTR = "customEvent_";
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    map[type] = {count_:0, remaining_:0}
  }
  map = map[type];
  if(!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if(!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++
  }else {
    listenerArray = map[srcUid];
    for(var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if(listenerObj.removed) {
          break
        }
        if(!callOnce) {
          listenerArray[i].callOnce = false
        }
        return listenerArray[i]
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if(!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = []
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if(src.addEventListener) {
    if(src == goog.global || !src[goog.events.CUSTOM_EVENT_ATTR]) {
      src.addEventListener(type, proxy, capture)
    }else {
      if(goog.events.STRICT_EVENT_TARGET) {
        src.assertInitialized()
      }
    }
  }else {
    src.attachEvent(goog.events.getOnString_(type), proxy)
  }
  return listenerObj
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce(type, goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_(src, type, listener, true, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten(type, goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if(!listener) {
    return false
  }
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener)
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src[goog.events.CUSTOM_EVENT_ATTR]) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray)
  }
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key]
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if(!noObj) {
    if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && opt_obj && goog.events.Listenable.isImplementedBy(opt_obj)) {
      return opt_obj.removeAllListeners(opt_type)
    }
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if(noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++
    })
  }
  return count
};
goog.events.removeAllNativeListeners = function() {
  var count = 0;
  goog.object.forEach(goog.events.listeners_, function(listener, key) {
    var src = listener.src;
    if(!goog.events.Listenable.isImplementedBy(src) && !src[goog.events.CUSTOM_EVENT_ATTR]) {
      goog.events.unlistenByKey(key);
      count++
    }
  });
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture)
  }else {
    return goog.events.getListeners_(obj, type, capture) || []
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, goog.events.wrapListener_(listener), capture, opt_handler)
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture)
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject)
  }
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return listener.handleEvent(eventObject)
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if(goog.events.STRICT_EVENT_TARGET) {
      goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.")
    }
    return src.dispatchEvent(e)
  }
  if(goog.events.STRICT_EVENT_TARGET) {
    goog.asserts.assert(goog.events.STRICT_EVENT_TARGET && src[goog.events.CUSTOM_EVENT_ATTR], "Can not use goog.events.dispatchEvent with " + "non-goog.events.EventTarget instance.");
    src.assertInitialized()
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if(listener.removed) {
    return true
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  retval = goog.events.fireListener(listener, be);
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if(goog.isFunction(listener)) {
    return listener
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e)
  })
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = {};
  this.actualEventTarget_ = this
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget)
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype[goog.events.CUSTOM_EVENT_ATTR] = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.assertInitialized();
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if(ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for(;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop")
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree)
  }else {
    return goog.events.dispatchEvent(this, e)
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners()
  }else {
    goog.events.removeAll(this)
  }
  this.parentEventTarget_ = null
};
goog.events.EventTarget.prototype.assertInitialized = function() {
  if(goog.events.STRICT_EVENT_TARGET) {
    goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call superclass " + "(goog.events.EventTarget) constructor?")
  }
};
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    this.assertInitialized();
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      listenerObj = listenerArray[index];
      if(!callOnce) {
        listenerObj.callOnce = false
      }
      return listenerObj
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index)
    }
    return false
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if(removed) {
      goog.events.cleanUp(key);
      key.removed = true
    }
    return removed
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for(var type in this.eventTargetListeners_) {
      if(!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for(var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true
        }
        listenerArray.length = 0
      }
    }
    return count
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    if(!(type in this.eventTargetListeners_)) {
      return true
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for(var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if(listener && !listener.removed && listener.capture == capture) {
        if(listener.callOnce) {
          this.unlistenByKey(listener)
        }
        rv = listener.handleEvent(eventObject) !== false && rv
      }
    }
    return rv && eventObject.returnValue_ != false
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if(listenerArray) {
      for(var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if(listenerObj.capture == capture) {
          rv.push(listenerObj)
        }
      }
    }
    return rv
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if(listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope)
    }
    return i > -1 ? listenerArray[i] : null
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for(var i = 0;i < listenersArray.length;++i) {
        if((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true
        }
      }
      return false
    })
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || e;
    if(goog.isString(e)) {
      e = new goog.events.Event(e, target)
    }else {
      if(!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent)
      }else {
        e.target = e.target || target
      }
    }
    var rv = true, currentTarget;
    if(opt_ancestorsTree) {
      for(var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv
      }
    }
    if(!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if(!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    if(opt_ancestorsTree) {
      for(i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    return rv
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for(var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
        return i
      }
    }
    return-1
  }
}
;goog.provide("X.base");
goog.require("X");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
X.base = function() {
  goog.base(this);
  this._classname = "base";
  this._id = window["X.counter"].uniqueId();
  this._dirty = false
};
goog.inherits(X.base, goog.events.EventTarget);
X.base.prototype.__defineGetter__("classname", function() {
  return this._classname
});
X.base.prototype.__defineGetter__("id", function() {
  return this._id
});
goog.exportSymbol("X.base", X.base);
goog.provide("csgVertex");
goog.require("csgVector");
csgVertex = function(pos, normal) {
  this.pos_ = new csgVector(pos);
  this.normal_ = new csgVector(normal)
};
csgVertex.prototype = {clone:function() {
  return new csgVertex(this.pos_.clone(), this.normal_.clone())
}, flip:function() {
  this.normal_ = this.normal_.negated()
}, interpolate:function(other, t) {
  return new csgVertex(this.pos_.lerp(other.pos(), t), this.normal_.lerp(other.normal(), t))
}, pos:function() {
  return this.pos_
}, normal:function() {
  return this.normal_
}};
goog.provide("csgPlane");
goog.require("csgVector");
csgPlane = function(normal, w) {
  this.normal_ = normal;
  this.w_ = w
};
csgPlane.EPSILON = 1E-5;
csgPlane.fromPoints = function(a, b, c) {
  var n = b.minus(a).cross(c.minus(a)).unit();
  return new csgPlane(n, n.dot(a))
};
csgPlane.prototype = {clone:function() {
  return new csgPlane(this.normal_.clone(), this.w_)
}, flip:function() {
  this.normal_ = this.normal_.negated();
  this.w_ = -this.w_
}, w:function() {
  return this.w_
}, normal:function() {
  return this.normal_
}};
goog.provide("csgPolygon");
goog.require("csgPlane");
goog.require("csgVertex");
csgPolygon = function(vertices, shared) {
  this.vertices_ = vertices;
  this.shared_ = shared;
  this.plane_ = csgPlane.fromPoints(vertices[0].pos(), vertices[1].pos(), vertices[2].pos())
};
csgPolygon.prototype = {clone:function() {
  var vertices = this.vertices_.map(function(v) {
    return v.clone()
  });
  return new csgPolygon(vertices, this.shared_)
}, flip:function() {
  this.vertices_.reverse().map(function(v) {
    v.flip()
  });
  this.plane_.flip()
}, vertices:function() {
  return this.vertices_
}, shared:function() {
  return this.shared_
}, splitPolygon:function(plane, coplanarFront, coplanarBack, front, back) {
  var COPLANAR = 0;
  var FRONT = 1;
  var BACK = 2;
  var SPANNING = 3;
  var polygonType = 0;
  var types = [];
  for(var i = 0;i < this.vertices_.length;i++) {
    var t = plane.normal().dot(this.vertices_[i].pos()) - plane.w();
    var type = t < -csgPlane.EPSILON ? BACK : t > csgPlane.EPSILON ? FRONT : COPLANAR;
    polygonType |= type;
    types.push(type)
  }
  switch(polygonType) {
    case COPLANAR:
      (plane.normal().dot(this.plane_.normal()) > 0 ? coplanarFront : coplanarBack).push(this);
      break;
    case FRONT:
      front.push(this);
      break;
    case BACK:
      back.push(this);
      break;
    case SPANNING:
      var f = [], b = [];
      for(var i = 0;i < this.vertices().length;i++) {
        var j = (i + 1) % this.vertices().length;
        var ti = types[i], tj = types[j];
        var vi = this.vertices()[i], vj = this.vertices()[j];
        if(ti != BACK) {
          f.push(vi)
        }
        if(ti != FRONT) {
          b.push(ti != BACK ? vi.clone() : vi)
        }
        if((ti | tj) == SPANNING) {
          var t = (plane.w() - plane.normal().dot(vi.pos())) / plane.normal().dot(vj.pos().minus(vi.pos()));
          var v = vi.interpolate(vj, t);
          f.push(v);
          b.push(v.clone())
        }
      }
      if(f.length >= 3) {
        front.push(new csgPolygon(f, this.shared()))
      }
      if(b.length >= 3) {
        back.push(new csgPolygon(b, this.shared()))
      }
      break
  }
}};
goog.provide("csgNode");
goog.require("csgPlane");
goog.require("csgPolygon");
csgNode = function(polygons) {
  this.plane_ = null;
  this.front_ = null;
  this.back_ = null;
  this.polygons_ = [];
  if(polygons) {
    this.build(polygons)
  }
};
csgNode.prototype = {clone:function() {
  var node = new csgNode;
  node.setPlane(this.plane_ && this.plane_.clone());
  node.setFront(this.front_ && this.front_.clone());
  node.setBack(this.back_ && this.back_.clone());
  node.setPolygons(this.polygons_.map(function(p) {
    return p.clone()
  }));
  return node
}, invert:function() {
  for(var i = 0;i < this.polygons_.length;i++) {
    this.polygons_[i].flip()
  }
  this.plane_.flip();
  if(this.front_) {
    this.front_.invert()
  }
  if(this.back_) {
    this.back_.invert()
  }
  var temp = this.front_;
  this.front_ = this.back_;
  this.back_ = temp
}, clipPolygons:function(polygons) {
  if(!this.plane_) {
    return polygons.slice()
  }
  var front = [], back = [];
  for(var i = 0;i < polygons.length;i++) {
    polygons[i].splitPolygon(this.plane_, front, back, front, back)
  }
  if(this.front_) {
    front = this.front_.clipPolygons(front)
  }
  if(this.back_) {
    back = this.back_.clipPolygons(back)
  }else {
    back = []
  }
  return front.concat(back)
}, clipTo:function(bsp) {
  this.polygons_ = bsp.clipPolygons(this.polygons_);
  if(this.front_) {
    this.front_.clipTo(bsp)
  }
  if(this.back_) {
    this.back_.clipTo(bsp)
  }
}, allPolygons:function() {
  var polygons = this.polygons_.slice();
  if(this.front_) {
    polygons = polygons.concat(this.front_.allPolygons())
  }
  if(this.back_) {
    polygons = polygons.concat(this.back_.allPolygons())
  }
  return polygons
}, build:function(polygons) {
  if(!polygons.length) {
    return
  }
  if(!this.plane_) {
    this.plane_ = polygons[0].plane_.clone()
  }
  var front = [], back = [];
  for(var i = 0;i < polygons.length;i++) {
    polygons[i].splitPolygon(this.plane_, this.polygons_, this.polygons_, front, back)
  }
  if(front.length) {
    if(!this.front_) {
      this.front_ = new csgNode
    }
    this.front_.build(front)
  }
  if(back.length) {
    if(!this.back_) {
      this.back_ = new csgNode
    }
    this.back_.build(back)
  }
}, plane:function() {
  return this.plane_
}, setPlane:function(iplane) {
  this.plane_ = iplane
}, front:function() {
  return this.front_
}, setFront:function(ifront) {
  this.front_ = ifront
}, back:function() {
  return this.back_
}, setBack:function(iback) {
  this.back_ = iback
}, polygons:function() {
  return this.polygons_
}, setPolygons:function(ipolygons) {
  this.polygons_ = ipolygons
}};
goog.provide("CSG");
goog.require("csgPolygon");
goog.require("csgNode");
CSG = function() {
  this.polygons_ = []
};
CSG.fromPolygons = function(polygons) {
  var csg = new CSG;
  csg.setPolygons(polygons);
  return csg
};
CSG.prototype = {clone:function() {
  var csg = new CSG;
  csg.setPolygons(this.polygons_.map(function(p) {
    return p.clone()
  }));
  return csg
}, toPolygons:function() {
  return this.polygons_
}, union:function(csg) {
  var a = new csgNode(this.clone().polygons());
  var b = new csgNode(csg.clone().polygons());
  a.clipTo(b);
  b.clipTo(a);
  b.invert();
  b.clipTo(a);
  b.invert();
  a.build(b.allPolygons());
  return CSG.fromPolygons(a.allPolygons())
}, subtract:function(csg) {
  var a = new csgNode(this.clone().polygons());
  var b = new csgNode(csg.clone().polygons());
  a.invert();
  a.clipTo(b);
  b.clipTo(a);
  b.invert();
  b.clipTo(a);
  b.invert();
  a.build(b.allPolygons());
  a.invert();
  return CSG.fromPolygons(a.allPolygons())
}, intersect:function(csg) {
  var a = new csgNode(this.clone().polygons());
  var b = new csgNode(csg.clone().polygons());
  a.invert();
  b.clipTo(a);
  b.invert();
  a.clipTo(b);
  b.clipTo(a);
  a.build(b.allPolygons());
  a.invert();
  return CSG.fromPolygons(a.allPolygons())
}, inverse:function() {
  var csg = this.clone();
  csg.polygons().map(function(p) {
    p.flip()
  });
  return csg
}, polygons:function() {
  return this.polygons_
}, setPolygons:function(polygons) {
  this.polygons_ = polygons
}};
goog.provide("X.indexer");
goog.require("X.base");
X.indexer = function() {
  goog.base(this);
  this._classname = "indexer";
  this._unique = [];
  this._indices = [];
  this._map = {}
};
goog.inherits(X.indexer, X.base);
X.indexer.prototype.add = function(object) {
  if(!goog.isDefAndNotNull(object)) {
    throw new Error("Invalid object.");
  }
  var key = window.JSON.stringify(object);
  if(!(key in this._map)) {
    this._map[key] = this._unique.length;
    this._unique.push(object)
  }
  return this._map[key]
};
X.indexer.prototype.unique = function() {
  return this._unique
};
goog.provide("X.file");
goog.require("X.base");
X.file = function(path) {
  goog.base(this);
  this._classname = "file";
  this._path = path;
  this._dirty = true
};
goog.inherits(X.file, X.base);
goog.provide("X.loadable");
goog.require("X.base");
goog.require("X.file");
X.loadable = function() {
  this._file = null;
  this._filedata = null
};
X.loadable.prototype.__defineSetter__("file", function(filepath) {
  if(!goog.isDefAndNotNull(filepath) || goog.isArray(filepath) && filepath.length == 0) {
    this._file = null;
    return
  }
  if(goog.isArray(filepath)) {
    if(filepath.length == 1) {
      this._file = new X.file(filepath[0]);
      return
    }
    var _file_array = goog.array.map(filepath, function(v) {
      var _v = new X.volume;
      _v._file = new X.file(v);
      return _v
    });
    this._file = _file_array
  }else {
    this._file = new X.file(filepath)
  }
  this._filedata = null
});
X.loadable.prototype.__defineGetter__("file", function() {
  if(!this._file) {
    return""
  }
  if(goog.isArray(this._file)) {
    return this._file.map(function(v) {
      return v._file._path
    })
  }
  return this._file._path
});
X.loadable.prototype.__defineGetter__("filedata", function() {
  if(goog.isArray(this._file)) {
    return this._file.map(function(v) {
      return v._filedata
    })
  }
  return this._filedata
});
X.loadable.prototype.__defineSetter__("filedata", function(filedata) {
  if(!goog.isDefAndNotNull(filedata) || goog.isArray(filedata) && filedata.length == 0) {
    this._filedata = null
  }
  if(goog.isArray(filedata)) {
    if(filedata.length == 1) {
      this._filedata = filedata[0];
      return
    }
    var _number_of_files = this._file.length;
    var i;
    for(i = 0;i < _number_of_files;i++) {
      this._file[i]._filedata = filedata[i]
    }
  }else {
    this._filedata = filedata
  }
});
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(f.call(opt_obj, val, undefined, iterator)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterator.next();
        if(f.call(opt_obj, val, undefined, iterator)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("X.colortable");
goog.require("X.base");
goog.require("X.loadable");
goog.require("goog.structs.Map");
X.colortable = function() {
  goog.base(this);
  this._classname = "colortable";
  this._map = new goog.structs.Map;
  inject(this, new X.loadable)
};
goog.inherits(X.colortable, X.base);
X.colortable.prototype.add = function(value, label, r, g, b, a) {
  if(!goog.isNumber(value) || !goog.isNumber(r) || !goog.isNumber(g) || !goog.isNumber(b) || !goog.isNumber(a)) {
    throw new Error("Invalid color table entry.");
  }
  this._map.set(value, [label, r, g, b, a]);
  this._dirty = true
};
X.colortable.prototype.get = function(value) {
  return this._map.get(value)
};
goog.exportSymbol("X.colortable.prototype.get", X.colortable.prototype.get);
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0)
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15))
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15))
};
goog.provide("goog.math.Coordinate3");
goog.math.Coordinate3 = function(opt_x, opt_y, opt_z) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
  this.z = goog.isDef(opt_z) ? opt_z : 0
};
goog.math.Coordinate3.prototype.clone = function() {
  return new goog.math.Coordinate3(this.x, this.y, this.z)
};
if(goog.DEBUG) {
  goog.math.Coordinate3.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ", " + this.z + ")"
  }
}
goog.math.Coordinate3.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y && a.z == b.z
};
goog.math.Coordinate3.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  var dz = a.z - b.z;
  return Math.sqrt(dx * dx + dy * dy + dz * dz)
};
goog.math.Coordinate3.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  var dz = a.z - b.z;
  return dx * dx + dy * dy + dz * dz
};
goog.math.Coordinate3.difference = function(a, b) {
  return new goog.math.Coordinate3(a.x - b.x, a.y - b.y, a.z - b.z)
};
goog.math.Coordinate3.prototype.toArray = function() {
  return[this.x, this.y, this.z]
};
goog.math.Coordinate3.fromArray = function(a) {
  if(a.length <= 3) {
    return new goog.math.Coordinate3(a[0], a[1], a[2])
  }
  throw Error("Conversion from an array requires an array of length 3");
};
goog.provide("goog.math.Vec3");
goog.require("goog.math");
goog.require("goog.math.Coordinate3");
goog.math.Vec3 = function(x, y, z) {
  this.x = x;
  this.y = y;
  this.z = z
};
goog.inherits(goog.math.Vec3, goog.math.Coordinate3);
goog.math.Vec3.randomUnit = function() {
  var theta = Math.random() * Math.PI * 2;
  var phi = Math.random() * Math.PI * 2;
  var z = Math.cos(phi);
  var x = Math.sqrt(1 - z * z) * Math.cos(theta);
  var y = Math.sqrt(1 - z * z) * Math.sin(theta);
  return new goog.math.Vec3(x, y, z)
};
goog.math.Vec3.random = function() {
  return goog.math.Vec3.randomUnit().scale(Math.random())
};
goog.math.Vec3.fromCoordinate3 = function(a) {
  return new goog.math.Vec3(a.x, a.y, a.z)
};
goog.math.Vec3.prototype.clone = function() {
  return new goog.math.Vec3(this.x, this.y, this.z)
};
goog.math.Vec3.prototype.magnitude = function() {
  return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
};
goog.math.Vec3.prototype.squaredMagnitude = function() {
  return this.x * this.x + this.y * this.y + this.z * this.z
};
goog.math.Vec3.prototype.scale = function(s) {
  this.x *= s;
  this.y *= s;
  this.z *= s;
  return this
};
goog.math.Vec3.prototype.invert = function() {
  this.x = -this.x;
  this.y = -this.y;
  this.z = -this.z;
  return this
};
goog.math.Vec3.prototype.normalize = function() {
  return this.scale(1 / this.magnitude())
};
goog.math.Vec3.prototype.add = function(b) {
  this.x += b.x;
  this.y += b.y;
  this.z += b.z;
  return this
};
goog.math.Vec3.prototype.subtract = function(b) {
  this.x -= b.x;
  this.y -= b.y;
  this.z -= b.z;
  return this
};
goog.math.Vec3.prototype.equals = function(b) {
  return this == b || !!b && this.x == b.x && this.y == b.y && this.z == b.z
};
goog.math.Vec3.distance = goog.math.Coordinate3.distance;
goog.math.Vec3.squaredDistance = goog.math.Coordinate3.squaredDistance;
goog.math.Vec3.equals = goog.math.Coordinate3.equals;
goog.math.Vec3.sum = function(a, b) {
  return new goog.math.Vec3(a.x + b.x, a.y + b.y, a.z + b.z)
};
goog.math.Vec3.difference = function(a, b) {
  return new goog.math.Vec3(a.x - b.x, a.y - b.y, a.z - b.z)
};
goog.math.Vec3.dot = function(a, b) {
  return a.x * b.x + a.y * b.y + a.z * b.z
};
goog.math.Vec3.cross = function(a, b) {
  return new goog.math.Vec3(a.y * b.z - a.z * b.y, a.z * b.x - a.x * b.z, a.x * b.y - a.y * b.x)
};
goog.math.Vec3.lerp = function(a, b, x) {
  return new goog.math.Vec3(goog.math.lerp(a.x, b.x, x), goog.math.lerp(a.y, b.y, x), goog.math.lerp(a.z, b.z, x))
};
goog.provide("X.vector");
goog.require("goog.math.Vec3");
X.vector = goog.math.Vec3;
X.vector.prototype.clone = goog.math.Vec3.prototype.clone;
X.vector.prototype.magnitude = goog.math.Vec3.prototype.magnitude;
X.vector.prototype.scale = goog.math.Vec3.prototype.scale;
X.vector.prototype.invert = goog.math.Vec3.prototype.invert;
X.vector.prototype.add = goog.math.Vec3.prototype.add;
X.vector.prototype.subtract = goog.math.Vec3.prototype.subtract;
X.vector.prototype.normalize = function() {
  var _magnitude = this.magnitude();
  if(_magnitude == 0) {
    return this.scale(0)
  }
  return this.scale(1 / _magnitude)
};
X.vector.dot = goog.math.Vec3.dot;
X.vector.cross = goog.math.Vec3.cross;
X.vector.distance = goog.math.Vec3.distance;
X.vector.lerp = goog.math.Vec3.lerp;
X.vector.prototype.__defineGetter__("xx", function() {
  return this.x
});
X.vector.prototype.__defineGetter__("yy", function() {
  return this.y
});
X.vector.prototype.__defineGetter__("zz", function() {
  return this.z
});
goog.exportSymbol("X.vector", X.vector);
goog.exportSymbol("X.vector.prototype.clone", X.vector.prototype.clone);
goog.exportSymbol("X.vector.prototype.magnitude", X.vector.prototype.magnitude);
goog.exportSymbol("X.vector.prototype.scale", X.vector.prototype.scale);
goog.exportSymbol("X.vector.prototype.invert", X.vector.prototype.invert);
goog.exportSymbol("X.vector.prototype.normalize", X.vector.prototype.normalize);
goog.exportSymbol("X.vector.prototype.add", X.vector.prototype.add);
goog.exportSymbol("X.vector.prototype.subtract", X.vector.prototype.subtract);
goog.exportSymbol("X.vector.dot", X.vector.dot);
goog.exportSymbol("X.vector.cross", X.vector.cross);
goog.exportSymbol("X.vector.distance", X.vector.distance);
goog.exportSymbol("X.vector.lerp", X.vector.lerp);
goog.provide("goog.vec.Float64Array");
goog.vec.Float64Array = function(p0) {
  this.length = p0.length || p0;
  for(var i = 0;i < this.length;i++) {
    this[i] = p0[i] || 0
  }
};
goog.vec.Float64Array.BYTES_PER_ELEMENT = 8;
goog.vec.Float64Array.prototype.BYTES_PER_ELEMENT = 8;
goog.vec.Float64Array.prototype.set = function(values, opt_offset) {
  opt_offset = opt_offset || 0;
  for(var i = 0;i < values.length && opt_offset + i < this.length;i++) {
    this[opt_offset + i] = values[i]
  }
};
goog.vec.Float64Array.prototype.toString = Array.prototype.join;
if(typeof Float64Array == "undefined") {
  try {
    goog.exportProperty(goog.vec.Float64Array, "BYTES_PER_ELEMENT", goog.vec.Float64Array.BYTES_PER_ELEMENT)
  }catch(float64ArrayError) {
  }
  goog.exportProperty(goog.vec.Float64Array.prototype, "BYTES_PER_ELEMENT", goog.vec.Float64Array.prototype.BYTES_PER_ELEMENT);
  goog.exportProperty(goog.vec.Float64Array.prototype, "set", goog.vec.Float64Array.prototype.set);
  goog.exportProperty(goog.vec.Float64Array.prototype, "toString", goog.vec.Float64Array.prototype.toString);
  goog.exportSymbol("Float64Array", goog.vec.Float64Array)
}
;goog.provide("goog.vec.Float32Array");
goog.vec.Float32Array = function(p0) {
  this.length = p0.length || p0;
  for(var i = 0;i < this.length;i++) {
    this[i] = p0[i] || 0
  }
};
goog.vec.Float32Array.BYTES_PER_ELEMENT = 4;
goog.vec.Float32Array.prototype.BYTES_PER_ELEMENT = 4;
goog.vec.Float32Array.prototype.set = function(values, opt_offset) {
  opt_offset = opt_offset || 0;
  for(var i = 0;i < values.length && opt_offset + i < this.length;i++) {
    this[opt_offset + i] = values[i]
  }
};
goog.vec.Float32Array.prototype.toString = Array.prototype.join;
if(typeof Float32Array == "undefined") {
  goog.exportProperty(goog.vec.Float32Array, "BYTES_PER_ELEMENT", goog.vec.Float32Array.BYTES_PER_ELEMENT);
  goog.exportProperty(goog.vec.Float32Array.prototype, "BYTES_PER_ELEMENT", goog.vec.Float32Array.prototype.BYTES_PER_ELEMENT);
  goog.exportProperty(goog.vec.Float32Array.prototype, "set", goog.vec.Float32Array.prototype.set);
  goog.exportProperty(goog.vec.Float32Array.prototype, "toString", goog.vec.Float32Array.prototype.toString);
  goog.exportSymbol("Float32Array", goog.vec.Float32Array)
}
;goog.provide("goog.vec");
goog.provide("goog.vec.AnyType");
goog.provide("goog.vec.ArrayType");
goog.provide("goog.vec.Float32");
goog.provide("goog.vec.Float64");
goog.provide("goog.vec.Number");
goog.require("goog.vec.Float32Array");
goog.require("goog.vec.Float64Array");
goog.vec.Float32;
goog.vec.Float64;
goog.vec.Number;
goog.vec.AnyType;
goog.vec.ArrayType;
goog.vec.EPSILON = 1E-6;
goog.provide("goog.vec.Vec3");
goog.require("goog.vec");
goog.vec.Vec3.Float32;
goog.vec.Vec3.Float64;
goog.vec.Vec3.Number;
goog.vec.Vec3.AnyType;
goog.vec.Vec3.Type;
goog.vec.Vec3.Vec3Like;
goog.vec.Vec3.createFloat32 = function() {
  return new Float32Array(3)
};
goog.vec.Vec3.createFloat64 = function() {
  return new Float64Array(3)
};
goog.vec.Vec3.createNumber = function() {
  var a = new Array(3);
  goog.vec.Vec3.setFromValues(a, 0, 0, 0);
  return a
};
goog.vec.Vec3.create = function() {
  return new Float32Array(3)
};
goog.vec.Vec3.createFloat32FromArray = function(vec) {
  var newVec = goog.vec.Vec3.createFloat32();
  goog.vec.Vec3.setFromArray(newVec, vec);
  return newVec
};
goog.vec.Vec3.createFloat32FromValues = function(v0, v1, v2) {
  var a = goog.vec.Vec3.createFloat32();
  goog.vec.Vec3.setFromValues(a, v0, v1, v2);
  return a
};
goog.vec.Vec3.cloneFloat32 = goog.vec.Vec3.createFloat32FromArray;
goog.vec.Vec3.createFloat64FromArray = function(vec) {
  var newVec = goog.vec.Vec3.createFloat64();
  goog.vec.Vec3.setFromArray(newVec, vec);
  return newVec
};
goog.vec.Vec3.createFloat64FromValues = function(v0, v1, v2) {
  var vec = goog.vec.Vec3.createFloat64();
  goog.vec.Vec3.setFromValues(vec, v0, v1, v2);
  return vec
};
goog.vec.Vec3.cloneFloat64 = goog.vec.Vec3.createFloat64FromArray;
goog.vec.Vec3.createFromArray = function(vec) {
  var newVec = goog.vec.Vec3.create();
  goog.vec.Vec3.setFromArray(newVec, vec);
  return newVec
};
goog.vec.Vec3.createFromValues = function(v0, v1, v2) {
  var vec = goog.vec.Vec3.create();
  goog.vec.Vec3.setFromValues(vec, v0, v1, v2);
  return vec
};
goog.vec.Vec3.clone = function(vec) {
  var newVec = goog.vec.Vec3.create();
  goog.vec.Vec3.setFromArray(newVec, vec);
  return newVec
};
goog.vec.Vec3.setFromValues = function(vec, v0, v1, v2) {
  vec[0] = v0;
  vec[1] = v1;
  vec[2] = v2;
  return vec
};
goog.vec.Vec3.setFromArray = function(vec, values) {
  vec[0] = values[0];
  vec[1] = values[1];
  vec[2] = values[2];
  return vec
};
goog.vec.Vec3.add = function(vec0, vec1, resultVec) {
  resultVec[0] = vec0[0] + vec1[0];
  resultVec[1] = vec0[1] + vec1[1];
  resultVec[2] = vec0[2] + vec1[2];
  return resultVec
};
goog.vec.Vec3.subtract = function(vec0, vec1, resultVec) {
  resultVec[0] = vec0[0] - vec1[0];
  resultVec[1] = vec0[1] - vec1[1];
  resultVec[2] = vec0[2] - vec1[2];
  return resultVec
};
goog.vec.Vec3.negate = function(vec0, resultVec) {
  resultVec[0] = -vec0[0];
  resultVec[1] = -vec0[1];
  resultVec[2] = -vec0[2];
  return resultVec
};
goog.vec.Vec3.scale = function(vec0, scalar, resultVec) {
  resultVec[0] = vec0[0] * scalar;
  resultVec[1] = vec0[1] * scalar;
  resultVec[2] = vec0[2] * scalar;
  return resultVec
};
goog.vec.Vec3.magnitudeSquared = function(vec0) {
  var x = vec0[0], y = vec0[1], z = vec0[2];
  return x * x + y * y + z * z
};
goog.vec.Vec3.magnitude = function(vec0) {
  var x = vec0[0], y = vec0[1], z = vec0[2];
  return Math.sqrt(x * x + y * y + z * z)
};
goog.vec.Vec3.normalize = function(vec0, resultVec) {
  var ilen = 1 / goog.vec.Vec3.magnitude(vec0);
  resultVec[0] = vec0[0] * ilen;
  resultVec[1] = vec0[1] * ilen;
  resultVec[2] = vec0[2] * ilen;
  return resultVec
};
goog.vec.Vec3.dot = function(v0, v1) {
  return v0[0] * v1[0] + v0[1] * v1[1] + v0[2] * v1[2]
};
goog.vec.Vec3.cross = function(v0, v1, resultVec) {
  var x0 = v0[0], y0 = v0[1], z0 = v0[2];
  var x1 = v1[0], y1 = v1[1], z1 = v1[2];
  resultVec[0] = y0 * z1 - z0 * y1;
  resultVec[1] = z0 * x1 - x0 * z1;
  resultVec[2] = x0 * y1 - y0 * x1;
  return resultVec
};
goog.vec.Vec3.distanceSquared = function(vec0, vec1) {
  var x = vec0[0] - vec1[0];
  var y = vec0[1] - vec1[1];
  var z = vec0[2] - vec1[2];
  return x * x + y * y + z * z
};
goog.vec.Vec3.distance = function(vec0, vec1) {
  return Math.sqrt(goog.vec.Vec3.distanceSquared(vec0, vec1))
};
goog.vec.Vec3.direction = function(vec0, vec1, resultVec) {
  var x = vec1[0] - vec0[0];
  var y = vec1[1] - vec0[1];
  var z = vec1[2] - vec0[2];
  var d = Math.sqrt(x * x + y * y + z * z);
  if(d) {
    d = 1 / d;
    resultVec[0] = x * d;
    resultVec[1] = y * d;
    resultVec[2] = z * d
  }else {
    resultVec[0] = resultVec[1] = resultVec[2] = 0
  }
  return resultVec
};
goog.vec.Vec3.lerp = function(v0, v1, f, resultVec) {
  var x = v0[0], y = v0[1], z = v0[2];
  resultVec[0] = (v1[0] - x) * f + x;
  resultVec[1] = (v1[1] - y) * f + y;
  resultVec[2] = (v1[2] - z) * f + z;
  return resultVec
};
goog.vec.Vec3.equals = function(v0, v1) {
  return v0.length == v1.length && v0[0] == v1[0] && v0[1] == v1[1] && v0[2] == v1[2]
};
goog.provide("goog.vec.Vec4");
goog.require("goog.vec");
goog.vec.Vec4.Float32;
goog.vec.Vec4.Float64;
goog.vec.Vec4.Number;
goog.vec.Vec4.AnyType;
goog.vec.Vec4.Type;
goog.vec.Vec4.Vec4Like;
goog.vec.Vec4.createFloat32 = function() {
  return new Float32Array(4)
};
goog.vec.Vec4.createFloat64 = function() {
  return new Float64Array(4)
};
goog.vec.Vec4.createNumber = function() {
  var v = new Array(4);
  goog.vec.Vec4.setFromValues(v, 0, 0, 0, 0);
  return v
};
goog.vec.Vec4.create = function() {
  return new Float32Array(4)
};
goog.vec.Vec4.createFromArray = function(vec) {
  var newVec = goog.vec.Vec4.create();
  goog.vec.Vec4.setFromArray(newVec, vec);
  return newVec
};
goog.vec.Vec4.createFloat32FromArray = function(vec) {
  var newVec = goog.vec.Vec4.createFloat32();
  goog.vec.Vec4.setFromArray(newVec, vec);
  return newVec
};
goog.vec.Vec4.createFloat32FromValues = function(v0, v1, v2, v3) {
  var vec = goog.vec.Vec4.createFloat32();
  goog.vec.Vec4.setFromValues(vec, v0, v1, v2, v3);
  return vec
};
goog.vec.Vec4.cloneFloat32 = goog.vec.Vec4.createFloat32FromArray;
goog.vec.Vec4.createFloat64FromArray = function(vec) {
  var newVec = goog.vec.Vec4.createFloat64();
  goog.vec.Vec4.setFromArray(newVec, vec);
  return newVec
};
goog.vec.Vec4.createFloat64FromValues = function(v0, v1, v2, v3) {
  var vec = goog.vec.Vec4.createFloat64();
  goog.vec.Vec4.setFromValues(vec, v0, v1, v2, v3);
  return vec
};
goog.vec.Vec4.cloneFloat64 = goog.vec.Vec4.createFloat64FromArray;
goog.vec.Vec4.createFromValues = function(v0, v1, v2, v3) {
  var vec = goog.vec.Vec4.create();
  goog.vec.Vec4.setFromValues(vec, v0, v1, v2, v3);
  return vec
};
goog.vec.Vec4.clone = goog.vec.Vec4.createFromArray;
goog.vec.Vec4.setFromValues = function(vec, v0, v1, v2, v3) {
  vec[0] = v0;
  vec[1] = v1;
  vec[2] = v2;
  vec[3] = v3;
  return vec
};
goog.vec.Vec4.setFromArray = function(vec, values) {
  vec[0] = values[0];
  vec[1] = values[1];
  vec[2] = values[2];
  vec[3] = values[3];
  return vec
};
goog.vec.Vec4.add = function(vec0, vec1, resultVec) {
  resultVec[0] = vec0[0] + vec1[0];
  resultVec[1] = vec0[1] + vec1[1];
  resultVec[2] = vec0[2] + vec1[2];
  resultVec[3] = vec0[3] + vec1[3];
  return resultVec
};
goog.vec.Vec4.subtract = function(vec0, vec1, resultVec) {
  resultVec[0] = vec0[0] - vec1[0];
  resultVec[1] = vec0[1] - vec1[1];
  resultVec[2] = vec0[2] - vec1[2];
  resultVec[3] = vec0[3] - vec1[3];
  return resultVec
};
goog.vec.Vec4.negate = function(vec0, resultVec) {
  resultVec[0] = -vec0[0];
  resultVec[1] = -vec0[1];
  resultVec[2] = -vec0[2];
  resultVec[3] = -vec0[3];
  return resultVec
};
goog.vec.Vec4.scale = function(vec0, scalar, resultVec) {
  resultVec[0] = vec0[0] * scalar;
  resultVec[1] = vec0[1] * scalar;
  resultVec[2] = vec0[2] * scalar;
  resultVec[3] = vec0[3] * scalar;
  return resultVec
};
goog.vec.Vec4.magnitudeSquared = function(vec0) {
  var x = vec0[0], y = vec0[1], z = vec0[2], w = vec0[3];
  return x * x + y * y + z * z + w * w
};
goog.vec.Vec4.magnitude = function(vec0) {
  var x = vec0[0], y = vec0[1], z = vec0[2], w = vec0[3];
  return Math.sqrt(x * x + y * y + z * z + w * w)
};
goog.vec.Vec4.normalize = function(vec0, resultVec) {
  var ilen = 1 / goog.vec.Vec4.magnitude(vec0);
  resultVec[0] = vec0[0] * ilen;
  resultVec[1] = vec0[1] * ilen;
  resultVec[2] = vec0[2] * ilen;
  resultVec[3] = vec0[3] * ilen;
  return resultVec
};
goog.vec.Vec4.dot = function(v0, v1) {
  return v0[0] * v1[0] + v0[1] * v1[1] + v0[2] * v1[2] + v0[3] * v1[3]
};
goog.vec.Vec4.lerp = function(v0, v1, f, resultVec) {
  var x = v0[0], y = v0[1], z = v0[2], w = v0[3];
  resultVec[0] = (v1[0] - x) * f + x;
  resultVec[1] = (v1[1] - y) * f + y;
  resultVec[2] = (v1[2] - z) * f + z;
  resultVec[3] = (v1[3] - w) * f + w;
  return resultVec
};
goog.vec.Vec4.equals = function(v0, v1) {
  return v0.length == v1.length && v0[0] == v1[0] && v0[1] == v1[1] && v0[2] == v1[2] && v0[3] == v1[3]
};
goog.provide("goog.vec.Mat4");
goog.require("goog.vec");
goog.require("goog.vec.Vec3");
goog.require("goog.vec.Vec4");
goog.vec.Mat4.Float32;
goog.vec.Mat4.Float64;
goog.vec.Mat4.Number;
goog.vec.Mat4.AnyType;
goog.vec.Mat4.Type;
goog.vec.Mat4.Mat4Like;
goog.vec.Mat4.createFloat32 = function() {
  return new Float32Array(16)
};
goog.vec.Mat4.createFloat64 = function() {
  return new Float64Array(16)
};
goog.vec.Mat4.createNumber = function() {
  var a = new Array(16);
  goog.vec.Mat4.setFromValues(a, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return a
};
goog.vec.Mat4.create = function() {
  return goog.vec.Mat4.createFloat32()
};
goog.vec.Mat4.createFloat32Identity = function() {
  var mat = goog.vec.Mat4.createFloat32();
  mat[0] = mat[5] = mat[10] = mat[15] = 1;
  return mat
};
goog.vec.Mat4.createFloat64Identity = function() {
  var mat = goog.vec.Mat4.createFloat64();
  mat[0] = mat[5] = mat[10] = mat[15] = 1;
  return mat
};
goog.vec.Mat4.createNumberIdentity = function() {
  var a = new Array(16);
  goog.vec.Mat4.setFromValues(a, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  return a
};
goog.vec.Mat4.createIdentity = function() {
  return goog.vec.Mat4.createFloat32Identity()
};
goog.vec.Mat4.createFloat32FromArray = function(matrix) {
  var newMatrix = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.setFromArray(newMatrix, matrix);
  return newMatrix
};
goog.vec.Mat4.createFloat32FromValues = function(v00, v10, v20, v30, v01, v11, v21, v31, v02, v12, v22, v32, v03, v13, v23, v33) {
  var newMatrix = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.setFromValues(newMatrix, v00, v10, v20, v30, v01, v11, v21, v31, v02, v12, v22, v32, v03, v13, v23, v33);
  return newMatrix
};
goog.vec.Mat4.cloneFloat32 = goog.vec.Mat4.createFloat32FromArray;
goog.vec.Mat4.createFloat64FromArray = function(matrix) {
  var newMatrix = goog.vec.Mat4.createFloat64();
  goog.vec.Mat4.setFromArray(newMatrix, matrix);
  return newMatrix
};
goog.vec.Mat4.createFloat64FromValues = function(v00, v10, v20, v30, v01, v11, v21, v31, v02, v12, v22, v32, v03, v13, v23, v33) {
  var newMatrix = goog.vec.Mat4.createFloat64();
  goog.vec.Mat4.setFromValues(newMatrix, v00, v10, v20, v30, v01, v11, v21, v31, v02, v12, v22, v32, v03, v13, v23, v33);
  return newMatrix
};
goog.vec.Mat4.cloneFloat64 = goog.vec.Mat4.createFloat64FromArray;
goog.vec.Mat4.createFromArray = function(matrix) {
  var newMatrix = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.setFromArray(newMatrix, matrix);
  return newMatrix
};
goog.vec.Mat4.createFromValues = function(v00, v10, v20, v30, v01, v11, v21, v31, v02, v12, v22, v32, v03, v13, v23, v33) {
  return goog.vec.Mat4.createFloat32FromValues(v00, v10, v20, v30, v01, v11, v21, v31, v02, v12, v22, v32, v03, v13, v23, v33)
};
goog.vec.Mat4.clone = goog.vec.Mat4.createFromArray;
goog.vec.Mat4.getElement = function(mat, row, column) {
  return mat[row + column * 4]
};
goog.vec.Mat4.setElement = function(mat, row, column, value) {
  mat[row + column * 4] = value;
  return mat
};
goog.vec.Mat4.setFromValues = function(mat, v00, v10, v20, v30, v01, v11, v21, v31, v02, v12, v22, v32, v03, v13, v23, v33) {
  mat[0] = v00;
  mat[1] = v10;
  mat[2] = v20;
  mat[3] = v30;
  mat[4] = v01;
  mat[5] = v11;
  mat[6] = v21;
  mat[7] = v31;
  mat[8] = v02;
  mat[9] = v12;
  mat[10] = v22;
  mat[11] = v32;
  mat[12] = v03;
  mat[13] = v13;
  mat[14] = v23;
  mat[15] = v33;
  return mat
};
goog.vec.Mat4.setFromArray = function(mat, values) {
  mat[0] = values[0];
  mat[1] = values[1];
  mat[2] = values[2];
  mat[3] = values[3];
  mat[4] = values[4];
  mat[5] = values[5];
  mat[6] = values[6];
  mat[7] = values[7];
  mat[8] = values[8];
  mat[9] = values[9];
  mat[10] = values[10];
  mat[11] = values[11];
  mat[12] = values[12];
  mat[13] = values[13];
  mat[14] = values[14];
  mat[15] = values[15];
  return mat
};
goog.vec.Mat4.setFromRowMajorArray = function(mat, values) {
  mat[0] = values[0];
  mat[1] = values[4];
  mat[2] = values[8];
  mat[3] = values[12];
  mat[4] = values[1];
  mat[5] = values[5];
  mat[6] = values[9];
  mat[7] = values[13];
  mat[8] = values[2];
  mat[9] = values[6];
  mat[10] = values[10];
  mat[11] = values[14];
  mat[12] = values[3];
  mat[13] = values[7];
  mat[14] = values[11];
  mat[15] = values[15];
  return mat
};
goog.vec.Mat4.setDiagonalValues = function(mat, v00, v11, v22, v33) {
  mat[0] = v00;
  mat[5] = v11;
  mat[10] = v22;
  mat[15] = v33;
  return mat
};
goog.vec.Mat4.setDiagonal = function(mat, vec) {
  mat[0] = vec[0];
  mat[5] = vec[1];
  mat[10] = vec[2];
  mat[15] = vec[3];
  return mat
};
goog.vec.Mat4.getDiagonal = function(mat, vec, opt_diagonal) {
  if(!opt_diagonal) {
    vec[0] = mat[0];
    vec[1] = mat[5];
    vec[2] = mat[10];
    vec[3] = mat[15]
  }else {
    var offset = opt_diagonal > 0 ? 4 * opt_diagonal : -opt_diagonal;
    for(var i = 0;i < 4 - Math.abs(opt_diagonal);i++) {
      vec[i] = mat[offset + 5 * i]
    }
  }
  return vec
};
goog.vec.Mat4.setColumnValues = function(mat, column, v0, v1, v2, v3) {
  var i = column * 4;
  mat[i] = v0;
  mat[i + 1] = v1;
  mat[i + 2] = v2;
  mat[i + 3] = v3;
  return mat
};
goog.vec.Mat4.setColumn = function(mat, column, vec) {
  var i = column * 4;
  mat[i] = vec[0];
  mat[i + 1] = vec[1];
  mat[i + 2] = vec[2];
  mat[i + 3] = vec[3];
  return mat
};
goog.vec.Mat4.getColumn = function(mat, column, vec) {
  var i = column * 4;
  vec[0] = mat[i];
  vec[1] = mat[i + 1];
  vec[2] = mat[i + 2];
  vec[3] = mat[i + 3];
  return vec
};
goog.vec.Mat4.setColumns = function(mat, vec0, vec1, vec2, vec3) {
  goog.vec.Mat4.setColumn(mat, 0, vec0);
  goog.vec.Mat4.setColumn(mat, 1, vec1);
  goog.vec.Mat4.setColumn(mat, 2, vec2);
  goog.vec.Mat4.setColumn(mat, 3, vec3);
  return mat
};
goog.vec.Mat4.getColumns = function(mat, vec0, vec1, vec2, vec3) {
  goog.vec.Mat4.getColumn(mat, 0, vec0);
  goog.vec.Mat4.getColumn(mat, 1, vec1);
  goog.vec.Mat4.getColumn(mat, 2, vec2);
  goog.vec.Mat4.getColumn(mat, 3, vec3)
};
goog.vec.Mat4.setRowValues = function(mat, row, v0, v1, v2, v3) {
  mat[row] = v0;
  mat[row + 4] = v1;
  mat[row + 8] = v2;
  mat[row + 12] = v3;
  return mat
};
goog.vec.Mat4.setRow = function(mat, row, vec) {
  mat[row] = vec[0];
  mat[row + 4] = vec[1];
  mat[row + 8] = vec[2];
  mat[row + 12] = vec[3];
  return mat
};
goog.vec.Mat4.getRow = function(mat, row, vec) {
  vec[0] = mat[row];
  vec[1] = mat[row + 4];
  vec[2] = mat[row + 8];
  vec[3] = mat[row + 12];
  return vec
};
goog.vec.Mat4.setRows = function(mat, vec0, vec1, vec2, vec3) {
  goog.vec.Mat4.setRow(mat, 0, vec0);
  goog.vec.Mat4.setRow(mat, 1, vec1);
  goog.vec.Mat4.setRow(mat, 2, vec2);
  goog.vec.Mat4.setRow(mat, 3, vec3);
  return mat
};
goog.vec.Mat4.getRows = function(mat, vec0, vec1, vec2, vec3) {
  goog.vec.Mat4.getRow(mat, 0, vec0);
  goog.vec.Mat4.getRow(mat, 1, vec1);
  goog.vec.Mat4.getRow(mat, 2, vec2);
  goog.vec.Mat4.getRow(mat, 3, vec3)
};
goog.vec.Mat4.makeZero = function(mat) {
  mat[0] = 0;
  mat[1] = 0;
  mat[2] = 0;
  mat[3] = 0;
  mat[4] = 0;
  mat[5] = 0;
  mat[6] = 0;
  mat[7] = 0;
  mat[8] = 0;
  mat[9] = 0;
  mat[10] = 0;
  mat[11] = 0;
  mat[12] = 0;
  mat[13] = 0;
  mat[14] = 0;
  mat[15] = 0;
  return mat
};
goog.vec.Mat4.makeIdentity = function(mat) {
  mat[0] = 1;
  mat[1] = 0;
  mat[2] = 0;
  mat[3] = 0;
  mat[4] = 0;
  mat[5] = 1;
  mat[6] = 0;
  mat[7] = 0;
  mat[8] = 0;
  mat[9] = 0;
  mat[10] = 1;
  mat[11] = 0;
  mat[12] = 0;
  mat[13] = 0;
  mat[14] = 0;
  mat[15] = 1;
  return mat
};
goog.vec.Mat4.addMat = function(mat0, mat1, resultMat) {
  resultMat[0] = mat0[0] + mat1[0];
  resultMat[1] = mat0[1] + mat1[1];
  resultMat[2] = mat0[2] + mat1[2];
  resultMat[3] = mat0[3] + mat1[3];
  resultMat[4] = mat0[4] + mat1[4];
  resultMat[5] = mat0[5] + mat1[5];
  resultMat[6] = mat0[6] + mat1[6];
  resultMat[7] = mat0[7] + mat1[7];
  resultMat[8] = mat0[8] + mat1[8];
  resultMat[9] = mat0[9] + mat1[9];
  resultMat[10] = mat0[10] + mat1[10];
  resultMat[11] = mat0[11] + mat1[11];
  resultMat[12] = mat0[12] + mat1[12];
  resultMat[13] = mat0[13] + mat1[13];
  resultMat[14] = mat0[14] + mat1[14];
  resultMat[15] = mat0[15] + mat1[15];
  return resultMat
};
goog.vec.Mat4.subMat = function(mat0, mat1, resultMat) {
  resultMat[0] = mat0[0] - mat1[0];
  resultMat[1] = mat0[1] - mat1[1];
  resultMat[2] = mat0[2] - mat1[2];
  resultMat[3] = mat0[3] - mat1[3];
  resultMat[4] = mat0[4] - mat1[4];
  resultMat[5] = mat0[5] - mat1[5];
  resultMat[6] = mat0[6] - mat1[6];
  resultMat[7] = mat0[7] - mat1[7];
  resultMat[8] = mat0[8] - mat1[8];
  resultMat[9] = mat0[9] - mat1[9];
  resultMat[10] = mat0[10] - mat1[10];
  resultMat[11] = mat0[11] - mat1[11];
  resultMat[12] = mat0[12] - mat1[12];
  resultMat[13] = mat0[13] - mat1[13];
  resultMat[14] = mat0[14] - mat1[14];
  resultMat[15] = mat0[15] - mat1[15];
  return resultMat
};
goog.vec.Mat4.multScalar = function(mat, scalar, resultMat) {
  resultMat[0] = mat[0] * scalar;
  resultMat[1] = mat[1] * scalar;
  resultMat[2] = mat[2] * scalar;
  resultMat[3] = mat[3] * scalar;
  resultMat[4] = mat[4] * scalar;
  resultMat[5] = mat[5] * scalar;
  resultMat[6] = mat[6] * scalar;
  resultMat[7] = mat[7] * scalar;
  resultMat[8] = mat[8] * scalar;
  resultMat[9] = mat[9] * scalar;
  resultMat[10] = mat[10] * scalar;
  resultMat[11] = mat[11] * scalar;
  resultMat[12] = mat[12] * scalar;
  resultMat[13] = mat[13] * scalar;
  resultMat[14] = mat[14] * scalar;
  resultMat[15] = mat[15] * scalar;
  return resultMat
};
goog.vec.Mat4.multMat = function(mat0, mat1, resultMat) {
  var a00 = mat0[0], a10 = mat0[1], a20 = mat0[2], a30 = mat0[3];
  var a01 = mat0[4], a11 = mat0[5], a21 = mat0[6], a31 = mat0[7];
  var a02 = mat0[8], a12 = mat0[9], a22 = mat0[10], a32 = mat0[11];
  var a03 = mat0[12], a13 = mat0[13], a23 = mat0[14], a33 = mat0[15];
  var b00 = mat1[0], b10 = mat1[1], b20 = mat1[2], b30 = mat1[3];
  var b01 = mat1[4], b11 = mat1[5], b21 = mat1[6], b31 = mat1[7];
  var b02 = mat1[8], b12 = mat1[9], b22 = mat1[10], b32 = mat1[11];
  var b03 = mat1[12], b13 = mat1[13], b23 = mat1[14], b33 = mat1[15];
  resultMat[0] = a00 * b00 + a01 * b10 + a02 * b20 + a03 * b30;
  resultMat[1] = a10 * b00 + a11 * b10 + a12 * b20 + a13 * b30;
  resultMat[2] = a20 * b00 + a21 * b10 + a22 * b20 + a23 * b30;
  resultMat[3] = a30 * b00 + a31 * b10 + a32 * b20 + a33 * b30;
  resultMat[4] = a00 * b01 + a01 * b11 + a02 * b21 + a03 * b31;
  resultMat[5] = a10 * b01 + a11 * b11 + a12 * b21 + a13 * b31;
  resultMat[6] = a20 * b01 + a21 * b11 + a22 * b21 + a23 * b31;
  resultMat[7] = a30 * b01 + a31 * b11 + a32 * b21 + a33 * b31;
  resultMat[8] = a00 * b02 + a01 * b12 + a02 * b22 + a03 * b32;
  resultMat[9] = a10 * b02 + a11 * b12 + a12 * b22 + a13 * b32;
  resultMat[10] = a20 * b02 + a21 * b12 + a22 * b22 + a23 * b32;
  resultMat[11] = a30 * b02 + a31 * b12 + a32 * b22 + a33 * b32;
  resultMat[12] = a00 * b03 + a01 * b13 + a02 * b23 + a03 * b33;
  resultMat[13] = a10 * b03 + a11 * b13 + a12 * b23 + a13 * b33;
  resultMat[14] = a20 * b03 + a21 * b13 + a22 * b23 + a23 * b33;
  resultMat[15] = a30 * b03 + a31 * b13 + a32 * b23 + a33 * b33;
  return resultMat
};
goog.vec.Mat4.transpose = function(mat, resultMat) {
  if(resultMat == mat) {
    var a10 = mat[1], a20 = mat[2], a30 = mat[3];
    var a21 = mat[6], a31 = mat[7];
    var a32 = mat[11];
    resultMat[1] = mat[4];
    resultMat[2] = mat[8];
    resultMat[3] = mat[12];
    resultMat[4] = a10;
    resultMat[6] = mat[9];
    resultMat[7] = mat[13];
    resultMat[8] = a20;
    resultMat[9] = a21;
    resultMat[11] = mat[14];
    resultMat[12] = a30;
    resultMat[13] = a31;
    resultMat[14] = a32
  }else {
    resultMat[0] = mat[0];
    resultMat[1] = mat[4];
    resultMat[2] = mat[8];
    resultMat[3] = mat[12];
    resultMat[4] = mat[1];
    resultMat[5] = mat[5];
    resultMat[6] = mat[9];
    resultMat[7] = mat[13];
    resultMat[8] = mat[2];
    resultMat[9] = mat[6];
    resultMat[10] = mat[10];
    resultMat[11] = mat[14];
    resultMat[12] = mat[3];
    resultMat[13] = mat[7];
    resultMat[14] = mat[11];
    resultMat[15] = mat[15]
  }
  return resultMat
};
goog.vec.Mat4.determinant = function(mat) {
  var m00 = mat[0], m10 = mat[1], m20 = mat[2], m30 = mat[3];
  var m01 = mat[4], m11 = mat[5], m21 = mat[6], m31 = mat[7];
  var m02 = mat[8], m12 = mat[9], m22 = mat[10], m32 = mat[11];
  var m03 = mat[12], m13 = mat[13], m23 = mat[14], m33 = mat[15];
  var a0 = m00 * m11 - m10 * m01;
  var a1 = m00 * m21 - m20 * m01;
  var a2 = m00 * m31 - m30 * m01;
  var a3 = m10 * m21 - m20 * m11;
  var a4 = m10 * m31 - m30 * m11;
  var a5 = m20 * m31 - m30 * m21;
  var b0 = m02 * m13 - m12 * m03;
  var b1 = m02 * m23 - m22 * m03;
  var b2 = m02 * m33 - m32 * m03;
  var b3 = m12 * m23 - m22 * m13;
  var b4 = m12 * m33 - m32 * m13;
  var b5 = m22 * m33 - m32 * m23;
  return a0 * b5 - a1 * b4 + a2 * b3 + a3 * b2 - a4 * b1 + a5 * b0
};
goog.vec.Mat4.invert = function(mat, resultMat) {
  var m00 = mat[0], m10 = mat[1], m20 = mat[2], m30 = mat[3];
  var m01 = mat[4], m11 = mat[5], m21 = mat[6], m31 = mat[7];
  var m02 = mat[8], m12 = mat[9], m22 = mat[10], m32 = mat[11];
  var m03 = mat[12], m13 = mat[13], m23 = mat[14], m33 = mat[15];
  var a0 = m00 * m11 - m10 * m01;
  var a1 = m00 * m21 - m20 * m01;
  var a2 = m00 * m31 - m30 * m01;
  var a3 = m10 * m21 - m20 * m11;
  var a4 = m10 * m31 - m30 * m11;
  var a5 = m20 * m31 - m30 * m21;
  var b0 = m02 * m13 - m12 * m03;
  var b1 = m02 * m23 - m22 * m03;
  var b2 = m02 * m33 - m32 * m03;
  var b3 = m12 * m23 - m22 * m13;
  var b4 = m12 * m33 - m32 * m13;
  var b5 = m22 * m33 - m32 * m23;
  var det = a0 * b5 - a1 * b4 + a2 * b3 + a3 * b2 - a4 * b1 + a5 * b0;
  if(det == 0) {
    return false
  }
  var idet = 1 / det;
  resultMat[0] = (m11 * b5 - m21 * b4 + m31 * b3) * idet;
  resultMat[1] = (-m10 * b5 + m20 * b4 - m30 * b3) * idet;
  resultMat[2] = (m13 * a5 - m23 * a4 + m33 * a3) * idet;
  resultMat[3] = (-m12 * a5 + m22 * a4 - m32 * a3) * idet;
  resultMat[4] = (-m01 * b5 + m21 * b2 - m31 * b1) * idet;
  resultMat[5] = (m00 * b5 - m20 * b2 + m30 * b1) * idet;
  resultMat[6] = (-m03 * a5 + m23 * a2 - m33 * a1) * idet;
  resultMat[7] = (m02 * a5 - m22 * a2 + m32 * a1) * idet;
  resultMat[8] = (m01 * b4 - m11 * b2 + m31 * b0) * idet;
  resultMat[9] = (-m00 * b4 + m10 * b2 - m30 * b0) * idet;
  resultMat[10] = (m03 * a4 - m13 * a2 + m33 * a0) * idet;
  resultMat[11] = (-m02 * a4 + m12 * a2 - m32 * a0) * idet;
  resultMat[12] = (-m01 * b3 + m11 * b1 - m21 * b0) * idet;
  resultMat[13] = (m00 * b3 - m10 * b1 + m20 * b0) * idet;
  resultMat[14] = (-m03 * a3 + m13 * a1 - m23 * a0) * idet;
  resultMat[15] = (m02 * a3 - m12 * a1 + m22 * a0) * idet;
  return true
};
goog.vec.Mat4.equals = function(mat0, mat1) {
  return mat0.length == mat1.length && mat0[0] == mat1[0] && mat0[1] == mat1[1] && mat0[2] == mat1[2] && mat0[3] == mat1[3] && mat0[4] == mat1[4] && mat0[5] == mat1[5] && mat0[6] == mat1[6] && mat0[7] == mat1[7] && mat0[8] == mat1[8] && mat0[9] == mat1[9] && mat0[10] == mat1[10] && mat0[11] == mat1[11] && mat0[12] == mat1[12] && mat0[13] == mat1[13] && mat0[14] == mat1[14] && mat0[15] == mat1[15]
};
goog.vec.Mat4.multVec3 = function(mat, vec, resultVec) {
  var x = vec[0], y = vec[1], z = vec[2];
  resultVec[0] = x * mat[0] + y * mat[4] + z * mat[8] + mat[12];
  resultVec[1] = x * mat[1] + y * mat[5] + z * mat[9] + mat[13];
  resultVec[2] = x * mat[2] + y * mat[6] + z * mat[10] + mat[14];
  return resultVec
};
goog.vec.Mat4.multVec3NoTranslate = function(mat, vec, resultVec) {
  var x = vec[0], y = vec[1], z = vec[2];
  resultVec[0] = x * mat[0] + y * mat[4] + z * mat[8];
  resultVec[1] = x * mat[1] + y * mat[5] + z * mat[9];
  resultVec[2] = x * mat[2] + y * mat[6] + z * mat[10];
  return resultVec
};
goog.vec.Mat4.multVec3Projective = function(mat, vec, resultVec) {
  var x = vec[0], y = vec[1], z = vec[2];
  var invw = 1 / (x * mat[3] + y * mat[7] + z * mat[11] + mat[15]);
  resultVec[0] = (x * mat[0] + y * mat[4] + z * mat[8] + mat[12]) * invw;
  resultVec[1] = (x * mat[1] + y * mat[5] + z * mat[9] + mat[13]) * invw;
  resultVec[2] = (x * mat[2] + y * mat[6] + z * mat[10] + mat[14]) * invw;
  return resultVec
};
goog.vec.Mat4.multVec4 = function(mat, vec, resultVec) {
  var x = vec[0], y = vec[1], z = vec[2], w = vec[3];
  resultVec[0] = x * mat[0] + y * mat[4] + z * mat[8] + w * mat[12];
  resultVec[1] = x * mat[1] + y * mat[5] + z * mat[9] + w * mat[13];
  resultVec[2] = x * mat[2] + y * mat[6] + z * mat[10] + w * mat[14];
  resultVec[3] = x * mat[3] + y * mat[7] + z * mat[11] + w * mat[15];
  return resultVec
};
goog.vec.Mat4.makeTranslate = function(mat, x, y, z) {
  goog.vec.Mat4.makeIdentity(mat);
  return goog.vec.Mat4.setColumnValues(mat, 3, x, y, z, 1)
};
goog.vec.Mat4.makeScale = function(mat, x, y, z) {
  goog.vec.Mat4.makeIdentity(mat);
  return goog.vec.Mat4.setDiagonalValues(mat, x, y, z, 1)
};
goog.vec.Mat4.makeRotate = function(mat, angle, ax, ay, az) {
  var c = Math.cos(angle);
  var d = 1 - c;
  var s = Math.sin(angle);
  return goog.vec.Mat4.setFromValues(mat, ax * ax * d + c, ax * ay * d + az * s, ax * az * d - ay * s, 0, ax * ay * d - az * s, ay * ay * d + c, ay * az * d + ax * s, 0, ax * az * d + ay * s, ay * az * d - ax * s, az * az * d + c, 0, 0, 0, 0, 1)
};
goog.vec.Mat4.makeRotateX = function(mat, angle) {
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  return goog.vec.Mat4.setFromValues(mat, 1, 0, 0, 0, 0, c, s, 0, 0, -s, c, 0, 0, 0, 0, 1)
};
goog.vec.Mat4.makeRotateY = function(mat, angle) {
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  return goog.vec.Mat4.setFromValues(mat, c, 0, -s, 0, 0, 1, 0, 0, s, 0, c, 0, 0, 0, 0, 1)
};
goog.vec.Mat4.makeRotateZ = function(mat, angle) {
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  return goog.vec.Mat4.setFromValues(mat, c, s, 0, 0, -s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
};
goog.vec.Mat4.makeFrustum = function(mat, left, right, bottom, top, near, far) {
  var x = 2 * near / (right - left);
  var y = 2 * near / (top - bottom);
  var a = (right + left) / (right - left);
  var b = (top + bottom) / (top - bottom);
  var c = -(far + near) / (far - near);
  var d = -(2 * far * near) / (far - near);
  return goog.vec.Mat4.setFromValues(mat, x, 0, 0, 0, 0, y, 0, 0, a, b, c, -1, 0, 0, d, 0)
};
goog.vec.Mat4.makePerspective = function(mat, fovy, aspect, near, far) {
  var angle = fovy / 2;
  var dz = far - near;
  var sinAngle = Math.sin(angle);
  if(dz == 0 || sinAngle == 0 || aspect == 0) {
    return mat
  }
  var cot = Math.cos(angle) / sinAngle;
  return goog.vec.Mat4.setFromValues(mat, cot / aspect, 0, 0, 0, 0, cot, 0, 0, 0, 0, -(far + near) / dz, -1, 0, 0, -(2 * near * far) / dz, 0)
};
goog.vec.Mat4.makeOrtho = function(mat, left, right, bottom, top, near, far) {
  var x = 2 / (right - left);
  var y = 2 / (top - bottom);
  var z = -2 / (far - near);
  var a = -(right + left) / (right - left);
  var b = -(top + bottom) / (top - bottom);
  var c = -(far + near) / (far - near);
  return goog.vec.Mat4.setFromValues(mat, x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, a, b, c, 1)
};
goog.vec.Mat4.makeLookAt = function(mat, eyePt, centerPt, worldUpVec) {
  var fwdVec = goog.vec.Mat4.tmpVec4_[0];
  goog.vec.Vec3.subtract(centerPt, eyePt, fwdVec);
  goog.vec.Vec3.normalize(fwdVec, fwdVec);
  fwdVec[3] = 0;
  var sideVec = goog.vec.Mat4.tmpVec4_[1];
  goog.vec.Vec3.cross(fwdVec, worldUpVec, sideVec);
  goog.vec.Vec3.normalize(sideVec, sideVec);
  sideVec[3] = 0;
  var upVec = goog.vec.Mat4.tmpVec4_[2];
  goog.vec.Vec3.cross(sideVec, fwdVec, upVec);
  goog.vec.Vec3.normalize(upVec, upVec);
  upVec[3] = 0;
  goog.vec.Vec3.negate(fwdVec, fwdVec);
  goog.vec.Mat4.setRow(mat, 0, sideVec);
  goog.vec.Mat4.setRow(mat, 1, upVec);
  goog.vec.Mat4.setRow(mat, 2, fwdVec);
  goog.vec.Mat4.setRowValues(mat, 3, 0, 0, 0, 1);
  goog.vec.Mat4.translate(mat, -eyePt[0], -eyePt[1], -eyePt[2]);
  return mat
};
goog.vec.Mat4.toLookAt = function(mat, eyePt, fwdVec, worldUpVec) {
  var matInverse = goog.vec.Mat4.tmpMat4_[0];
  if(!goog.vec.Mat4.invert(mat, matInverse)) {
    return false
  }
  if(eyePt) {
    eyePt[0] = matInverse[12];
    eyePt[1] = matInverse[13];
    eyePt[2] = matInverse[14]
  }
  if(fwdVec || worldUpVec) {
    if(!fwdVec) {
      fwdVec = goog.vec.Mat4.tmpVec3_[0]
    }
    fwdVec[0] = -mat[2];
    fwdVec[1] = -mat[6];
    fwdVec[2] = -mat[10];
    goog.vec.Vec3.normalize(fwdVec, fwdVec)
  }
  if(worldUpVec) {
    var side = goog.vec.Mat4.tmpVec3_[1];
    side[0] = mat[0];
    side[1] = mat[4];
    side[2] = mat[8];
    goog.vec.Vec3.cross(side, fwdVec, worldUpVec);
    goog.vec.Vec3.normalize(worldUpVec, worldUpVec)
  }
  return true
};
goog.vec.Mat4.makeEulerZXZ = function(mat, theta1, theta2, theta3) {
  var c1 = Math.cos(theta1);
  var s1 = Math.sin(theta1);
  var c2 = Math.cos(theta2);
  var s2 = Math.sin(theta2);
  var c3 = Math.cos(theta3);
  var s3 = Math.sin(theta3);
  mat[0] = c1 * c3 - c2 * s1 * s3;
  mat[1] = c2 * c1 * s3 + c3 * s1;
  mat[2] = s3 * s2;
  mat[3] = 0;
  mat[4] = -c1 * s3 - c3 * c2 * s1;
  mat[5] = c1 * c2 * c3 - s1 * s3;
  mat[6] = c3 * s2;
  mat[7] = 0;
  mat[8] = s2 * s1;
  mat[9] = -c1 * s2;
  mat[10] = c2;
  mat[11] = 0;
  mat[12] = 0;
  mat[13] = 0;
  mat[14] = 0;
  mat[15] = 1;
  return mat
};
goog.vec.Mat4.toEulerZXZ = function(mat, euler, opt_theta2IsNegative) {
  var sinTheta2 = Math.sqrt(mat[2] * mat[2] + mat[6] * mat[6]);
  var signTheta2 = opt_theta2IsNegative ? -1 : 1;
  if(sinTheta2 > goog.vec.EPSILON) {
    euler[2] = Math.atan2(mat[2] * signTheta2, mat[6] * signTheta2);
    euler[1] = Math.atan2(sinTheta2 * signTheta2, mat[10]);
    euler[0] = Math.atan2(mat[8] * signTheta2, -mat[9] * signTheta2)
  }else {
    euler[0] = 0;
    euler[1] = Math.atan2(sinTheta2 * signTheta2, mat[10]);
    euler[2] = Math.atan2(mat[1], mat[0])
  }
  euler[0] = (euler[0] + Math.PI * 2) % (Math.PI * 2);
  euler[2] = (euler[2] + Math.PI * 2) % (Math.PI * 2);
  euler[1] = (euler[1] * signTheta2 + Math.PI * 2) % (Math.PI * 2) * signTheta2;
  return euler
};
goog.vec.Mat4.translate = function(mat, x, y, z) {
  return goog.vec.Mat4.setColumnValues(mat, 3, mat[0] * x + mat[4] * y + mat[8] * z + mat[12], mat[1] * x + mat[5] * y + mat[9] * z + mat[13], mat[2] * x + mat[6] * y + mat[10] * z + mat[14], mat[3] * x + mat[7] * y + mat[11] * z + mat[15])
};
goog.vec.Mat4.scale = function(mat, x, y, z) {
  return goog.vec.Mat4.setFromValues(mat, mat[0] * x, mat[1] * x, mat[2] * x, mat[3] * x, mat[4] * y, mat[5] * y, mat[6] * y, mat[7] * y, mat[8] * z, mat[9] * z, mat[10] * z, mat[11] * z, mat[12], mat[13], mat[14], mat[15])
};
goog.vec.Mat4.rotate = function(mat, angle, x, y, z) {
  var m00 = mat[0], m10 = mat[1], m20 = mat[2], m30 = mat[3];
  var m01 = mat[4], m11 = mat[5], m21 = mat[6], m31 = mat[7];
  var m02 = mat[8], m12 = mat[9], m22 = mat[10], m32 = mat[11];
  var m03 = mat[12], m13 = mat[13], m23 = mat[14], m33 = mat[15];
  var cosAngle = Math.cos(angle);
  var sinAngle = Math.sin(angle);
  var diffCosAngle = 1 - cosAngle;
  var r00 = x * x * diffCosAngle + cosAngle;
  var r10 = x * y * diffCosAngle + z * sinAngle;
  var r20 = x * z * diffCosAngle - y * sinAngle;
  var r01 = x * y * diffCosAngle - z * sinAngle;
  var r11 = y * y * diffCosAngle + cosAngle;
  var r21 = y * z * diffCosAngle + x * sinAngle;
  var r02 = x * z * diffCosAngle + y * sinAngle;
  var r12 = y * z * diffCosAngle - x * sinAngle;
  var r22 = z * z * diffCosAngle + cosAngle;
  return goog.vec.Mat4.setFromValues(mat, m00 * r00 + m01 * r10 + m02 * r20, m10 * r00 + m11 * r10 + m12 * r20, m20 * r00 + m21 * r10 + m22 * r20, m30 * r00 + m31 * r10 + m32 * r20, m00 * r01 + m01 * r11 + m02 * r21, m10 * r01 + m11 * r11 + m12 * r21, m20 * r01 + m21 * r11 + m22 * r21, m30 * r01 + m31 * r11 + m32 * r21, m00 * r02 + m01 * r12 + m02 * r22, m10 * r02 + m11 * r12 + m12 * r22, m20 * r02 + m21 * r12 + m22 * r22, m30 * r02 + m31 * r12 + m32 * r22, m03, m13, m23, m33)
};
goog.vec.Mat4.rotateX = function(mat, angle) {
  var m01 = mat[4], m11 = mat[5], m21 = mat[6], m31 = mat[7];
  var m02 = mat[8], m12 = mat[9], m22 = mat[10], m32 = mat[11];
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  mat[4] = m01 * c + m02 * s;
  mat[5] = m11 * c + m12 * s;
  mat[6] = m21 * c + m22 * s;
  mat[7] = m31 * c + m32 * s;
  mat[8] = m01 * -s + m02 * c;
  mat[9] = m11 * -s + m12 * c;
  mat[10] = m21 * -s + m22 * c;
  mat[11] = m31 * -s + m32 * c;
  return mat
};
goog.vec.Mat4.rotateY = function(mat, angle) {
  var m00 = mat[0], m10 = mat[1], m20 = mat[2], m30 = mat[3];
  var m02 = mat[8], m12 = mat[9], m22 = mat[10], m32 = mat[11];
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  mat[0] = m00 * c + m02 * -s;
  mat[1] = m10 * c + m12 * -s;
  mat[2] = m20 * c + m22 * -s;
  mat[3] = m30 * c + m32 * -s;
  mat[8] = m00 * s + m02 * c;
  mat[9] = m10 * s + m12 * c;
  mat[10] = m20 * s + m22 * c;
  mat[11] = m30 * s + m32 * c;
  return mat
};
goog.vec.Mat4.rotateZ = function(mat, angle) {
  var m00 = mat[0], m10 = mat[1], m20 = mat[2], m30 = mat[3];
  var m01 = mat[4], m11 = mat[5], m21 = mat[6], m31 = mat[7];
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  mat[0] = m00 * c + m01 * s;
  mat[1] = m10 * c + m11 * s;
  mat[2] = m20 * c + m21 * s;
  mat[3] = m30 * c + m31 * s;
  mat[4] = m00 * -s + m01 * c;
  mat[5] = m10 * -s + m11 * c;
  mat[6] = m20 * -s + m21 * c;
  mat[7] = m30 * -s + m31 * c;
  return mat
};
goog.vec.Mat4.getTranslation = function(mat, translation) {
  translation[0] = mat[12];
  translation[1] = mat[13];
  translation[2] = mat[14];
  return translation
};
goog.vec.Mat4.tmpVec3_ = [goog.vec.Vec3.createFloat64(), goog.vec.Vec3.createFloat64()];
goog.vec.Mat4.tmpVec4_ = [goog.vec.Vec4.createFloat64(), goog.vec.Vec4.createFloat64(), goog.vec.Vec4.createFloat64()];
goog.vec.Mat4.tmpMat4_ = [goog.vec.Mat4.createFloat64()];
goog.provide("X.matrix");
goog.require("X.vector");
goog.require("goog.vec.Mat4");
X.matrix.makeLookAt = function(mat, eyePt, centerPt, worldUpVec) {
  var fwdVec = centerPt.subtract(eyePt);
  fwdVec.normalize();
  var sideVec = X.vector.cross(fwdVec, worldUpVec);
  sideVec.normalize();
  var upVec = X.vector.cross(sideVec, fwdVec);
  upVec.normalize();
  fwdVec.invert();
  goog.vec.Mat4.setRowValues(mat, 0, sideVec.x, sideVec.y, sideVec.z, 0);
  goog.vec.Mat4.setRowValues(mat, 1, upVec.x, upVec.y, upVec.z, 0);
  goog.vec.Mat4.setRowValues(mat, 2, fwdVec.x, fwdVec.y, fwdVec.z, 0);
  goog.vec.Mat4.translate(mat, -eyePt.x, -eyePt.y, -eyePt.z);
  return mat
};
X.matrix.multiplyByVector = function(mat, x, y, z) {
  var invw = 1 / (x * mat[3] + y * mat[7] + z * mat[11] + mat[15]);
  var _x = (x * mat[0] + y * mat[4] + z * mat[8] + mat[12]) * invw;
  var _y = (x * mat[1] + y * mat[5] + z * mat[9] + mat[13]) * invw;
  var _z = (x * mat[2] + y * mat[6] + z * mat[10] + mat[14]) * invw;
  return new X.vector(_x, _y, _z)
};
X.matrix.swapRows = function(mat, row1, row2) {
  var _buffer1 = new Float32Array(4);
  var _buffer2 = new Float32Array(4);
  goog.vec.Mat4.getRow(mat, row1, _buffer1);
  goog.vec.Mat4.getRow(mat, row2, _buffer2);
  goog.vec.Mat4.setRow(mat, row1, _buffer2);
  goog.vec.Mat4.setRow(mat, row2, _buffer1);
  return mat
};
X.matrix.swapCols = function(mat, col1, col2) {
  var _buffer1 = new Float32Array(4);
  var _buffer2 = new Float32Array(4);
  goog.vec.Mat4.getColumn(mat, col1, _buffer1);
  goog.vec.Mat4.getColumn(mat, col2, _buffer2);
  goog.vec.Mat4.setColumn(mat, col1, _buffer2);
  goog.vec.Mat4.setColumn(mat, col2, _buffer1);
  return mat
};
X.matrix.identity = goog.vec.Mat4.createFloat32Identity;
X.matrix.clone = goog.vec.Mat4.cloneFloat32;
X.matrix.transpose = goog.vec.Mat4.transpose;
X.matrix.determinant = goog.vec.Mat4.determinant;
X.matrix.invert = goog.vec.Mat4.invert;
X.matrix.makePerspective = goog.vec.Mat4.makePerspective;
X.matrix.makeFrustum = goog.vec.Mat4.makeFrustum;
X.matrix.makeOrtho = goog.vec.Mat4.makeOrtho;
X.matrix.multiply = goog.vec.Mat4.multMat;
X.matrix.multiplyByVec4 = goog.vec.Mat4.multVec4;
X.matrix.translate = goog.vec.Mat4.translate;
X.matrix.scale = goog.vec.Mat4.scale;
X.matrix.rotate = goog.vec.Mat4.rotate;
X.matrix.rotateX = goog.vec.Mat4.rotateX;
X.matrix.rotateY = goog.vec.Mat4.rotateY;
X.matrix.rotateZ = goog.vec.Mat4.rotateZ;
goog.exportSymbol("X.matrix.identity", X.matrix.identity);
goog.exportSymbol("X.matrix.clone", X.matrix.clone);
goog.exportSymbol("X.matrix.transpose", X.matrix.transpose);
goog.exportSymbol("X.matrix.determinant", X.matrix.determinant);
goog.exportSymbol("X.matrix.invert", X.matrix.invert);
goog.exportSymbol("X.matrix.multiply", X.matrix.multiply);
goog.exportSymbol("X.matrix.multiplyByVector", X.matrix.multiplyByVector);
goog.exportSymbol("X.matrix.multiplyByVec4", X.matrix.multiplyByVec4);
goog.exportSymbol("X.matrix.makePerspective", X.matrix.makePerspective);
goog.exportSymbol("X.matrix.makeFrustum", X.matrix.makeFrustum);
goog.exportSymbol("X.matrix.makeOrtho", X.matrix.makeOrtho);
goog.exportSymbol("X.matrix.makeLookAt", X.matrix.makeLookAt);
goog.exportSymbol("X.matrix.translate", X.matrix.translate);
goog.exportSymbol("X.matrix.scale", X.matrix.scale);
goog.exportSymbol("X.matrix.rotate", X.matrix.rotate);
goog.exportSymbol("X.matrix.rotateX", X.matrix.rotateX);
goog.exportSymbol("X.matrix.rotateY", X.matrix.rotateY);
goog.exportSymbol("X.matrix.rotateZ", X.matrix.rotateZ);
goog.exportSymbol("X.matrix.swapRows", X.matrix.swapRows);
goog.exportSymbol("X.matrix.swapCols", X.matrix.swapCols);
goog.provide("X.transform");
goog.require("X.base");
goog.require("X.matrix");
X.transform = function() {
  goog.base(this);
  this._classname = "transform";
  this._matrix = X.matrix.identity()
};
goog.inherits(X.transform, X.base);
X.transform.prototype.__defineGetter__("matrix", function() {
  return this._matrix
});
X.transform.prototype.__defineSetter__("matrix", function(matrix) {
  if(!goog.isDefAndNotNull(matrix) || !(matrix instanceof Float32Array)) {
    throw new Error("Invalid matrix.");
  }
  this._matrix = matrix;
  this.modified()
});
X.transform.prototype.rotateX = function(angle) {
  if(!goog.isNumber(angle) || angle < -360 || angle > 360) {
    throw new Error("Invalid angle.");
  }
  var angleInRadii = angle * Math.PI / 180;
  X.matrix.rotateX(this._matrix, angleInRadii);
  this.modified()
};
X.transform.prototype.rotateY = function(angle) {
  if(!goog.isNumber(angle) || angle < -360 || angle > 360) {
    throw new Error("Invalid angle.");
  }
  var angleInRadii = angle * Math.PI / 180;
  X.matrix.rotateY(this._matrix, angleInRadii);
  this.modified()
};
X.transform.prototype.rotateZ = function(angle) {
  if(!goog.isNumber(angle) || angle < -360 || angle > 360) {
    throw new Error("Invalid angle.");
  }
  var angleInRadii = angle * Math.PI / 180;
  X.matrix.rotateZ(this._matrix, angleInRadii);
  this.modified()
};
X.transform.prototype.translateX = function(distance) {
  if(!goog.isNumber(distance)) {
    throw new Error("Invalid distance.");
  }
  X.matrix.translate(this._matrix, distance, 0, 0);
  this.modified()
};
X.transform.prototype.translateY = function(distance) {
  if(!goog.isNumber(distance)) {
    throw new Error("Invalid distance.");
  }
  X.matrix.translate(this._matrix, 0, distance, 0);
  this.modified()
};
X.transform.prototype.translateZ = function(distance) {
  if(!goog.isNumber(distance)) {
    throw new Error("Invalid distance.");
  }
  X.matrix.translate(this._matrix, 0, 0, distance);
  this.modified()
};
X.transform.prototype.flip_ = function(row, col) {
  this._matrix[row + col * 4] *= -1;
  this.modified()
};
X.transform.prototype.flipX = function() {
  this.flip_(0, 0)
};
X.transform.prototype.flipY = function() {
  this.flip_(1, 1)
};
X.transform.prototype.flipZ = function() {
  this.flip_(2, 2)
};
X.transform.prototype.modified = function() {
  this._dirty = true
};
goog.exportSymbol("X.transform", X.transform);
goog.exportSymbol("X.transform.prototype.rotateX", X.transform.prototype.rotateX);
goog.exportSymbol("X.transform.prototype.rotateY", X.transform.prototype.rotateY);
goog.exportSymbol("X.transform.prototype.rotateZ", X.transform.prototype.rotateZ);
goog.exportSymbol("X.transform.prototype.translateX", X.transform.prototype.translateX);
goog.exportSymbol("X.transform.prototype.translateY", X.transform.prototype.translateY);
goog.exportSymbol("X.transform.prototype.translateZ", X.transform.prototype.translateZ);
goog.exportSymbol("X.transform.prototype.flipX", X.transform.prototype.flipX);
goog.exportSymbol("X.transform.prototype.flipY", X.transform.prototype.flipY);
goog.exportSymbol("X.transform.prototype.flipZ", X.transform.prototype.flipZ);
goog.exportSymbol("X.transform.prototype.modified", X.transform.prototype.modified);
goog.provide("X.texture");
goog.require("X.base");
goog.require("X.loadable");
X.texture = function() {
  goog.base(this);
  this._classname = "texture";
  this._file = null;
  this._image = null;
  this._rawData = null;
  this._rawDataWidth = 0;
  this._rawDataHeight = 0;
  this._grayscale = false;
  inject(this, new X.loadable)
};
goog.inherits(X.texture, X.base);
X.texture.prototype.__defineSetter__("rawData", function(rawData) {
  this._rawData = rawData;
  this._dirty = true
});
X.texture.prototype.__defineSetter__("rawDataHeight", function(rawDataHeight) {
  this._rawDataHeight = rawDataHeight;
  this._dirty = true
});
X.texture.prototype.__defineSetter__("rawDataWidth", function(rawDataWidth) {
  this._rawDataWidth = rawDataWidth;
  this._dirty = true
});
X.texture.prototype.__defineSetter__("grayscale", function(grayscale) {
  this._grayscale = grayscale;
  this._dirty = true
});
goog.exportSymbol("X.texture", X.texture);
goog.provide("X.triplets");
goog.require("X.base");
X.triplets = function(size, data) {
  goog.base(this);
  this._classname = "triplets";
  this._minA = Infinity;
  this._maxA = -Infinity;
  this._minB = Infinity;
  this._maxB = -Infinity;
  this._minC = Infinity;
  this._maxC = -Infinity;
  this._centroid = [0, 0, 0];
  this._fresh = true;
  this._dataPointer = 0;
  this._triplets = new Float32Array(size);
  if(goog.isDefAndNotNull(data)) {
    this._triplets = data._triplets.subarray(0, data._triplets.length);
    this._dataPointer = this._triplets.length;
    this._minA = data._minA;
    this._maxA = data._maxA;
    this._minB = data._minB;
    this._maxB = data._maxB;
    this._minC = data._minC;
    this._maxC = data._maxC;
    this._centroid = data._centroid.slice();
    this._fresh = false
  }
};
goog.inherits(X.triplets, X.base);
X.triplets.prototype.add = function(a, b, c) {
  this._minA = Math.min(this._minA, a);
  this._maxA = Math.max(this._maxA, a);
  this._minB = Math.min(this._minB, b);
  this._maxB = Math.max(this._maxB, b);
  this._minC = Math.min(this._minC, c);
  this._maxC = Math.max(this._maxC, c);
  this._centroid = [(this._minA + this._maxA) / 2, (this._minB + this._maxB) / 2, (this._minC + this._maxC) / 2];
  this._fresh = false;
  this._dirty = true;
  this._triplets[this._dataPointer++] = a;
  this._triplets[this._dataPointer++] = b;
  this._triplets[this._dataPointer++] = c;
  return this._dataPointer / 3
};
X.triplets.prototype.resize = function() {
  if(this._dataPointer == this._triplets.length) {
    return
  }
  var _tmpArr = new Float32Array(this._dataPointer);
  _tmpArr.set(this._triplets.subarray(0, this._dataPointer));
  this._triplets = _tmpArr
};
X.triplets.prototype.get = function(id) {
  id = id * 3;
  return[this._triplets[id], this._triplets[id + 1], this._triplets[id + 2]]
};
X.triplets.prototype.remove = function(id) {
  throw new Error("Not implemented.");
};
X.triplets.prototype.clear = function() {
  this._triplets = new Float32Array(this._triplets.length);
  this._dirty = true
};
X.triplets.prototype.__defineGetter__("count", function() {
  this.resize();
  return this._triplets.length / 3
});
X.triplets.prototype.__defineGetter__("length", function() {
  this.resize();
  return this._triplets.length
});
goog.exportSymbol("X.triplets", X.triplets);
goog.exportSymbol("X.triplets.prototype.add", X.triplets.prototype.add);
goog.exportSymbol("X.triplets.prototype.resize", X.triplets.prototype.resize);
goog.exportSymbol("X.triplets.prototype.get", X.triplets.prototype.get);
goog.exportSymbol("X.triplets.prototype.remove", X.triplets.prototype.remove);
goog.exportSymbol("X.triplets.prototype.clear", X.triplets.prototype.clear);
goog.provide("X.displayable");
goog.require("X.base");
goog.require("X.transform");
goog.require("X.triplets");
goog.require("X.texture");
X.displayable = function() {
  this._type = X.displayable.types.TRIANGLES;
  this._transform = new X.transform;
  this._color = [1, 1, 1];
  this._points = null;
  this._normals = null;
  this._colors = null;
  this._texture = null;
  this._textureCoordinateMap = null;
  this._pointIndices = [];
  this._visible = true;
  this._pointsize = 1;
  this._linewidth = 1;
  this._caption = null;
  this._magicmode = false;
  this._opacity = 1;
  this._distance = 0;
  this._pickable = true
};
X.displayable.types = {TRIANGLES:"TRIANGLES", TRIANGLE_STRIPS:"TRIANGLE_STRIPS", LINES:"LINES", POINTS:"POINTS", POLYGONS:"POLYGONS"};
X.displayable.prototype.__defineSetter__("type", function(type) {
  return this._type = type
});
X.displayable.prototype.__defineGetter__("type", function() {
  return this._type
});
X.displayable.prototype.__defineGetter__("texture", function() {
  if(!this._texture) {
    this._texture = new X.texture
  }
  return this._texture
});
X.displayable.prototype.__defineGetter__("transform", function() {
  return this._transform
});
X.displayable.prototype.__defineGetter__("points", function() {
  return this._points
});
X.displayable.prototype.__defineSetter__("points", function(points) {
  this._points = points
});
X.displayable.prototype.__defineGetter__("normals", function() {
  return this._normals
});
X.displayable.prototype.__defineSetter__("normals", function(normals) {
  this._normals = normals
});
X.displayable.prototype.__defineGetter__("colors", function() {
  return this._colors
});
X.displayable.prototype.__defineSetter__("colors", function(colors) {
  this._colors = colors
});
X.displayable.prototype.__defineGetter__("color", function() {
  return this._color
});
X.displayable.prototype.__defineSetter__("color", function(color) {
  if(!goog.isDefAndNotNull(color) || !goog.isArray(color) || color.length != 3) {
    throw new Error("Invalid color.");
  }
  var children = this._children;
  var numberOfChildren = children.length;
  var c = 0;
  for(c = 0;c < numberOfChildren;c++) {
    children[c]["color"] = color
  }
  this._color = color;
  this._dirty = true
});
X.displayable.prototype.__defineGetter__("opacity", function() {
  return this._opacity
});
X.displayable.prototype.__defineSetter__("opacity", function(opacity) {
  if(!goog.isNumber(opacity) || opacity > 1 || opacity < 0) {
    throw new Error("Invalid opacity.");
  }
  var children = this._children;
  var numberOfChildren = children.length;
  var c = 0;
  for(c = 0;c < numberOfChildren;c++) {
    if(goog.isDefAndNotNull(children[c])) {
      children[c]["opacity"] = opacity
    }
  }
  this._opacity = opacity;
  this._dirty = true
});
X.displayable.prototype.__defineGetter__("caption", function() {
  return this._caption
});
X.displayable.prototype.__defineSetter__("caption", function(caption) {
  this._caption = caption;
  this._dirty = true
});
X.displayable.prototype.__defineGetter__("visible", function() {
  return this._visible
});
X.displayable.prototype.__defineSetter__("visible", function(visible) {
  var children = this._children;
  var numberOfChildren = children.length;
  var c = 0;
  for(c = 0;c < numberOfChildren;c++) {
    if(goog.isDefAndNotNull(children[c])) {
      children[c]["visible"] = visible
    }
  }
  this._visible = visible;
  this._dirty = true
});
X.displayable.prototype.__defineGetter__("pointsize", function() {
  return this._pointsize
});
X.displayable.prototype.__defineSetter__("pointsize", function(size) {
  if(!goog.isNumber(size)) {
    throw new Error("Invalid point size.");
  }
  this._pointsize = size;
  this._dirty = true
});
X.displayable.prototype.__defineGetter__("magicmode", function() {
  return this._magicmode
});
X.displayable.prototype.__defineSetter__("magicmode", function(magicmode) {
  if(!goog.isBoolean(magicmode)) {
    throw new Error("Invalid magic mode setting.");
  }
  this._magicmode = magicmode;
  this._dirty = true
});
X.displayable.prototype.__defineGetter__("linewidth", function() {
  return this._linewidth
});
X.displayable.prototype.__defineSetter__("linewidth", function(width) {
  if(!goog.isNumber(width)) {
    throw new Error("Invalid line width.");
  }
  this._linewidth = width;
  this._dirty = true
});
X.displayable.prototype.__defineGetter__("pickable", function() {
  return this._pickable
});
X.displayable.prototype.__defineSetter__("pickable", function(pickable) {
  if(!goog.isBoolean(pickable)) {
    throw new Error("Invalid pickable setting.");
  }
  this._pickable = pickable;
  this._dirty = true
});
X.displayable.prototype.__defineGetter__("textureCoordinateMap", function() {
  return this._textureCoordinateMap
});
X.displayable.prototype.__defineSetter__("textureCoordinateMap", function(textureCoordinateMap) {
  this._textureCoordinate = textureCoordinateMap
});
goog.provide("X.thresholdable");
goog.require("X.base");
X.thresholdable = function() {
  this._min = Infinity;
  this._max = -Infinity;
  this._lowerThreshold = -Infinity;
  this._upperThreshold = Infinity;
  this._minColor = [0, 0, 0];
  this._maxColor = [1, 1, 1]
};
X.thresholdable.prototype.__defineGetter__("lowerThreshold", function() {
  return this._lowerThreshold
});
X.thresholdable.prototype.__defineSetter__("lowerThreshold", function(lowerThreshold) {
  this._lowerThreshold = lowerThreshold
});
X.thresholdable.prototype.__defineGetter__("upperThreshold", function() {
  return this._upperThreshold
});
X.thresholdable.prototype.__defineSetter__("upperThreshold", function(upperThreshold) {
  this._upperThreshold = upperThreshold
});
X.thresholdable.prototype.__defineGetter__("min", function() {
  return this._min
});
X.thresholdable.prototype.__defineGetter__("max", function() {
  return this._max
});
X.thresholdable.prototype.__defineGetter__("minColor", function() {
  return this._minColor
});
X.thresholdable.prototype.__defineSetter__("minColor", function(minColor) {
  if(!goog.isDefAndNotNull(minColor) || !goog.isArray(minColor) || minColor.length != 3) {
    throw new Error("Invalid min. color.");
  }
  this._minColor = minColor
});
X.thresholdable.prototype.__defineGetter__("maxColor", function() {
  return this._maxColor
});
X.thresholdable.prototype.__defineSetter__("maxColor", function(maxColor) {
  if(!goog.isDefAndNotNull(maxColor) || !goog.isArray(maxColor) || maxColor.length != 3) {
    throw new Error("Invalid max. color.");
  }
  this._maxColor = maxColor
});
goog.provide("X.scalars");
goog.require("X.base");
goog.require("X.loadable");
goog.require("X.thresholdable");
X.scalars = function() {
  goog.base(this);
  this._classname = "scalars";
  this._array = null;
  this._glArray = null;
  this._replaceMode = true;
  this._interpolation = 0;
  inject(this, new X.loadable);
  inject(this, new X.thresholdable);
  this._minColor = [0, 1, 0];
  this._maxColor = [1, 0, 0]
};
goog.inherits(X.scalars, X.base);
X.scalars.prototype.__defineGetter__("array", function() {
  return this._array
});
X.scalars.prototype.__defineSetter__("array", function(array) {
  this._array = array;
  this._glArray = array;
  this._dirty = true
});
X.scalars.prototype.__defineGetter__("interpolation", function() {
  return this._interpolation
});
X.scalars.prototype.__defineSetter__("interpolation", function(value) {
  this._interpolation = value
});
goog.exportSymbol("X.scalars", X.scalars);
goog.provide("X.object");
goog.require("X.base");
goog.require("X.colortable");
goog.require("X.displayable");
goog.require("X.indexer");
goog.require("X.loadable");
goog.require("X.scalars");
X.object = function(object) {
  goog.base(this);
  this._classname = "object";
  this._children = new Array;
  this._colortable = null;
  this._scalars = null;
  inject(this, new X.displayable);
  if(goog.isDefAndNotNull(object)) {
    this.copy_(object)
  }
};
goog.inherits(X.object, X.base);
X.object.prototype.copy_ = function(object) {
  this._type = object._type;
  this._transform = new X.transform;
  this._transform._matrix = new Float32Array(object._transform._matrix);
  this._color = object._color.slice();
  if(object._points) {
    this._points = new X.triplets(object._points.length, object._points)
  }
  if(object._normals) {
    this._normals = new X.triplets(object._normals.length, object._normals)
  }
  if(object._colors) {
    this._colors = new X.triplets(object._colors.length, object._colors)
  }
  this._texture = object._texture;
  this._textureCoordinateMap = object._textureCoordinateMap;
  if(object._file) {
    this._file = new X.file((new String(object._file._path)).toString())
  }
  this._opacity = object._opacity;
  this._children.length = 0;
  var _oldChildren = object._children;
  if(_oldChildren) {
    var _oldChildrenLength = _oldChildren.length;
    var i = 0;
    for(i = 0;i < _oldChildrenLength;i++) {
      var classname = _oldChildren[i]._classname;
      this._children.push(new X[classname](_oldChildren[i]))
    }
  }
  this._visible = object._visible;
  this._pointsize = object._pointsize;
  this._linewidth = object._linewidth;
  if(object._caption) {
    this._caption = (new String(object._caption)).toString()
  }
  this._magicmode = object._magicmode;
  this._pickable = object._pickable;
  this._pointIndices = object._pointIndices.slice();
  this._dirty = true
};
X.object.prototype.__defineGetter__("colortable", function() {
  if(!this._colortable) {
    this._colortable = new X.colortable
  }
  return this._colortable
});
X.object.prototype.__defineGetter__("scalars", function() {
  if(!this._scalars) {
    this._scalars = new X.scalars
  }
  return this._scalars
});
X.object.prototype.__defineGetter__("children", function() {
  return this._children
});
X.object.prototype.modified = function(propagateEvent) {
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = this;
  this.dispatchEvent(modifiedEvent)
};
X.object.prototype.remove = function(propagateEvent) {
  var removeEvent = new X.event.RemoveEvent;
  removeEvent._object = this;
  this.dispatchEvent(removeEvent)
};
X.object.OPACITY_COMPARATOR = function(object1, object2) {
  if(!goog.isDefAndNotNull(object1) || !goog.isDefAndNotNull(object2) || !(object1 instanceof X.object) || !(object2 instanceof X.object)) {
    throw new Error("Fatal: Two valid X.objects are required for comparison.");
  }
  if(object1._opacity == 1) {
    return-1
  }
  if(object2._opacity == 1) {
    return 1
  }
  if(goog.isDefAndNotNull(object1._distance) && goog.isDefAndNotNull(object2._distance)) {
    if(object1._distance > object2._distance) {
      return-1
    }else {
      if(object1._distance <= object2._distance) {
        return 1
      }
    }
  }
  return 1
};
goog.exportSymbol("X.object", X.object);
goog.exportSymbol("X.object.prototype.modified", X.object.prototype.modified);
goog.exportSymbol("X.object.prototype.remove", X.object.prototype.remove);
goog.provide("X.constructable");
goog.require("X.base");
goog.require("X.object");
goog.require("CSG");
goog.require("csgVector");
goog.require("csgVertex");
goog.require("csgPolygon");
X.constructable = function() {
};
X.constructable.prototype.toCSG = function() {
  var numberOfPoints = this._points.count;
  var polygons = [];
  var p = 0;
  for(p = 0;p < numberOfPoints;p = p + 3) {
    var point1 = this._points.get(p);
    var point2 = this._points.get(p + 1);
    var point3 = this._points.get(p + 2);
    var normal1 = this._normals.get(p);
    var normal2 = this._normals.get(p + 1);
    var normal3 = this._normals.get(p + 2);
    var color = this._color;
    if(this._colors && this._colors.length > 0) {
      color = this._colors.get(p)
    }
    var vertices = [];
    vertices.push(new csgVertex(point1, normal1));
    vertices.push(new csgVertex(point2, normal2));
    vertices.push(new csgVertex(point3, normal3));
    polygons.push(new csgPolygon(vertices, color))
  }
  return CSG.fromPolygons(polygons)
};
X.constructable.prototype.fromCSG = function(csg) {
  if(!goog.isDefAndNotNull(csg) || !(csg instanceof CSG)) {
    throw new Error("Invalid CSG object.");
  }
  var indexer = new X.indexer;
  var triangles = new Array;
  var csg2poly = csg.toPolygons();
  goog.array.map(csg2poly, function(p) {
    var indices = new Array;
    var ver = p.vertices();
    var shared = p.shared();
    indices = goog.array.map(ver, function(vertex) {
      vertex.color = shared;
      return indexer.add(vertex)
    });
    var i = 2;
    for(i = 2;i < indices.length;i++) {
      triangles.push([indices[0], indices[i - 1], indices[i]])
    }
  }.bind(this));
  this.__vertices = goog.array.map(indexer.unique(), function(v) {
    return[v.pos().x(), v.pos().y(), v.pos().z()]
  });
  this.__normals = goog.array.map(indexer.unique(), function(v) {
    return[v.normal().x(), v.normal().y(), v.normal().z()]
  });
  this.__colors = goog.array.map(indexer.unique(), function(v) {
    if(!v.color) {
      return null
    }
    return[v.color[0], v.color[1], v.color[2]]
  });
  this._points = new X.triplets(triangles.length * 9);
  this._normals = new X.triplets(triangles.length * 9);
  this._colors = new X.triplets(triangles.length * 9);
  goog.array.map(triangles, function(i) {
    var i0 = i[0];
    var i1 = i[1];
    var i2 = i[2];
    var vertices = this.__vertices;
    var normals = this.__normals;
    var colors = this.__colors;
    this._points.add(vertices[i0][0], vertices[i0][1], vertices[i0][2]);
    this._points.add(vertices[i1][0], vertices[i1][1], vertices[i1][2]);
    this._points.add(vertices[i2][0], vertices[i2][1], vertices[i2][2]);
    this._normals.add(normals[i0][0], normals[i0][1], normals[i0][2]);
    this._normals.add(normals[i1][0], normals[i1][1], normals[i1][2]);
    this._normals.add(normals[i2][0], normals[i2][1], normals[i2][2]);
    if(colors[i0]) {
      this._colors.add(colors[i0][0], colors[i0][1], colors[i0][2])
    }
    if(colors[i1]) {
      this._colors.add(colors[i1][0], colors[i1][1], colors[i1][2])
    }
    if(colors[i2]) {
      this._colors.add(colors[i2][0], colors[i2][1], colors[i2][2])
    }
  }.bind(this));
  if(this._colors._dataPointer == 0) {
    this._colors = null
  }
  this._type = X.displayable.types.TRIANGLES
};
X.constructable.prototype.union = function(object) {
  if(!goog.isDefAndNotNull(object) || !(object instanceof CSG) && !(object instanceof X.object)) {
    throw new Error("Invalid object.");
  }
  var csg = object;
  if(object instanceof X.object) {
    csg = csg.toCSG()
  }
  var result = new X.object;
  inject(result, new X.constructable);
  result.fromCSG(this.toCSG().union(csg));
  return result
};
X.constructable.prototype.subtract = function(object) {
  if(!goog.isDefAndNotNull(object) || !(object instanceof CSG) && !(object instanceof X.object)) {
    throw new Error("Invalid object.");
  }
  var csg = object;
  if(object instanceof X.object) {
    csg = csg.toCSG()
  }
  var result = new X.object;
  inject(result, new X.constructable);
  result.fromCSG(this.toCSG().subtract(csg));
  return result
};
X.constructable.prototype.intersect = function(object) {
  if(!goog.isDefAndNotNull(object) || !(object instanceof CSG) && !(object instanceof X.object)) {
    throw new Error("Invalid object.");
  }
  var csg = object;
  if(object instanceof X.object) {
    csg = csg.toCSG()
  }
  var result = new X.object;
  inject(result, new X.constructable);
  result.fromCSG(this.toCSG().intersect(csg));
  return result
};
X.constructable.prototype.inverse = function() {
  var result = new X.object;
  inject(result, new X.constructable);
  result.fromCSG(this.toCSG().inverse());
  return result
};
goog.exportSymbol("X.constructable", X.constructable);
goog.exportSymbol("X.constructable.prototype.intersect", X.constructable.prototype.intersect);
goog.exportSymbol("X.constructable.prototype.inverse", X.constructable.prototype.inverse);
goog.exportSymbol("X.constructable.prototype.subtract", X.constructable.prototype.subtract);
goog.exportSymbol("X.constructable.prototype.union", X.constructable.prototype.union);
goog.provide("X.event");
goog.provide("X.event.events");
goog.provide("X.event.ComputingEvent");
goog.provide("X.event.ComputingProgressEvent");
goog.provide("X.event.ComputingEndEvent");
goog.provide("X.event.HoverEvent");
goog.provide("X.event.HoverEndEvent");
goog.provide("X.event.ModifiedEvent");
goog.provide("X.event.PanEvent");
goog.provide("X.event.ProgressEvent");
goog.provide("X.event.RenderEvent");
goog.provide("X.event.ResetViewEvent");
goog.provide("X.event.RotateEvent");
goog.provide("X.event.ScrollEvent");
goog.provide("X.event.WindowLevelEvent");
goog.provide("X.event.ZoomEvent");
goog.require("X");
goog.require("X.object");
goog.require("X.vector");
goog.require("goog.events");
goog.require("goog.events.Event");
X.event = function(type) {
  goog.base(this, type);
  this._classname = "event"
};
goog.inherits(X.event, goog.events.Event);
X.event.uniqueId = function(id) {
  return goog.events.getUniqueId(id)
};
X.event.events = {PAN:X.event.uniqueId("pan"), ROTATE:X.event.uniqueId("rotate"), ZOOM:X.event.uniqueId("zoom"), SCROLL:X.event.uniqueId("scroll"), RENDER:X.event.uniqueId("render"), RESETVIEW:X.event.uniqueId("resetview"), WINDOWLEVEL:X.event.uniqueId("windowlevel"), MODIFIED:X.event.uniqueId("modified"), REMOVE:X.event.uniqueId("remove"), PROGRESS:X.event.uniqueId("progress"), HOVER:X.event.uniqueId("hover"), HOVER_END:X.event.uniqueId("hover_end"), COMPUTING:X.event.uniqueId("computing"), COMPUTING_END:X.event.uniqueId("computing_end"), 
COMPUTING_PROGRESS:X.event.uniqueId("computing_progress")};
X.event.WindowLevelEvent = function() {
  goog.base(this, X.event.events.WINDOWLEVEL);
  this._window = 0;
  this._level = 0
};
goog.inherits(X.event.WindowLevelEvent, X.event);
X.event.PanEvent = function() {
  goog.base(this, X.event.events.PAN);
  this._distance = new X.vector(0, 0, 0)
};
goog.inherits(X.event.PanEvent, X.event);
X.event.RotateEvent = function() {
  goog.base(this, X.event.events.ROTATE);
  this._distance = new X.vector(0, 0, 0)
};
goog.inherits(X.event.RotateEvent, X.event);
X.event.ZoomEvent = function() {
  goog.base(this, X.event.events.ZOOM);
  this._in = false;
  this._fast = false
};
goog.inherits(X.event.ZoomEvent, X.event);
X.event.ScrollEvent = function() {
  goog.base(this, X.event.events.SCROLL);
  this._up = false
};
goog.inherits(X.event.ScrollEvent, X.event);
X.event.RenderEvent = function() {
  goog.base(this, X.event.events.RENDER)
};
goog.inherits(X.event.RenderEvent, X.event);
X.event.HoverEvent = function() {
  goog.base(this, X.event.events.HOVER);
  this._x = 0;
  this._y = 0
};
goog.inherits(X.event.HoverEvent, X.event);
X.event.HoverEndEvent = function() {
  goog.base(this, X.event.events.HOVER_END)
};
goog.inherits(X.event.HoverEndEvent, X.event);
X.event.ResetViewEvent = function() {
  goog.base(this, X.event.events.RESETVIEW)
};
goog.inherits(X.event.ResetViewEvent, X.event);
X.event.ModifiedEvent = function() {
  goog.base(this, X.event.events.MODIFIED);
  this._object = null;
  this._container = null
};
goog.inherits(X.event.ModifiedEvent, X.event);
X.event.RemoveEvent = function() {
  goog.base(this, X.event.events.REMOVE);
  this._object = null;
  this._container = null
};
goog.inherits(X.event.RemoveEvent, X.event);
X.event.ProgressEvent = function() {
  goog.base(this, X.event.events.PROGRESS);
  this._value = 0
};
goog.inherits(X.event.ProgressEvent, X.event);
X.event.ComputingEvent = function() {
  goog.base(this, X.event.events.COMPUTING);
  this._object = null
};
goog.inherits(X.event.ComputingEvent, X.event);
X.event.ComputingProgressEvent = function() {
  goog.base(this, X.event.events.COMPUTING_PROGRESS);
  this._value = 0
};
goog.inherits(X.event.ComputingProgressEvent, X.event);
X.event.ComputingEndEvent = function() {
  goog.base(this, X.event.events.COMPUTING_END);
  this._object = null
};
goog.inherits(X.event.ComputingEndEvent, X.event);
goog.exportSymbol("X.event.events.PAN", X.event.events.PAN);
goog.exportSymbol("X.event.events.ROTATE", X.event.events.ROTATE);
goog.exportSymbol("X.event.events.ZOOM", X.event.events.ZOOM);
goog.exportSymbol("X.event.events.SCROLL", X.event.events.SCROLL);
goog.provide("X.buffer");
goog.require("X.base");
X.buffer = function(glBuffer, itemCount, itemSize) {
  if(!goog.isDefAndNotNull(glBuffer)) {
    throw new Error("Invalid GL Buffer.");
  }
  if(!goog.isDefAndNotNull(itemCount)) {
    throw new Error("Invalid number of items.");
  }
  if(!goog.isDefAndNotNull(itemSize)) {
    throw new Error("Invalid item size.");
  }
  goog.base(this);
  this._classname = "buffer";
  this._glBuffer = glBuffer;
  this._itemCount = itemCount;
  this._itemSize = itemSize
};
goog.inherits(X.buffer, X.base);
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length
};
goog.dom.classes.add_ = function(classes, args) {
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i])
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item)
  })
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "))
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  goog.dom.classes.set(element, classes.join(" "))
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y)
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y
  }else {
    this.x += tx;
    if(goog.isNumber(opt_ty)) {
      this.y += opt_ty
    }
  }
  return this
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector)
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if(goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop)
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content))
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.getParentElement = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? parent : null
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if(node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1
    }
    if(node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1
    }
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if(!opt_tag && !opt_class) {
    return null
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content))
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.relativePositionX = function(box, coord) {
  if(coord.x < box.left) {
    return coord.x - box.left
  }else {
    if(coord.x > box.right) {
      return coord.x - box.right
    }
  }
  return 0
};
goog.math.Box.relativePositionY = function(box, coord) {
  if(coord.y < box.top) {
    return coord.y - box.top
  }else {
    if(coord.y > box.bottom) {
      return coord.y - box.bottom
    }
  }
  return 0
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y)
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y
  }else {
    this.left += tx;
    this.right += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty
    }
  }
  return this
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0);
  var dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point))
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.math.Rect.prototype.getTopLeft = function() {
  return new goog.math.Coordinate(this.left, this.top)
};
goog.math.Rect.prototype.getCenter = function() {
  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2)
};
goog.math.Rect.prototype.getBottomRight = function() {
  return new goog.math.Coordinate(this.left + this.width, this.top + this.height)
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y
  }else {
    this.left += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty
    }
  }
  return this
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this
};
goog.provide("goog.dom.vendor");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"Webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"Moz"
    }else {
      if(goog.userAgent.IE) {
        return"ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"O"
        }
      }
    }
  }
  return null
};
goog.dom.vendor.getVendorPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"-webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"-moz"
    }else {
      if(goog.userAgent.IE) {
        return"-ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"-o"
        }
      }
    }
  }
  return null
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if(propertyName) {
    element.style[propertyName] = value
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return prefixedStyle
    }
  }
  return camelStyle
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style
    }
  }
  return style
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if(typeof styleValue !== "undefined") {
    return styleValue
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property) || ""
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersionOrHigher("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node)
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if(opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2
  }else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = el;
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
    if(goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el))
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display)
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    element.innerHTML = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersionOrHigher("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if(goog.userAgent.IE) {
    property = "-ms-transform"
  }else {
    if(goog.userAgent.WEBKIT) {
      property = "-webkit-transform"
    }else {
      if(goog.userAgent.OPERA) {
        property = "-o-transform"
      }else {
        if(goog.userAgent.GECKO) {
          property = "-moz-transform"
        }
      }
    }
  }
  var transform;
  if(property) {
    transform = goog.style.getStyle_(element, property)
  }
  if(!transform) {
    transform = goog.style.getStyle_(element, "transform")
  }
  if(!transform) {
    return new goog.math.Coordinate(0, 0)
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if(!matches) {
    return new goog.math.Coordinate(0, 0)
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]))
};
goog.provide("goog.events.MouseWheelEvent");
goog.provide("goog.events.MouseWheelHandler");
goog.provide("goog.events.MouseWheelHandler.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.EventTarget");
goog.require("goog.math");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.events.MouseWheelHandler = function(element, opt_capture) {
  goog.events.EventTarget.call(this);
  this.element_ = element;
  var rtlElement = goog.dom.isElement(this.element_) ? this.element_ : this.element_ ? this.element_.body : null;
  this.isRtl_ = !!rtlElement && goog.style.isRightToLeft(rtlElement);
  var type = goog.userAgent.GECKO ? "DOMMouseScroll" : "mousewheel";
  this.listenKey_ = goog.events.listen(this.element_, type, this, opt_capture)
};
goog.inherits(goog.events.MouseWheelHandler, goog.events.EventTarget);
goog.events.MouseWheelHandler.EventType = {MOUSEWHEEL:"mousewheel"};
goog.events.MouseWheelHandler.prototype.maxDeltaX_;
goog.events.MouseWheelHandler.prototype.maxDeltaY_;
goog.events.MouseWheelHandler.prototype.setMaxDeltaX = function(maxDeltaX) {
  this.maxDeltaX_ = maxDeltaX
};
goog.events.MouseWheelHandler.prototype.setMaxDeltaY = function(maxDeltaY) {
  this.maxDeltaY_ = maxDeltaY
};
goog.events.MouseWheelHandler.prototype.handleEvent = function(e) {
  var deltaX = 0;
  var deltaY = 0;
  var detail = 0;
  var be = e.getBrowserEvent();
  if(be.type == "mousewheel") {
    var wheelDeltaScaleFactor = 1;
    if(goog.userAgent.IE || goog.userAgent.WEBKIT && (goog.userAgent.WINDOWS || goog.userAgent.isVersionOrHigher("532.0"))) {
      wheelDeltaScaleFactor = 40
    }
    detail = goog.events.MouseWheelHandler.smartScale_(-be.wheelDelta, wheelDeltaScaleFactor);
    if(goog.isDef(be.wheelDeltaX)) {
      deltaX = goog.events.MouseWheelHandler.smartScale_(-be.wheelDeltaX, wheelDeltaScaleFactor);
      deltaY = goog.events.MouseWheelHandler.smartScale_(-be.wheelDeltaY, wheelDeltaScaleFactor)
    }else {
      deltaY = detail
    }
  }else {
    detail = be.detail;
    if(detail > 100) {
      detail = 3
    }else {
      if(detail < -100) {
        detail = -3
      }
    }
    if(goog.isDef(be.axis) && be.axis === be.HORIZONTAL_AXIS) {
      deltaX = detail
    }else {
      deltaY = detail
    }
  }
  if(goog.isNumber(this.maxDeltaX_)) {
    deltaX = goog.math.clamp(deltaX, -this.maxDeltaX_, this.maxDeltaX_)
  }
  if(goog.isNumber(this.maxDeltaY_)) {
    deltaY = goog.math.clamp(deltaY, -this.maxDeltaY_, this.maxDeltaY_)
  }
  if(this.isRtl_) {
    deltaX = -deltaX
  }
  var newEvent = new goog.events.MouseWheelEvent(detail, be, deltaX, deltaY);
  this.dispatchEvent(newEvent)
};
goog.events.MouseWheelHandler.smartScale_ = function(mouseWheelDelta, scaleFactor) {
  if(goog.userAgent.WEBKIT && (goog.userAgent.MAC || goog.userAgent.LINUX) && mouseWheelDelta % scaleFactor != 0) {
    return mouseWheelDelta
  }else {
    return mouseWheelDelta / scaleFactor
  }
};
goog.events.MouseWheelHandler.prototype.disposeInternal = function() {
  goog.events.MouseWheelHandler.superClass_.disposeInternal.call(this);
  goog.events.unlistenByKey(this.listenKey_);
  this.listenKey_ = null
};
goog.events.MouseWheelEvent = function(detail, browserEvent, deltaX, deltaY) {
  goog.events.BrowserEvent.call(this, browserEvent);
  this.type = goog.events.MouseWheelHandler.EventType.MOUSEWHEEL;
  this.detail = detail;
  this.deltaX = deltaX;
  this.deltaY = deltaY
};
goog.inherits(goog.events.MouseWheelEvent, goog.events.BrowserEvent);
goog.provide("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyCodes = {WIN_KEY_FF_LINUX:0, MAC_ENTER:3, BACKSPACE:8, TAB:9, NUM_CENTER:12, ENTER:13, SHIFT:16, CTRL:17, ALT:18, PAUSE:19, CAPS_LOCK:20, ESC:27, SPACE:32, PAGE_UP:33, PAGE_DOWN:34, END:35, HOME:36, LEFT:37, UP:38, RIGHT:39, DOWN:40, PRINT_SCREEN:44, INSERT:45, DELETE:46, ZERO:48, ONE:49, TWO:50, THREE:51, FOUR:52, FIVE:53, SIX:54, SEVEN:55, EIGHT:56, NINE:57, FF_SEMICOLON:59, FF_EQUALS:61, QUESTION_MARK:63, A:65, B:66, C:67, D:68, E:69, F:70, G:71, H:72, I:73, J:74, K:75, L:76, M:77, 
N:78, O:79, P:80, Q:81, R:82, S:83, T:84, U:85, V:86, W:87, X:88, Y:89, Z:90, META:91, WIN_KEY_RIGHT:92, CONTEXT_MENU:93, NUM_ZERO:96, NUM_ONE:97, NUM_TWO:98, NUM_THREE:99, NUM_FOUR:100, NUM_FIVE:101, NUM_SIX:102, NUM_SEVEN:103, NUM_EIGHT:104, NUM_NINE:105, NUM_MULTIPLY:106, NUM_PLUS:107, NUM_MINUS:109, NUM_PERIOD:110, NUM_DIVISION:111, F1:112, F2:113, F3:114, F4:115, F5:116, F6:117, F7:118, F8:119, F9:120, F10:121, F11:122, F12:123, NUMLOCK:144, SCROLL_LOCK:145, FIRST_MEDIA_KEY:166, LAST_MEDIA_KEY:183, 
SEMICOLON:186, DASH:189, EQUALS:187, COMMA:188, PERIOD:190, SLASH:191, APOSTROPHE:192, TILDE:192, SINGLE_QUOTE:222, OPEN_SQUARE_BRACKET:219, BACKSLASH:220, CLOSE_SQUARE_BRACKET:221, WIN_KEY:224, MAC_FF_META:224, WIN_IME:229, PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent = function(e) {
  if(e.altKey && !e.ctrlKey || e.metaKey || e.keyCode >= goog.events.KeyCodes.F1 && e.keyCode <= goog.events.KeyCodes.F12) {
    return false
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ALT:
    ;
    case goog.events.KeyCodes.CAPS_LOCK:
    ;
    case goog.events.KeyCodes.CONTEXT_MENU:
    ;
    case goog.events.KeyCodes.CTRL:
    ;
    case goog.events.KeyCodes.DOWN:
    ;
    case goog.events.KeyCodes.END:
    ;
    case goog.events.KeyCodes.ESC:
    ;
    case goog.events.KeyCodes.HOME:
    ;
    case goog.events.KeyCodes.INSERT:
    ;
    case goog.events.KeyCodes.LEFT:
    ;
    case goog.events.KeyCodes.MAC_FF_META:
    ;
    case goog.events.KeyCodes.META:
    ;
    case goog.events.KeyCodes.NUMLOCK:
    ;
    case goog.events.KeyCodes.NUM_CENTER:
    ;
    case goog.events.KeyCodes.PAGE_DOWN:
    ;
    case goog.events.KeyCodes.PAGE_UP:
    ;
    case goog.events.KeyCodes.PAUSE:
    ;
    case goog.events.KeyCodes.PHANTOM:
    ;
    case goog.events.KeyCodes.PRINT_SCREEN:
    ;
    case goog.events.KeyCodes.RIGHT:
    ;
    case goog.events.KeyCodes.SCROLL_LOCK:
    ;
    case goog.events.KeyCodes.SHIFT:
    ;
    case goog.events.KeyCodes.UP:
    ;
    case goog.events.KeyCodes.WIN_KEY:
    ;
    case goog.events.KeyCodes.WIN_KEY_RIGHT:
      return false;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return!goog.userAgent.GECKO;
    default:
      return e.keyCode < goog.events.KeyCodes.FIRST_MEDIA_KEY || e.keyCode > goog.events.KeyCodes.LAST_MEDIA_KEY
  }
};
goog.events.KeyCodes.firesKeyPressEvent = function(keyCode, opt_heldKeyCode, opt_shiftKey, opt_ctrlKey, opt_altKey) {
  if(!goog.userAgent.IE && !(goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("525"))) {
    return true
  }
  if(goog.userAgent.MAC && opt_altKey) {
    return goog.events.KeyCodes.isCharacterKey(keyCode)
  }
  if(opt_altKey && !opt_ctrlKey) {
    return false
  }
  if(!opt_shiftKey && (opt_heldKeyCode == goog.events.KeyCodes.CTRL || opt_heldKeyCode == goog.events.KeyCodes.ALT || goog.userAgent.MAC && opt_heldKeyCode == goog.events.KeyCodes.META)) {
    return false
  }
  if(goog.userAgent.WEBKIT && opt_ctrlKey && opt_shiftKey) {
    switch(keyCode) {
      case goog.events.KeyCodes.BACKSLASH:
      ;
      case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
      ;
      case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      ;
      case goog.events.KeyCodes.TILDE:
      ;
      case goog.events.KeyCodes.SEMICOLON:
      ;
      case goog.events.KeyCodes.DASH:
      ;
      case goog.events.KeyCodes.EQUALS:
      ;
      case goog.events.KeyCodes.COMMA:
      ;
      case goog.events.KeyCodes.PERIOD:
      ;
      case goog.events.KeyCodes.SLASH:
      ;
      case goog.events.KeyCodes.APOSTROPHE:
      ;
      case goog.events.KeyCodes.SINGLE_QUOTE:
        return false
    }
  }
  if(goog.userAgent.IE && opt_ctrlKey && opt_heldKeyCode == keyCode) {
    return false
  }
  switch(keyCode) {
    case goog.events.KeyCodes.ENTER:
      return!(goog.userAgent.IE && goog.userAgent.isDocumentMode(9));
    case goog.events.KeyCodes.ESC:
      return!goog.userAgent.WEBKIT
  }
  return goog.events.KeyCodes.isCharacterKey(keyCode)
};
goog.events.KeyCodes.isCharacterKey = function(keyCode) {
  if(keyCode >= goog.events.KeyCodes.ZERO && keyCode <= goog.events.KeyCodes.NINE) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.NUM_ZERO && keyCode <= goog.events.KeyCodes.NUM_MULTIPLY) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.A && keyCode <= goog.events.KeyCodes.Z) {
    return true
  }
  if(goog.userAgent.WEBKIT && keyCode == 0) {
    return true
  }
  switch(keyCode) {
    case goog.events.KeyCodes.SPACE:
    ;
    case goog.events.KeyCodes.QUESTION_MARK:
    ;
    case goog.events.KeyCodes.NUM_PLUS:
    ;
    case goog.events.KeyCodes.NUM_MINUS:
    ;
    case goog.events.KeyCodes.NUM_PERIOD:
    ;
    case goog.events.KeyCodes.NUM_DIVISION:
    ;
    case goog.events.KeyCodes.SEMICOLON:
    ;
    case goog.events.KeyCodes.FF_SEMICOLON:
    ;
    case goog.events.KeyCodes.DASH:
    ;
    case goog.events.KeyCodes.EQUALS:
    ;
    case goog.events.KeyCodes.FF_EQUALS:
    ;
    case goog.events.KeyCodes.COMMA:
    ;
    case goog.events.KeyCodes.PERIOD:
    ;
    case goog.events.KeyCodes.SLASH:
    ;
    case goog.events.KeyCodes.APOSTROPHE:
    ;
    case goog.events.KeyCodes.SINGLE_QUOTE:
    ;
    case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
    ;
    case goog.events.KeyCodes.BACKSLASH:
    ;
    case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      return true;
    default:
      return false
  }
};
goog.events.KeyCodes.normalizeGeckoKeyCode = function(keyCode) {
  switch(keyCode) {
    case goog.events.KeyCodes.FF_EQUALS:
      return goog.events.KeyCodes.EQUALS;
    case goog.events.KeyCodes.FF_SEMICOLON:
      return goog.events.KeyCodes.SEMICOLON;
    case goog.events.KeyCodes.MAC_FF_META:
      return goog.events.KeyCodes.META;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return goog.events.KeyCodes.WIN_KEY;
    default:
      return keyCode
  }
};
goog.provide("goog.events.KeyEvent");
goog.provide("goog.events.KeyHandler");
goog.provide("goog.events.KeyHandler.EventType");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyHandler = function(opt_element, opt_capture) {
  goog.events.EventTarget.call(this);
  if(opt_element) {
    this.attach(opt_element, opt_capture)
  }
};
goog.inherits(goog.events.KeyHandler, goog.events.EventTarget);
goog.events.KeyHandler.prototype.element_ = null;
goog.events.KeyHandler.prototype.keyPressKey_ = null;
goog.events.KeyHandler.prototype.keyDownKey_ = null;
goog.events.KeyHandler.prototype.keyUpKey_ = null;
goog.events.KeyHandler.prototype.lastKey_ = -1;
goog.events.KeyHandler.prototype.keyCode_ = -1;
goog.events.KeyHandler.prototype.altKey_ = false;
goog.events.KeyHandler.EventType = {KEY:"key"};
goog.events.KeyHandler.safariKey_ = {3:goog.events.KeyCodes.ENTER, 12:goog.events.KeyCodes.NUMLOCK, 63232:goog.events.KeyCodes.UP, 63233:goog.events.KeyCodes.DOWN, 63234:goog.events.KeyCodes.LEFT, 63235:goog.events.KeyCodes.RIGHT, 63236:goog.events.KeyCodes.F1, 63237:goog.events.KeyCodes.F2, 63238:goog.events.KeyCodes.F3, 63239:goog.events.KeyCodes.F4, 63240:goog.events.KeyCodes.F5, 63241:goog.events.KeyCodes.F6, 63242:goog.events.KeyCodes.F7, 63243:goog.events.KeyCodes.F8, 63244:goog.events.KeyCodes.F9, 
63245:goog.events.KeyCodes.F10, 63246:goog.events.KeyCodes.F11, 63247:goog.events.KeyCodes.F12, 63248:goog.events.KeyCodes.PRINT_SCREEN, 63272:goog.events.KeyCodes.DELETE, 63273:goog.events.KeyCodes.HOME, 63275:goog.events.KeyCodes.END, 63276:goog.events.KeyCodes.PAGE_UP, 63277:goog.events.KeyCodes.PAGE_DOWN, 63289:goog.events.KeyCodes.NUMLOCK, 63302:goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.keyIdentifier_ = {"Up":goog.events.KeyCodes.UP, "Down":goog.events.KeyCodes.DOWN, "Left":goog.events.KeyCodes.LEFT, "Right":goog.events.KeyCodes.RIGHT, "Enter":goog.events.KeyCodes.ENTER, "F1":goog.events.KeyCodes.F1, "F2":goog.events.KeyCodes.F2, "F3":goog.events.KeyCodes.F3, "F4":goog.events.KeyCodes.F4, "F5":goog.events.KeyCodes.F5, "F6":goog.events.KeyCodes.F6, "F7":goog.events.KeyCodes.F7, "F8":goog.events.KeyCodes.F8, "F9":goog.events.KeyCodes.F9, "F10":goog.events.KeyCodes.F10, 
"F11":goog.events.KeyCodes.F11, "F12":goog.events.KeyCodes.F12, "U+007F":goog.events.KeyCodes.DELETE, "Home":goog.events.KeyCodes.HOME, "End":goog.events.KeyCodes.END, "PageUp":goog.events.KeyCodes.PAGE_UP, "PageDown":goog.events.KeyCodes.PAGE_DOWN, "Insert":goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.USES_KEYDOWN_ = goog.userAgent.IE || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("525");
goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_ = goog.userAgent.MAC && goog.userAgent.GECKO;
goog.events.KeyHandler.prototype.handleKeyDown_ = function(e) {
  if(goog.userAgent.WEBKIT) {
    if(this.lastKey_ == goog.events.KeyCodes.CTRL && !e.ctrlKey || this.lastKey_ == goog.events.KeyCodes.ALT && !e.altKey || goog.userAgent.MAC && this.lastKey_ == goog.events.KeyCodes.META && !e.metaKey) {
      this.lastKey_ = -1;
      this.keyCode_ = -1
    }
  }
  if(this.lastKey_ == -1) {
    if(e.ctrlKey && e.keyCode != goog.events.KeyCodes.CTRL) {
      this.lastKey_ = goog.events.KeyCodes.CTRL
    }else {
      if(e.altKey && e.keyCode != goog.events.KeyCodes.ALT) {
        this.lastKey_ = goog.events.KeyCodes.ALT
      }else {
        if(e.metaKey && e.keyCode != goog.events.KeyCodes.META) {
          this.lastKey_ = goog.events.KeyCodes.META
        }
      }
    }
  }
  if(goog.events.KeyHandler.USES_KEYDOWN_ && !goog.events.KeyCodes.firesKeyPressEvent(e.keyCode, this.lastKey_, e.shiftKey, e.ctrlKey, e.altKey)) {
    this.handleEvent(e)
  }else {
    this.keyCode_ = goog.userAgent.GECKO ? goog.events.KeyCodes.normalizeGeckoKeyCode(e.keyCode) : e.keyCode;
    if(goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_) {
      this.altKey_ = e.altKey
    }
  }
};
goog.events.KeyHandler.prototype.resetState = function() {
  this.lastKey_ = -1;
  this.keyCode_ = -1
};
goog.events.KeyHandler.prototype.handleKeyup_ = function(e) {
  this.resetState();
  this.altKey_ = e.altKey
};
goog.events.KeyHandler.prototype.handleEvent = function(e) {
  var be = e.getBrowserEvent();
  var keyCode, charCode;
  var altKey = be.altKey;
  if(goog.userAgent.IE && e.type == goog.events.EventType.KEYPRESS) {
    keyCode = this.keyCode_;
    charCode = keyCode != goog.events.KeyCodes.ENTER && keyCode != goog.events.KeyCodes.ESC ? be.keyCode : 0
  }else {
    if(goog.userAgent.WEBKIT && e.type == goog.events.EventType.KEYPRESS) {
      keyCode = this.keyCode_;
      charCode = be.charCode >= 0 && be.charCode < 63232 && goog.events.KeyCodes.isCharacterKey(keyCode) ? be.charCode : 0
    }else {
      if(goog.userAgent.OPERA) {
        keyCode = this.keyCode_;
        charCode = goog.events.KeyCodes.isCharacterKey(keyCode) ? be.keyCode : 0
      }else {
        keyCode = be.keyCode || this.keyCode_;
        charCode = be.charCode || 0;
        if(goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_) {
          altKey = this.altKey_
        }
        if(goog.userAgent.MAC && charCode == goog.events.KeyCodes.QUESTION_MARK && keyCode == goog.events.KeyCodes.WIN_KEY) {
          keyCode = goog.events.KeyCodes.SLASH
        }
      }
    }
  }
  var key = keyCode;
  var keyIdentifier = be.keyIdentifier;
  if(keyCode) {
    if(keyCode >= 63232 && keyCode in goog.events.KeyHandler.safariKey_) {
      key = goog.events.KeyHandler.safariKey_[keyCode]
    }else {
      if(keyCode == 25 && e.shiftKey) {
        key = 9
      }
    }
  }else {
    if(keyIdentifier && keyIdentifier in goog.events.KeyHandler.keyIdentifier_) {
      key = goog.events.KeyHandler.keyIdentifier_[keyIdentifier]
    }
  }
  var repeat = key == this.lastKey_;
  this.lastKey_ = key;
  var event = new goog.events.KeyEvent(key, charCode, repeat, be);
  event.altKey = altKey;
  this.dispatchEvent(event)
};
goog.events.KeyHandler.prototype.getElement = function() {
  return this.element_
};
goog.events.KeyHandler.prototype.attach = function(element, opt_capture) {
  if(this.keyUpKey_) {
    this.detach()
  }
  this.element_ = element;
  this.keyPressKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYPRESS, this, opt_capture);
  this.keyDownKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYDOWN, this.handleKeyDown_, opt_capture, this);
  this.keyUpKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYUP, this.handleKeyup_, opt_capture, this)
};
goog.events.KeyHandler.prototype.detach = function() {
  if(this.keyPressKey_) {
    goog.events.unlistenByKey(this.keyPressKey_);
    goog.events.unlistenByKey(this.keyDownKey_);
    goog.events.unlistenByKey(this.keyUpKey_);
    this.keyPressKey_ = null;
    this.keyDownKey_ = null;
    this.keyUpKey_ = null
  }
  this.element_ = null;
  this.lastKey_ = -1;
  this.keyCode_ = -1
};
goog.events.KeyHandler.prototype.disposeInternal = function() {
  goog.events.KeyHandler.superClass_.disposeInternal.call(this);
  this.detach()
};
goog.events.KeyEvent = function(keyCode, charCode, repeat, browserEvent) {
  goog.events.BrowserEvent.call(this, browserEvent);
  this.type = goog.events.KeyHandler.EventType.KEY;
  this.keyCode = keyCode;
  this.charCode = charCode;
  this.repeat = repeat
};
goog.inherits(goog.events.KeyEvent, goog.events.BrowserEvent);
goog.provide("X.interactor");
goog.require("X.base");
goog.require("X.event");
goog.require("X.event.HoverEvent");
goog.require("X.event.HoverEndEvent");
goog.require("X.event.RotateEvent");
goog.require("X.event.PanEvent");
goog.require("X.event.ResetViewEvent");
goog.require("X.event.ZoomEvent");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyHandler");
goog.require("goog.events.MouseWheelHandler");
goog.require("goog.math.Vec3");
X.interactor = function(element) {
  goog.base(this);
  this._classname = "interactor";
  this._element = element;
  this._mouseWheelListener = null;
  this._mouseDownListener = null;
  this._mouseUpListener = null;
  this._mouseMoveListener = null;
  this._mouseOutListener = null;
  this._mouseWheelHandler = null;
  this._mouseInside = true;
  this._leftButtonDown = false;
  this._middleButtonDown = false;
  this._rightButtonDown = false;
  this._mousePosition = [0, 0];
  this._lastMousePosition = new X.vector(0, 0, 0);
  this._lastTouchPosition = new X.vector(0, 0, 0);
  this.lastFingerDistance = 0;
  this._hoverTrigger = null;
  this._touchHoverTrigger = null;
  this._shiftDown = false;
  this._config = {"MOUSEWHEEL_ENABLED":true, "MOUSECLICKS_ENABLED":true, "KEYBOARD_ENABLED":true, "HOVERING_ENABLED":true, "CONTEXTMENU_ENABLED":false, "TOUCH_ENABLED":true, "TOUCH_BOUNCING_ENABLED":false}
};
goog.inherits(X.interactor, X.base);
X.interactor.prototype.__defineGetter__("config", function() {
  return this._config
});
X.interactor.prototype.__defineGetter__("leftButtonDown", function() {
  return this._leftButtonDown
});
X.interactor.prototype.__defineGetter__("middleButtonDown", function() {
  return this._middleButtonDown
});
X.interactor.prototype.__defineGetter__("rightButtonDown", function() {
  return this._rightButtonDown
});
X.interactor.prototype.init = function() {
  if(this._config["MOUSEWHEEL_ENABLED"]) {
    this._mouseWheelHandler = new goog.events.MouseWheelHandler(this._element);
    this._mouseWheelListener = goog.events.listen(this._mouseWheelHandler, goog.events.MouseWheelHandler.EventType.MOUSEWHEEL, this.onMouseWheel_.bind(this))
  }else {
    goog.events.unlistenByKey(this._mouseWheelListener);
    this._mouseWheelHandler = null
  }
  if(this._config["MOUSECLICKS_ENABLED"]) {
    this._mouseDownListener = goog.events.listen(this._element, goog.events.EventType.MOUSEDOWN, this.onMouseDown_.bind(this));
    this._mouseUpListener = goog.events.listen(this._element, goog.events.EventType.MOUSEUP, this.onMouseUp_.bind(this))
  }else {
    goog.events.unlistenByKey(this._mouseDownListener);
    goog.events.unlistenByKey(this._mouseUpListener)
  }
  if(!this._config["CONTEXTMENU_ENABLED"]) {
    this._element.oncontextmenu = function() {
      return false
    }
  }else {
    this._element.oncontextmenu = null
  }
  if(this._config["KEYBOARD_ENABLED"]) {
    window.onkeydown = this.onKey_.bind(this)
  }else {
    window.onkeydown = null
  }
  if(this._config["TOUCH_ENABLED"]) {
    if(!this._config["TOUCH_BOUNCING_ENABLED"]) {
      document.body.addEventListener("touchmove", function(event) {
        event.preventDefault()
      }, false)
    }
    this._touchStartListener = goog.events.listen(this._element, goog.events.EventType.TOUCHSTART, this.onTouchStart_.bind(this));
    this._touchMoveListener = goog.events.listen(this._element, goog.events.EventType.TOUCHMOVE, this.onTouchMove_.bind(this));
    this._touchEndListener = goog.events.listen(this._element, goog.events.EventType.TOUCHEND, this.onTouchEnd_.bind(this))
  }else {
    goog.events.unlistenByKey(this._touchStartListener);
    goog.events.unlistenByKey(this._touchMoveListener);
    goog.events.unlistenByKey(this._touchEndListener)
  }
  goog.events.unlistenByKey(this._mouseMoveListener);
  goog.events.unlistenByKey(this._mouseOutListener);
  this._mouseMoveListener = goog.events.listen(this._element, goog.events.EventType.MOUSEMOVE, this.onMouseMovementInside_.bind(this));
  this._mouseOutListener = goog.events.listen(this._element, goog.events.EventType.MOUSEOUT, this.onMouseMovementOutside_.bind(this))
};
X.interactor.prototype.onMouseDown_ = function(event) {
  if(event.button == goog.events.BrowserEvent.MouseButton.LEFT) {
    this._leftButtonDown = true
  }else {
    if(event.button == goog.events.BrowserEvent.MouseButton.MIDDLE) {
      this._middleButtonDown = true
    }else {
      if(event.button == goog.events.BrowserEvent.MouseButton.RIGHT) {
        this._rightButtonDown = true
      }
    }
  }
  eval("this.onMouseDown(" + this._leftButtonDown + "," + this._middleButtonDown + "," + this._rightButtonDown + ")");
  this.hoverEnd_();
  event.preventDefault()
};
X.interactor.prototype.onMouseDown = function(left, middle, right) {
};
X.interactor.prototype.onMouseUp_ = function(event) {
  if(event.button == goog.events.BrowserEvent.MouseButton.LEFT) {
    this._leftButtonDown = false
  }else {
    if(event.button == goog.events.BrowserEvent.MouseButton.MIDDLE) {
      this._middleButtonDown = false
    }else {
      if(event.button == goog.events.BrowserEvent.MouseButton.RIGHT) {
        this._rightButtonDown = false
      }
    }
  }
  eval("this.onMouseUp(" + this._leftButtonDown + "," + this._middleButtonDown + "," + this._rightButtonDown + ")");
  this.hoverEnd_();
  event.preventDefault()
};
X.interactor.prototype.__defineGetter__("mousePosition", function() {
  return this._mousePosition
});
X.interactor.prototype.onMouseUp = function(left, middle, right) {
};
X.interactor.prototype.onMouseMovementOutside_ = function(event) {
  this._mouseInside = false;
  if(this._config["KEYBOARD_ENABLED"]) {
    window.onkeydown = null
  }
  this._leftButtonDown = false;
  this._middleButtonDown = false;
  this._rightButtonDown = false;
  this.hoverEnd_();
  this._lastMousePosition = new X.vector(0, 0, 0);
  event.preventDefault()
};
X.interactor.prototype.onMouseMove = function(event) {
};
X.interactor.prototype.onTouchStart_ = function(event) {
  event.preventDefault();
  event.init(event.getBrowserEvent().targetTouches[0], event.currentTarget);
  eval("this.onTouchStart(" + event.clientX + "," + event.clientY + ")");
  this._lastTouchPosition = new X.vector(event.clientX, event.clientY, 0);
  this._touchHoverTrigger = setTimeout(this.onTouchHover_.bind(this, event), 500)
};
X.interactor.prototype.onTouchStart = function(x, y) {
};
X.interactor.prototype.onTouchHover_ = function(event) {
  eval("this.onTouchHover(" + event.clientX + "," + event.clientY + ")");
  var e = new X.event.ZoomEvent;
  e._in = true;
  e._fast = this instanceof X.interactor3D;
  this.dispatchEvent(e);
  this._touchHovering = true
};
X.interactor.prototype.onTouchHover = function(x, y) {
};
X.interactor.prototype.resetTouchHover_ = function() {
  clearTimeout(this._touchHoverTrigger);
  if(this._touchHovering) {
    var e = new X.event.ZoomEvent;
    e._in = false;
    e._fast = this instanceof X.interactor3D;
    this.dispatchEvent(e)
  }
  this._touchHovering = false
};
X.interactor.prototype.onTouchEnd_ = function(event) {
  event.preventDefault();
  eval("this.onTouchEnd()");
  this.resetTouchHover_()
};
X.interactor.prototype.onTouchEnd = function() {
};
X.interactor.prototype.onTouchMove_ = function(event) {
  event.preventDefault();
  if(!this._touchHovering) {
    this.resetTouchHover_()
  }
  event = event.getBrowserEvent();
  this["touchmoveEvent"] = event;
  eval("this.onTouchMove(this['touchmoveEvent'])");
  var _fingers = event.targetTouches;
  if(_fingers.length == 1) {
    var finger1 = _fingers[0];
    var _touchPosition = [finger1.clientX, finger1.clientY];
    var currentTouchPosition = new X.vector(_touchPosition[0], _touchPosition[1], 0);
    var _right_quarter = _touchPosition[0] > this._element.clientWidth * 3 / 4;
    var _left_quarter = _touchPosition[0] < this._element.clientWidth / 4;
    var _top_quarter = _touchPosition[1] < this._element.clientHeight / 4;
    var _bottom_quarter = _touchPosition[1] > this._element.clientHeight * 3 / 4;
    var _middle = !_right_quarter && !_left_quarter && !_top_quarter && !_bottom_quarter;
    var distance = this._lastTouchPosition.subtract(currentTouchPosition);
    this._lastTouchPosition = currentTouchPosition.clone();
    if(this._touchHovering) {
      var e = new X.event.PanEvent;
      if(distance.x > 5) {
        distance.x = 1
      }else {
        if(distance.x < -5) {
          distance.x = -1
        }
      }
      if(distance.y > 5) {
        distance.y = 1
      }else {
        if(distance.y < -5) {
          distance.y = -1
        }
      }
      e._distance = distance;
      this.dispatchEvent(e)
    }else {
      if(this instanceof X.interactor2D && (_right_quarter || _left_quarter)) {
        var e = new X.event.ScrollEvent;
        e._up = distance.y < 0;
        this.dispatchEvent(e)
      }else {
        if(this instanceof X.interactor3D || _middle) {
          distance.scale(3);
          var e = new X.event.RotateEvent;
          e._distance = distance;
          this.dispatchEvent(e)
        }
      }
    }
  }else {
    if(_fingers.length == 2) {
      var finger1 = _fingers[0];
      var finger2 = _fingers[1];
      var _touchPosition1 = [finger1.clientX, finger1.clientY];
      var _touchPosition2 = [finger2.clientX, finger2.clientY];
      var currentTouchPosition1 = new X.vector(_touchPosition1[0], _touchPosition1[1], 0);
      var currentTouchPosition2 = new X.vector(_touchPosition2[0], _touchPosition2[1], 0);
      var distance = goog.math.Vec3.squaredDistance(currentTouchPosition1, currentTouchPosition2);
      var distanceChange = distance - this.lastFingerDistance;
      this.lastFingerDistance = distance;
      distance = this._lastTouchPosition.subtract(currentTouchPosition1);
      this._lastTouchPosition = currentTouchPosition1.clone();
      if(Math.abs(distanceChange) > 10) {
        var e = new X.event.ZoomEvent;
        e._in = distanceChange > 0;
        e._fast = this instanceof X.interactor3D;
        this.dispatchEvent(e)
      }
    }
  }
};
X.interactor.prototype.onTouchMove = function(event) {
};
X.interactor.prototype.onMouseMovementInside_ = function(event) {
  this["mousemoveEvent"] = event;
  eval("this.onMouseMove(this['mousemoveEvent'])");
  this._mouseInside = true;
  if(this._config["KEYBOARD_ENABLED"] && window.onkeydown == null) {
    window.onkeydown = this.onKey_.bind(this)
  }
  event.preventDefault();
  var shiftDown = event.shiftKey;
  this._shiftDown = shiftDown;
  this._mousePosition = [event.offsetX, event.offsetY];
  var currentMousePosition = new X.vector(this._mousePosition[0], this._mousePosition[1], 0);
  var distance = this._lastMousePosition.subtract(currentMousePosition);
  this._lastMousePosition = currentMousePosition.clone();
  if(this._config["HOVERING_ENABLED"]) {
    if(Math.abs(distance.x) > 0 || Math.abs(distance.y) > 0 || this._middleButtonDown || this._leftButtonDown || this._rightButtonDown) {
      this.hoverEnd_()
    }
    this._hoverTrigger = setTimeout(function() {
      this.hoverEnd_();
      var e = new X.event.HoverEvent;
      e._x = currentMousePosition.x;
      e._y = currentMousePosition.y;
      this.dispatchEvent(e);
      this._hoverTrigger = null
    }.bind(this), 300)
  }
  if(distance.magnitude() == 0) {
    return
  }
  if(this._leftButtonDown && !shiftDown) {
    var e = new X.event.RotateEvent;
    distance.scale(3);
    e._distance = distance;
    this.dispatchEvent(e)
  }else {
    if(this._middleButtonDown || this._leftButtonDown && shiftDown) {
      var e = new X.event.PanEvent;
      e._distance = distance;
      this.dispatchEvent(e)
    }else {
      if(this._rightButtonDown) {
        var e = new X.event.ZoomEvent;
        e._in = distance.y > 0;
        e._fast = false;
        this.dispatchEvent(e)
      }
    }
  }
};
X.interactor.prototype.hoverEnd_ = function() {
  if(this._hoverTrigger) {
    clearTimeout(this._hoverTrigger)
  }
  var e = new X.event.HoverEndEvent;
  this.dispatchEvent(e)
};
X.interactor.prototype.onMouseWheel = function(event) {
};
X.interactor.prototype.onMouseWheel_ = function(event) {
  this["mouseWheelEvent"] = event;
  eval("this.onMouseWheel(this['mouseWheelEvent'])");
  this.hoverEnd_();
  event.preventDefault()
};
X.interactor.prototype.onKey = function(event) {
};
X.interactor.prototype.onKey_ = function(event) {
  if(!this._mouseInside) {
    return
  }
  this["keyEvent"] = event;
  eval("this.onKey(this['keyEvent'])");
  this.hoverEnd_();
  var alt = event.altKey;
  var ctrl = event.ctrlKey;
  var meta = event.metaKey;
  var shift = event.shiftKey;
  var keyCode = event.keyCode;
  if(keyCode == 82 && !alt && !ctrl && !meta && !shift) {
    event.preventDefault();
    var e = new X.event.ResetViewEvent;
    this.dispatchEvent(e)
  }else {
    if(keyCode >= 37 && keyCode <= 40) {
      event.preventDefault();
      var e = null;
      if(shift) {
        e = new X.event.PanEvent
      }else {
        if(alt) {
          e = new X.event.ZoomEvent
        }else {
          e = new X.event.RotateEvent;
          if(this instanceof X.interactor2D) {
            e = new X.event.ScrollEvent
          }
        }
      }
      if(!e) {
        return
      }
      var distance = new X.vector(0, 0, 0);
      if(keyCode == 37) {
        distance.x = 5;
        e._up = false;
        if(alt) {
          e._up = true;
          e._in = true;
          e._fast = false
        }
      }else {
        if(keyCode == 39) {
          distance.x = -5;
          e._up = true;
          if(alt) {
            e._in = false;
            e._fast = false
          }
        }else {
          if(keyCode == 38) {
            distance.y = 5;
            e._up = true;
            if(alt) {
              e._in = true;
              e._fast = true
            }
          }else {
            if(keyCode == 40) {
              distance.y = -5;
              e._up = false;
              if(alt) {
                e._in = false;
                e._fast = true
              }
            }
          }
        }
      }
      e._distance = distance;
      this.dispatchEvent(e)
    }
  }
};
goog.exportSymbol("X.interactor", X.interactor);
goog.exportSymbol("X.interactor.prototype.init", X.interactor.prototype.init);
goog.exportSymbol("X.interactor.prototype.onMouseDown", X.interactor.prototype.onMouseDown);
goog.exportSymbol("X.interactor.prototype.onMouseUp", X.interactor.prototype.onMouseUp);
goog.exportSymbol("X.interactor.prototype.onMouseMove", X.interactor.prototype.onMouseMove);
goog.exportSymbol("X.interactor.prototype.onMouseWheel", X.interactor.prototype.onMouseWheel);
goog.exportSymbol("X.interactor.prototype.onKey", X.interactor.prototype.onKey);
goog.exportSymbol("X.interactor.prototype.onTouchStart", X.interactor.prototype.onTouchStart);
goog.exportSymbol("X.interactor.prototype.onTouchMove", X.interactor.prototype.onTouchMove);
goog.exportSymbol("X.interactor.prototype.onTouchEnd", X.interactor.prototype.onTouchEnd);
goog.exportSymbol("X.interactor.prototype.onTouchHover", X.interactor.prototype.onTouchHover);
goog.provide("X.interactor2D");
goog.require("X.interactor");
goog.require("X.event.ScrollEvent");
X.interactor2D = function(element) {
  goog.base(this, element);
  this._classname = "interactor2D"
};
goog.inherits(X.interactor2D, X.interactor);
X.interactor2D.prototype.onMouseWheel_ = function(event) {
  goog.base(this, "onMouseWheel_", event);
  var e = new X.event.ScrollEvent;
  if(!goog.isDefAndNotNull(event.deltaY)) {
    event.deltaY = 0
  }
  e._up = event.deltaY < 0;
  this.dispatchEvent(e)
};
goog.provide("X.camera");
goog.require("X.base");
goog.require("X.event.ZoomEvent");
goog.require("X.event.PanEvent");
goog.require("X.event.RenderEvent");
goog.require("X.interactor");
goog.require("X.matrix");
goog.require("X.vector");
X.camera = function(width, height) {
  if(!goog.isNumber(width) || !goog.isNumber(height)) {
    throw new Error("A camera needs valid width and height values.");
  }
  goog.base(this);
  this._classname = "camera";
  this._position = new X.vector(0, 100, 0);
  this._focus = new X.vector(0, 0, 0);
  this._up = new X.vector(0, 0, 1);
  this._width = width;
  this._height = height;
  this._view = this.lookAt_(this._position, this._focus)
};
goog.inherits(X.camera, X.base);
X.camera.prototype.observe = function(interactor) {
  if(!goog.isDefAndNotNull(interactor) || !(interactor instanceof X.interactor)) {
    throw new Error("Could not observe the interactor.");
  }
  goog.events.listen(interactor, X.event.events.ROTATE, this.onRotate_.bind(this));
  goog.events.listen(interactor, X.event.events.PAN, this.onPan_.bind(this));
  goog.events.listen(interactor, X.event.events.ZOOM, this.onZoom_.bind(this))
};
X.camera.prototype.onRotate_ = function(event) {
  if(!(event instanceof X.event.RotateEvent)) {
    throw new Error("Received no valid rotate event.");
  }
  this.rotate(event._distance)
};
X.camera.prototype.onZoom_ = function(event) {
  if(!(event instanceof X.event.ZoomEvent)) {
    throw new Error("Received no valid zoom event.");
  }
  if(event._in) {
    this.zoomIn(event._fast)
  }else {
    this.zoomOut(event._fast)
  }
};
X.camera.prototype.onPan_ = function(event) {
  if(!(event instanceof X.event.PanEvent)) {
    throw new Error("Received no valid pan event.");
  }
  this.pan(event._distance)
};
X.camera.prototype.__defineGetter__("view", function() {
  return this._view
});
X.camera.prototype.__defineSetter__("view", function(view) {
  if(!goog.isDefAndNotNull(view) || !(view instanceof Float32Array)) {
    throw new Error("Invalid view matrix.");
  }
  this._view = view
});
X.camera.prototype.__defineGetter__("position", function() {
  return[this._position.x, this._position.y, this._position.z]
});
X.camera.prototype.__defineSetter__("position", function(position) {
  if(!goog.isDefAndNotNull(position) || !goog.isArray(position) || position.length != 3) {
    throw new Error("Invalid position.");
  }
  var x = position[0];
  var y = position[1];
  var z = position[2];
  this._position = new X.vector(x, y, z);
  this.reset()
});
X.camera.prototype.__defineGetter__("focus", function() {
  return[this._focus.x, this._focus.y, this._focus.z]
});
X.camera.prototype.__defineSetter__("focus", function(focus) {
  if(!goog.isDefAndNotNull(focus) || !goog.isArray(focus) || focus.length != 3) {
    throw new Error("Invalid focus");
  }
  var x = focus[0];
  var y = focus[1];
  var z = focus[2];
  this._focus = new X.vector(x, y, z);
  this.reset()
});
X.camera.prototype.__defineGetter__("up", function() {
  return[this._up.x, this._up.y, this._up.z]
});
X.camera.prototype.__defineSetter__("up", function(up) {
  if(!goog.isDefAndNotNull(up) || !goog.isArray(up) || up.length != 3) {
    throw new Error("Invalid up vector.");
  }
  var x = up[0];
  var y = up[1];
  var z = up[2];
  this._up = new X.vector(x, y, z);
  this.reset()
});
X.camera.prototype.reset = function() {
  this._view = this.lookAt_(this._position, this._focus)
};
X.camera.prototype.rotate = function(distance) {
  if(goog.isArray(distance) && distance.length == 2) {
    distance = new X.vector(distance[0], distance[1], 0)
  }else {
    if(!(distance instanceof X.vector)) {
      throw new Error("Invalid distance vector for rotate operation.");
    }
  }
  return distance
};
X.camera.prototype.pan = function(distance) {
  if(goog.isArray(distance) && distance.length == 2) {
    distance = new X.vector(distance[0], distance[1], 0)
  }else {
    if(!(distance instanceof X.vector)) {
      throw new Error("Invalid distance vector for pan operation.");
    }
  }
  this._view[12] -= distance.x;
  this._view[13] += distance.y
};
X.camera.prototype.zoomIn = function(fast) {
  var zoomStep = 20;
  if(goog.isDefAndNotNull(fast) && !fast) {
    zoomStep = 1
  }
  this._view[14] += zoomStep
};
X.camera.prototype.zoomOut = function(fast) {
  var zoomStep = 20;
  if(goog.isDefAndNotNull(fast) && !fast) {
    zoomStep = 1
  }
  this._view[14] -= zoomStep
};
X.camera.prototype.lookAt_ = function(cameraPosition, targetPoint) {
  if(!(cameraPosition instanceof X.vector) || !(targetPoint instanceof X.vector)) {
    throw new Error("3D vectors required for calculating the view.");
  }
  return X.matrix.identity()
};
goog.exportSymbol("X.camera", X.camera);
goog.exportSymbol("X.camera.prototype.pan", X.camera.prototype.pan);
goog.exportSymbol("X.camera.prototype.rotate", X.camera.prototype.rotate);
goog.exportSymbol("X.camera.prototype.zoomIn", X.camera.prototype.zoomIn);
goog.exportSymbol("X.camera.prototype.zoomOut", X.camera.prototype.zoomOut);
goog.provide("X.camera3D");
goog.require("X.camera");
goog.require("X.event.RotateEvent");
goog.require("X.matrix");
X.camera3D = function(width, height) {
  goog.base(this, width, height);
  this._classname = "camera3D";
  this._fieldOfView = 45;
  this._perspective = X.matrix.makePerspective(X.matrix.identity(), this._fieldOfView, width / height, 1, 1E4)
};
goog.inherits(X.camera3D, X.camera);
X.camera3D.prototype.rotate = function(distance) {
  distance = goog.base(this, "rotate", distance);
  var angleX = -distance.x / 5 * Math.PI / 180;
  var angleY = -distance.y / 5 * Math.PI / 180;
  var axisX = new X.vector(this._view[1], this._view[5], this._view[9]);
  var axisY = new X.vector(this._view[0], this._view[4], this._view[8]);
  axisX.normalize();
  axisY.normalize();
  X.matrix.rotate(this._view, angleX, axisX.x, axisX.y, axisX.z);
  X.matrix.rotate(this._view, angleY, axisY.x, axisY.y, axisY.z)
};
X.camera3D.prototype.lookAt_ = function(cameraPosition, targetPoint) {
  var matrix = goog.base(this, "lookAt_", cameraPosition, targetPoint);
  X.matrix.makeLookAt(matrix, cameraPosition, targetPoint, this._up);
  return matrix
};
X.camera3D.prototype.unproject_ = function(x, y, z) {
  var _in = new Float32Array(4);
  var _out = new Float32Array(4);
  var _m = new Float32Array(16);
  var _A = new Float32Array(16);
  var _B = new Float32Array(16);
  X.matrix.multiply(this._perspective, this._view, _A);
  X.matrix.invert(_A, _m);
  _in[0] = x;
  _in[1] = y;
  _in[2] = 2 * z - 1;
  _in[3] = 1;
  X.matrix.multiplyByVec4(_m, _in, _out);
  _out[3] = 1 / _out[3];
  _out[0] = _out[0] * _out[3];
  _out[1] = _out[1] * _out[3];
  _out[2] = _out[2] * _out[3];
  return _out
};
goog.exportSymbol("X.camera3D", X.camera3D);
goog.provide("X.parser");
goog.require("X.base");
goog.require("X.event");
goog.require("X.texture");
goog.require("X.triplets");
goog.require("goog.vec.Vec4");
goog.require("goog.vec.Vec3");
goog.require("goog.vec.Mat4");
X.parser = function() {
  goog.base(this);
  this._classname = "parser";
  this._data = null;
  this._dataPointer = 0;
  this._nativeLittleEndian = (new Int8Array((new Int16Array([1])).buffer))[0] > 0;
  this._littleEndian = true;
  this._lastMin = -Infinity;
  this._lastMax = Infinity
};
goog.inherits(X.parser, X.base);
X.parser.prototype.parse = function(container, object, data, flag) {
  throw new Error("The function parse() should be overloaded.");
};
X.parser.prototype.arrayMinMax = function(data) {
  var _min = Infinity;
  var _max = -Infinity;
  var _datasize = data.length;
  var i = 0;
  for(i = 0;i < _datasize;i++) {
    if(!isNaN(data[i])) {
      var _value = data[i];
      _min = Math.min(_min, _value);
      _max = Math.max(_max, _value)
    }
  }
  return[_min, _max]
};
X.parser.prototype.parseChars = function(array, start, end) {
  if(start === undefined) {
    start = 0
  }
  if(end === undefined) {
    end = array.length
  }
  var _output = "";
  var i = 0;
  for(i = start;i < end;++i) {
    _output += String.fromCharCode(array[i])
  }
  return _output
};
X.parser.prototype.jumpTo = function(position) {
  this._dataPointer = position
};
X.parser.prototype.scan = function(type, chunks) {
  if(!goog.isDefAndNotNull(chunks)) {
    chunks = 1
  }
  var _chunkSize = 1;
  var _array_type = Uint8Array;
  switch(type) {
    case "uchar":
      break;
    case "schar":
      _array_type = Int8Array;
      break;
    case "ushort":
      _array_type = Uint16Array;
      _chunkSize = 2;
      break;
    case "sshort":
      _array_type = Int16Array;
      _chunkSize = 2;
      break;
    case "uint":
      _array_type = Uint32Array;
      _chunkSize = 4;
      break;
    case "sint":
      _array_type = Int32Array;
      _chunkSize = 4;
      break;
    case "float":
      _array_type = Float32Array;
      _chunkSize = 4;
      break;
    case "complex":
      _array_type = Float64Array;
      _chunkSize = 8;
      break;
    case "double":
      _array_type = Float64Array;
      _chunkSize = 8;
      break
  }
  var _bytes = new _array_type(this._data.slice(this._dataPointer, this._dataPointer += chunks * _chunkSize));
  if(this._nativeLittleEndian != this._littleEndian) {
    _bytes = this.flipEndianness(_bytes, _chunkSize)
  }
  if(chunks == 1) {
    return _bytes[0]
  }
  return _bytes
};
X.parser.prototype.flipEndianness = function(array, chunkSize) {
  var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);
  for(var i = 0;i < array.byteLength;i += chunkSize) {
    for(var j = i + chunkSize - 1, k = i;j > k;j--, k++) {
      var tmp = u8[k];
      u8[k] = u8[j];
      u8[j] = tmp
    }
  }
  return array
};
X.parser.computeRASBBox = function(IJKToRAS, MRIdim) {
  var _rasBB = [Number.MAX_VALUE, -Number.MAX_VALUE, Number.MAX_VALUE, -Number.MAX_VALUE, Number.MAX_VALUE, -Number.MAX_VALUE];
  var ijkTarget = goog.vec.Vec4.createFloat32FromValues(0, 0, 0, 1);
  var rasResult = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, ijkTarget, rasResult);
  _rasBB[0] = rasResult[0] < _rasBB[0] ? rasResult[0] : _rasBB[0];
  _rasBB[1] = rasResult[0] > _rasBB[1] ? rasResult[0] : _rasBB[1];
  _rasBB[2] = rasResult[1] < _rasBB[2] ? rasResult[1] : _rasBB[2];
  _rasBB[3] = rasResult[1] > _rasBB[3] ? rasResult[1] : _rasBB[3];
  _rasBB[4] = rasResult[2] < _rasBB[4] ? rasResult[2] : _rasBB[4];
  _rasBB[5] = rasResult[2] > _rasBB[5] ? rasResult[2] : _rasBB[5];
  ijkTarget = goog.vec.Vec4.createFloat32FromValues(0, 0, MRIdim[2] - 1, 1);
  goog.vec.Mat4.multVec4(IJKToRAS, ijkTarget, rasResult);
  _rasBB[0] = rasResult[0] < _rasBB[0] ? rasResult[0] : _rasBB[0];
  _rasBB[1] = rasResult[0] > _rasBB[1] ? rasResult[0] : _rasBB[1];
  _rasBB[2] = rasResult[1] < _rasBB[2] ? rasResult[1] : _rasBB[2];
  _rasBB[3] = rasResult[1] > _rasBB[3] ? rasResult[1] : _rasBB[3];
  _rasBB[4] = rasResult[2] < _rasBB[4] ? rasResult[2] : _rasBB[4];
  _rasBB[5] = rasResult[2] > _rasBB[5] ? rasResult[2] : _rasBB[5];
  ijkTarget = goog.vec.Vec4.createFloat32FromValues(0, MRIdim[1] - 1, 0, 1);
  goog.vec.Mat4.multVec4(IJKToRAS, ijkTarget, rasResult);
  _rasBB[0] = rasResult[0] < _rasBB[0] ? rasResult[0] : _rasBB[0];
  _rasBB[1] = rasResult[0] > _rasBB[1] ? rasResult[0] : _rasBB[1];
  _rasBB[2] = rasResult[1] < _rasBB[2] ? rasResult[1] : _rasBB[2];
  _rasBB[3] = rasResult[1] > _rasBB[3] ? rasResult[1] : _rasBB[3];
  _rasBB[4] = rasResult[2] < _rasBB[4] ? rasResult[2] : _rasBB[4];
  _rasBB[5] = rasResult[2] > _rasBB[5] ? rasResult[2] : _rasBB[5];
  ijkTarget = goog.vec.Vec4.createFloat32FromValues(MRIdim[0] - 1, 0, 0, 1);
  goog.vec.Mat4.multVec4(IJKToRAS, ijkTarget, rasResult);
  _rasBB[0] = rasResult[0] < _rasBB[0] ? rasResult[0] : _rasBB[0];
  _rasBB[1] = rasResult[0] > _rasBB[1] ? rasResult[0] : _rasBB[1];
  _rasBB[2] = rasResult[1] < _rasBB[2] ? rasResult[1] : _rasBB[2];
  _rasBB[3] = rasResult[1] > _rasBB[3] ? rasResult[1] : _rasBB[3];
  _rasBB[4] = rasResult[2] < _rasBB[4] ? rasResult[2] : _rasBB[4];
  _rasBB[5] = rasResult[2] > _rasBB[5] ? rasResult[2] : _rasBB[5];
  ijkTarget = goog.vec.Vec4.createFloat32FromValues(MRIdim[0] - 1, MRIdim[1] - 1, 0, 1);
  goog.vec.Mat4.multVec4(IJKToRAS, ijkTarget, rasResult);
  _rasBB[0] = rasResult[0] < _rasBB[0] ? rasResult[0] : _rasBB[0];
  _rasBB[1] = rasResult[0] > _rasBB[1] ? rasResult[0] : _rasBB[1];
  _rasBB[2] = rasResult[1] < _rasBB[2] ? rasResult[1] : _rasBB[2];
  _rasBB[3] = rasResult[1] > _rasBB[3] ? rasResult[1] : _rasBB[3];
  _rasBB[4] = rasResult[2] < _rasBB[4] ? rasResult[2] : _rasBB[4];
  _rasBB[5] = rasResult[2] > _rasBB[5] ? rasResult[2] : _rasBB[5];
  ijkTarget = goog.vec.Vec4.createFloat32FromValues(MRIdim[0] - 1, 0, MRIdim[2] - 1, 1);
  goog.vec.Mat4.multVec4(IJKToRAS, ijkTarget, rasResult);
  _rasBB[0] = rasResult[0] < _rasBB[0] ? rasResult[0] : _rasBB[0];
  _rasBB[1] = rasResult[0] > _rasBB[1] ? rasResult[0] : _rasBB[1];
  _rasBB[2] = rasResult[1] < _rasBB[2] ? rasResult[1] : _rasBB[2];
  _rasBB[3] = rasResult[1] > _rasBB[3] ? rasResult[1] : _rasBB[3];
  _rasBB[4] = rasResult[2] < _rasBB[4] ? rasResult[2] : _rasBB[4];
  _rasBB[5] = rasResult[2] > _rasBB[5] ? rasResult[2] : _rasBB[5];
  ijkTarget = goog.vec.Vec4.createFloat32FromValues(0, MRIdim[1] - 1, MRIdim[2] - 1, 1);
  goog.vec.Mat4.multVec4(IJKToRAS, ijkTarget, rasResult);
  _rasBB[0] = rasResult[0] < _rasBB[0] ? rasResult[0] : _rasBB[0];
  _rasBB[1] = rasResult[0] > _rasBB[1] ? rasResult[0] : _rasBB[1];
  _rasBB[2] = rasResult[1] < _rasBB[2] ? rasResult[1] : _rasBB[2];
  _rasBB[3] = rasResult[1] > _rasBB[3] ? rasResult[1] : _rasBB[3];
  _rasBB[4] = rasResult[2] < _rasBB[4] ? rasResult[2] : _rasBB[4];
  _rasBB[5] = rasResult[2] > _rasBB[5] ? rasResult[2] : _rasBB[5];
  ijkTarget = goog.vec.Vec4.createFloat32FromValues(MRIdim[0] - 1, MRIdim[1] - 1, MRIdim[2] - 1, 1);
  goog.vec.Mat4.multVec4(IJKToRAS, ijkTarget, rasResult);
  _rasBB[0] = rasResult[0] < _rasBB[0] ? rasResult[0] : _rasBB[0];
  _rasBB[1] = rasResult[0] > _rasBB[1] ? rasResult[0] : _rasBB[1];
  _rasBB[2] = rasResult[1] < _rasBB[2] ? rasResult[1] : _rasBB[2];
  _rasBB[3] = rasResult[1] > _rasBB[3] ? rasResult[1] : _rasBB[3];
  _rasBB[4] = rasResult[2] < _rasBB[4] ? rasResult[2] : _rasBB[4];
  _rasBB[5] = rasResult[2] > _rasBB[5] ? rasResult[2] : _rasBB[5];
  return _rasBB
};
X.parser.createIJKVolume = function(_data, _dims, _max) {
  var _image = new Array(_dims[2]);
  var _imageN = new Array(_dims[2]);
  var _nb_pix_per_slice = _dims[1] * _dims[0];
  var _pix_value = 0;
  var _i = 0;
  var _j = 0;
  var _k = 0;
  var _data_pointer = 0;
  for(_k = 0;_k < _dims[2];_k++) {
    var _current_k = _data.subarray(_k * _nb_pix_per_slice, (_k + 1) * _nb_pix_per_slice);
    _data_pointer = 0;
    _imageN[_k] = new Array(_dims[1]);
    _image[_k] = new Array(_dims[1]);
    for(_j = 0;_j < _dims[1];_j++) {
      _imageN[_k][_j] = new _data.constructor(_dims[0]);
      _image[_k][_j] = new _data.constructor(_dims[0]);
      for(_i = 0;_i < _dims[0];_i++) {
        _pix_value = _current_k[_data_pointer];
        _imageN[_k][_j][_i] = 255 * (_pix_value / _max);
        _image[_k][_j][_i] = _pix_value;
        _data_pointer++
      }
    }
  }
  return[_image, _imageN]
};
X.parser.intersectionBBoxLine = function(_bbox, _sliceOrigin, _sliceNormal) {
  var _solutionsIn = new Array;
  var _solutionsOut = new Array;
  for(var _i = 0;_i < 6;_i++) {
    var _i2 = Math.floor(_i / 2);
    var _i3 = (_i2 + 1) % 3;
    var _i4 = (_i2 + 2) % 3;
    var _j1 = (2 + 2 * _i2) % 6;
    var _j2 = (4 + 2 * _i2) % 6;
    var _dir = _i2;
    var _sol0 = _bbox[_i];
    var _invN1 = 1 / _sliceNormal[_i2];
    var _t = (_sol0 - _sliceOrigin[_i2]) * _invN1;
    if(_t != Infinity && _t != -Infinity) {
      var _sol1 = _sliceOrigin[_i3] + _sliceNormal[_i3] * _t;
      var _sol2 = _sliceOrigin[_i4] + _sliceNormal[_i4] * _t;
      if(_sol1 >= _bbox[_j1] && _sol1 <= _bbox[_j1 + 1] && _sol2 >= _bbox[_j2] && _sol2 <= _bbox[_j2 + 1]) {
        var _sol = new Array;
        _sol[_i2] = _bbox[_i];
        _sol[_i3] = _sol1;
        _sol[_i4] = _sol2;
        _solutionsIn.push(_sol)
      }else {
        var _sol = new Array;
        _sol[_i2] = _bbox[_i];
        _sol[_i3] = _sol1;
        _sol[_i4] = _sol2;
        _solutionsOut.push(_sol)
      }
    }
  }
  return[_solutionsIn, _solutionsOut]
};
X.parser.intersectionBBoxPlane = function(_bbox, _sliceOrigin, _sliceNormal) {
  var _solutionsIn = new Array;
  var _solutionsOut = new Array;
  for(var _i = 0;_i < 6;_i++) {
    var _i2 = Math.floor(_i / 2);
    var _i3 = (_i2 + 1) % 3;
    var _i4 = (_i2 + 2) % 3;
    var _j3 = (4 + 2 * _i2) % 6;
    for(var _j = 0;_j < 2;_j++) {
      var _j2 = (2 + _j + 2 * _i2) % 6;
      var _solution = -(_sliceNormal[_i2] * (_bbox[_i] - _sliceOrigin[_i2]) + _sliceNormal[_i3] * (_bbox[_j2] - _sliceOrigin[_i3])) / _sliceNormal[_i4] + _sliceOrigin[_i4];
      if(_solution >= _bbox[_j3] && _solution <= _bbox[_j3 + 1] || _solution <= _bbox[_j3] && _solution >= _bbox[_j3 + 1]) {
        var _sol = new Array;
        _sol[_i2] = _bbox[_i];
        _sol[_i3] = _bbox[_j2];
        _sol[_i4] = _solution;
        _solutionsIn.push(_sol)
      }else {
        var _sol = new Array;
        _sol[_i2] = _bbox[_i];
        _sol[_i3] = _bbox[_j2];
        _sol[_i4] = _solution;
        _solutionsOut.push(_sol)
      }
    }
  }
  return[_solutionsIn, _solutionsOut]
};
X.parser.xyrasTransform = function(_sliceNormal, _XYNormal) {
  var _RASToXY = goog.vec.Mat4.createFloat32Identity();
  if(!goog.vec.Vec3.equals(_sliceNormal, _XYNormal)) {
    var _cp = _sliceNormal[2];
    var _teta = Math.acos(_cp);
    var _r = goog.vec.Vec3.createFloat32();
    goog.vec.Vec3.cross(_sliceNormal, _XYNormal, _r);
    goog.vec.Vec3.normalize(_r, _r);
    var a = Math.cos(_teta / 2);
    var b = Math.sin(_teta / 2) * _r[0];
    var c = Math.sin(_teta / 2) * _r[1];
    var d = Math.sin(_teta / 2) * _r[2];
    goog.vec.Mat4.setRowValues(_RASToXY, 0, a * a + b * b - c * c - d * d, 2 * (b * c - a * d), 2 * (b * d + a * c), 0);
    goog.vec.Mat4.setRowValues(_RASToXY, 1, 2 * (b * c + a * d), a * a + c * c - b * b - d * d, 2 * (c * d - a * b), 0);
    goog.vec.Mat4.setRowValues(_RASToXY, 2, 2 * (b * d - a * c), 2 * (c * d + a * b), a * a + d * d - c * c - b * b, 0)
  }
  var _XYToRAS = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.invert(_RASToXY, _XYToRAS);
  return[_RASToXY, _XYToRAS]
};
X.parser.xyBBox = function(_solutionsXY) {
  var _xyBBox = [Number.MAX_VALUE, -Number.MAX_VALUE, Number.MAX_VALUE, -Number.MAX_VALUE, Number.MAX_VALUE, -Number.MAX_VALUE];
  var i = 0;
  for(i = 0;i < _solutionsXY.length;++i) {
    if(_solutionsXY[i][0] < _xyBBox[0]) {
      _xyBBox[0] = _solutionsXY[i][0]
    }
    if(_solutionsXY[i][0] > _xyBBox[1]) {
      _xyBBox[1] = _solutionsXY[i][0]
    }
    if(_solutionsXY[i][1] < _xyBBox[2]) {
      _xyBBox[2] = _solutionsXY[i][1]
    }
    if(_solutionsXY[i][1] > _xyBBox[3]) {
      _xyBBox[3] = _solutionsXY[i][1]
    }
    if(_solutionsXY[i][2] < _xyBBox[4]) {
      _xyBBox[4] = _solutionsXY[i][2]
    }
    if(_solutionsXY[i][2] > _xyBBox[5]) {
      _xyBBox[5] = _solutionsXY[i][2]
    }
  }
  return _xyBBox
};
X.parser.reslice2 = function(_sliceOrigin, _sliceXYSpacing, _sliceNormal, _color, _bbox, _IJKVolume, object, hasLabelMap, colorTable) {
  var sliceXY = new X.slice;
  goog.vec.Vec3.normalize(_sliceNormal, _sliceNormal);
  var _solutions = X.parser.intersectionBBoxPlane(_bbox, _sliceOrigin, _sliceNormal);
  var _solutionsIn = _solutions[0];
  var _XYNormal = goog.vec.Vec3.createFloat32FromValues(0, 0, 1);
  var _XYRASTransform = X.parser.xyrasTransform(_sliceNormal, _XYNormal);
  var _RASToXY = _XYRASTransform[0];
  var _XYToRAS = _XYRASTransform[1];
  var _solutionsXY = new Array;
  for(var i = 0;i < _solutionsIn.length;++i) {
    var _rasIntersection = goog.vec.Vec4.createFloat32FromValues(_solutionsIn[i][0], _solutionsIn[i][1], _solutionsIn[i][2], 1);
    var _xyIntersection = goog.vec.Vec4.createFloat32();
    goog.vec.Mat4.multVec4(_RASToXY, _rasIntersection, _xyIntersection);
    _solutionsXY.push([_xyIntersection[0], _xyIntersection[1], _xyIntersection[2]])
  }
  var _right = goog.vec.Vec3.createFloat32FromValues(1, 0, 0);
  var _rright = goog.vec.Vec3.createFloat32();
  goog.vec.Mat4.multVec3(_XYToRAS, _right, _rright);
  var _up = goog.vec.Vec3.createFloat32FromValues(0, 1, 0);
  var _rup = goog.vec.Vec3.createFloat32();
  goog.vec.Mat4.multVec3(_XYToRAS, _up, _rup);
  var _xyBBox = X.parser.xyBBox(_solutionsXY);
  var _xyCenter = goog.vec.Vec4.createFloat32FromValues(_xyBBox[0] + (_xyBBox[1] - _xyBBox[0]) / 2, _xyBBox[2] + (_xyBBox[3] - _xyBBox[2]) / 2, _xyBBox[4] + (_xyBBox[5] - _xyBBox[4]) / 2, 0);
  var _RASCenter = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multMat(_XYToRAS, _xyCenter, _RASCenter);
  var _wmin = Math.floor(_xyBBox[0]);
  var _wmax = Math.ceil(_xyBBox[1]);
  if(_wmin == _wmax) {
    _wmax++
  }
  var _swidth = _wmax - _wmin;
  var _hmin = Math.floor(_xyBBox[2]);
  var _hmax = Math.ceil(_xyBBox[3]);
  var _sheight = _hmax - _hmin;
  var _resX = _sliceXYSpacing[0];
  var _resY = _sliceXYSpacing[1];
  var _epsilon = 1E-7;
  var _cswidth = Math.ceil(_swidth / _resX);
  var _csheight = Math.ceil(_sheight / _resY);
  var _csize = _cswidth * _csheight;
  var textureSize = 4 * _csize;
  var textureForCurrentSlice = new Uint8Array(textureSize);
  var pixelTexture = new X.texture;
  pixelTexture._rawDataWidth = _cswidth;
  pixelTexture._rawDataHeight = _csheight;
  var _indexIJK = goog.vec.Vec4.createFloat32();
  var _indexXY = goog.vec.Vec4.createFloat32FromValues(0, 0, _xyBBox[4], 1);
  var _XYToIJK = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.multMat(object._RASToIJK, _XYToRAS, _XYToIJK);
  var _he = _hmax - _epsilon;
  var _we = _wmax - _epsilon;
  var _p = 0;
  var _iWidth = 0;
  var _iHeight = 0;
  var j = _hmin;
  var i = _wmin;
  for(j = _hmin;j <= _he;j += _resY) {
    _iHeight++;
    _iWidth = 0;
    _indexXY[1] = j;
    i = _wmin;
    for(i = _wmin;i <= _we;i += _resX) {
      _iWidth++;
      _indexXY[0] = i;
      goog.vec.Mat4.multVec4(_XYToIJK, _indexXY, _indexIJK);
      var textureStartIndex = _p * 4;
      var _k = Math.floor(_indexIJK[2]);
      var _j = Math.floor(_indexIJK[1]);
      var _i = Math.floor(_indexIJK[0]);
      if(0 <= _i && _i < object._dimensions[0] && 0 <= _j && _j < object._dimensions[1] && 0 <= _k && _k < object._dimensions[2]) {
        var pixval = _IJKVolume[_k][_j][_i];
        var pixelValue_r = 0;
        var pixelValue_g = 0;
        var pixelValue_b = 0;
        var pixelValue_a = 0;
        if(colorTable) {
          var lookupValue = colorTable.get(pixval);
          if(!lookupValue) {
            lookupValue = [0, 0.61, 0, 0, 1]
          }
          pixelValue_r = 255 * lookupValue[1];
          pixelValue_g = 255 * lookupValue[2];
          pixelValue_b = 255 * lookupValue[3];
          pixelValue_a = 255 * lookupValue[4]
        }else {
          pixelValue_r = pixelValue_g = pixelValue_b = 255 * (pixval / object._max);
          pixelValue_a = 255
        }
        textureForCurrentSlice[textureStartIndex] = pixelValue_r;
        textureForCurrentSlice[++textureStartIndex] = pixelValue_g;
        textureForCurrentSlice[++textureStartIndex] = pixelValue_b;
        textureForCurrentSlice[++textureStartIndex] = pixelValue_a
      }else {
        textureForCurrentSlice[textureStartIndex] = 0;
        textureForCurrentSlice[++textureStartIndex] = 0;
        textureForCurrentSlice[++textureStartIndex] = 0;
        textureForCurrentSlice[++textureStartIndex] = 0
      }
      _p++
    }
  }
  pixelTexture._rawData = textureForCurrentSlice;
  sliceXY._texture = pixelTexture;
  sliceXY._xyBBox = _xyBBox;
  sliceXY._XYToRAS = _XYToRAS;
  sliceXY._XYToIJK = _XYToIJK;
  sliceXY._hmin = _hmin;
  sliceXY._hmax = _hmax;
  sliceXY._wmin = _wmin;
  sliceXY._wmax = _wmax;
  sliceXY._iWidth = _iWidth;
  sliceXY._iHeight = _iHeight;
  sliceXY._widthSpacing = _resX;
  sliceXY._width = _swidth;
  sliceXY._heightSpacing = _resY;
  sliceXY._height = _sheight;
  sliceXY._center = [_RASCenter[0], _RASCenter[1], _RASCenter[2]];
  sliceXY._front = [_sliceNormal[0], _sliceNormal[1], _sliceNormal[2]];
  sliceXY._right = [_rright[0], _rright[1], _rright[2]];
  sliceXY._up = [_rup[0], _rup[1], _rup[2]];
  sliceXY._visible = false;
  sliceXY._volume = object;
  if(goog.isDefAndNotNull(object._volume) && !hasLabelMap) {
    sliceXY._borders = false
  }else {
    sliceXY._borders = true
  }
  sliceXY._borderColor = _color;
  sliceXY.create_();
  sliceXY._visible = false;
  return sliceXY
};
X.parser.prototype.updateSliceInfo = function(_index, _sliceOrigin, _sliceNormal, object) {
  var _solutionsLine = X.parser.intersectionBBoxLine(object._BBox, _sliceOrigin, _sliceNormal);
  var _solutionsInLine = _solutionsLine[0];
  var _solutionsOutLine = _solutionsLine[1];
  object._childrenInfo[_index]._solutionsLine = _solutionsLine;
  var _first = new goog.math.Vec3(_solutionsInLine[0][0], _solutionsInLine[0][1], _solutionsInLine[0][2]);
  var _last = new goog.math.Vec3(_solutionsInLine[1][0], _solutionsInLine[1][1], _solutionsInLine[1][2]);
  var _dist = goog.math.Vec3.distance(_first, _last);
  object._childrenInfo[_index]._dist = _dist;
  var _XYNormal = goog.vec.Vec3.createFloat32FromValues(0, 0, 1);
  var _XYRASTransform = X.parser.xyrasTransform(_sliceNormal, _XYNormal);
  var _RASToXY = _XYRASTransform[0];
  var _XYToRAS = _XYRASTransform[1];
  var _rasSpacing = goog.vec.Vec4.createFloat32FromValues(object._RASSpacing[0], object._RASSpacing[1], object._RASSpacing[2], 0);
  var _xySpacing = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(_RASToXY, _rasSpacing, _xySpacing);
  var _sliceDirection = goog.vec.Vec4.createFloat32();
  goog.vec.Vec4.scale(_sliceNormal, _xySpacing[2], _sliceDirection);
  if(Math.abs(_xySpacing[0]) < 0.5) {
    _xySpacing[0] = 0.5
  }
  if(Math.abs(_xySpacing[1]) < 0.5) {
    _xySpacing[1] = 0.5
  }
  object._childrenInfo[_index]._sliceXYSpacing = [Math.abs(_xySpacing[0]), Math.abs(_xySpacing[1])];
  object._childrenInfo[_index]._sliceSpacing = _xySpacing[2];
  object._childrenInfo[_index]._sliceDirection = _sliceDirection;
  var _nb = Math.floor(Math.abs(_dist / _xySpacing[2]));
  object._range[_index] = _nb + 1;
  object._childrenInfo[_index]._nb = _nb + 1;
  if(object._childrenInfo[_index]._solutionsLine[0][0][0] > object._childrenInfo[_index]._solutionsLine[0][1][0]) {
    if(_sliceDirection[0] > 0) {
      var _tmp = object._childrenInfo[_index]._solutionsLine[0][0];
      object._childrenInfo[_index]._solutionsLine[0][0] = object._childrenInfo[_index]._solutionsLine[0][1];
      object._childrenInfo[_index]._solutionsLine[0][1] = _tmp
    }
  }else {
    if(object._childrenInfo[_index]._solutionsLine[0][0][0] < object._childrenInfo[_index]._solutionsLine[0][1][0]) {
      if(_sliceDirection[0] < 0) {
        var _tmp = object._childrenInfo[_index]._solutionsLine[0][0];
        object._childrenInfo[_index]._solutionsLine[0][0] = object._childrenInfo[_index]._solutionsLine[0][1];
        object._childrenInfo[_index]._solutionsLine[0][1] = _tmp
      }
    }else {
      if(object._childrenInfo[_index]._solutionsLine[0][0][1] > object._childrenInfo[_index]._solutionsLine[0][1][1]) {
        if(_sliceDirection[1] > 0) {
          var _tmp = object._childrenInfo[_index]._solutionsLine[0][0];
          object._childrenInfo[_index]._solutionsLine[0][0] = object._childrenInfo[_index]._solutionsLine[0][1];
          object._childrenInfo[_index]._solutionsLine[0][1] = _tmp
        }
      }else {
        if(object._childrenInfo[_index]._solutionsLine[0][0][1] < object._childrenInfo[_index]._solutionsLine[0][1][1]) {
          if(_sliceDirection[1] < 0) {
            var _tmp = object._childrenInfo[_index]._solutionsLine[0][0];
            object._childrenInfo[_index]._solutionsLine[0][0] = object._childrenInfo[_index]._solutionsLine[0][1];
            object._childrenInfo[_index]._solutionsLine[0][1] = _tmp
          }
        }else {
          if(object._childrenInfo[_index]._solutionsLine[0][0][2] > object._childrenInfo[_index]._solutionsLine[0][1][2]) {
            if(_sliceDirection[2] > 0) {
              var _tmp = object._childrenInfo[_index]._solutionsLine[0][0];
              object._childrenInfo[_index]._solutionsLine[0][0] = object._childrenInfo[_index]._solutionsLine[0][1];
              object._childrenInfo[_index]._solutionsLine[0][1] = _tmp
            }
          }else {
            if(object._childrenInfo[_index]._solutionsLine[0][0][2] < object._childrenInfo[_index]._solutionsLine[0][1][2]) {
              if(_sliceDirection[2] < 0) {
                var _tmp = object._childrenInfo[_index]._solutionsLine[0][0];
                object._childrenInfo[_index]._solutionsLine[0][0] = object._childrenInfo[_index]._solutionsLine[0][1];
                object._childrenInfo[_index]._solutionsLine[0][1] = _tmp
              }
            }
          }
        }
      }
    }
  }
  object._childrenInfo[_index]._originD = -(_sliceNormal[0] * _solutionsInLine[0][0] + _sliceNormal[1] * _solutionsInLine[0][1] + _sliceNormal[2] * _solutionsInLine[0][2])
};
X.parser.prototype.reslice = function(object) {
  var _IJKVolumes = X.parser.createIJKVolume(object._data, object._dimensions, object._max);
  object._IJKVolume = _IJKVolumes[0];
  object._IJKVolumeN = _IJKVolumes[1];
  X.TIMER(this._classname + ".reslice");
  object.hasLabelMap = object._labelmap != null;
  if(object._colortable) {
    object._colorTable = object._colortable._map
  }
  object.range = [0, 0, 0];
  object._RASCenter = [object._RASOrigin[0] + (object._RASDimensions[0] - 1) / 2, object._RASOrigin[1] + (object._RASDimensions[1] - 1) / 2, object._RASOrigin[2] + (object._RASDimensions[2] - 1) / 2];
  object._BBox = [Math.min(object._RASOrigin[0], object._RASOrigin[0] + object._RASDimensions[0] - 1), Math.max(object._RASOrigin[0], object._RASOrigin[0] + object._RASDimensions[0] - 1), Math.min(object._RASOrigin[1], object._RASOrigin[1] + object._RASDimensions[1] - 1), Math.max(object._RASOrigin[1], object._RASOrigin[1] + object._RASDimensions[1] - 1), Math.min(object._RASOrigin[2], object._RASOrigin[2] + object._RASDimensions[2] - 1), Math.max(object._RASOrigin[2], object._RASOrigin[2] + object._RASDimensions[2] - 
  1)];
  object._childrenInfo = [{}, {}, {}];
  var _sliceOrigin = goog.vec.Vec3.createFloat32FromValues(object._RASCenter[0], object._RASCenter[1], object._RASCenter[2]);
  object._childrenInfo[0]._sliceOrigin = _sliceOrigin;
  var _sliceNormal = goog.vec.Vec3.createFloat32FromValues(1, 0, 0);
  goog.vec.Vec3.normalize(_sliceNormal, _sliceNormal);
  object._childrenInfo[0]._sliceNormal = _sliceNormal;
  var _color = [1, 0, 0];
  object._childrenInfo[0]._color = _color;
  this.updateSliceInfo(0, _sliceOrigin, _sliceNormal, object);
  object._children[0]._children = new Array(object._childrenInfo[0]._nb);
  _sliceOrigin[0] = object._childrenInfo[0]._solutionsLine[0][0][0] + object._childrenInfo[0]._sliceDirection[0] * Math.floor(object._childrenInfo[0]._nb / 2);
  _sliceOrigin[1] = object._childrenInfo[0]._solutionsLine[0][0][1] + object._childrenInfo[0]._sliceDirection[1] * Math.floor(object._childrenInfo[0]._nb / 2);
  _sliceOrigin[2] = object._childrenInfo[0]._solutionsLine[0][0][2] + object._childrenInfo[0]._sliceDirection[2] * Math.floor(object._childrenInfo[0]._nb / 2);
  var _slice = X.parser.reslice2(_sliceOrigin, object._childrenInfo[0]._sliceXYSpacing, object._childrenInfo[0]._sliceNormal, object._childrenInfo[0]._color, object._BBox, object._IJKVolume, object, object.hasLabelMap, object._colorTable);
  if(object.hasLabelMap) {
    _slice._labelmap = object._labelmap._children[0]._children[Math.floor(object._childrenInfo[0]._nb / 2)]._texture
  }
  object._children[0]._children[Math.floor(object._childrenInfo[0]._nb / 2)] = _slice;
  object._indexX = Math.floor(object._childrenInfo[0]._nb / 2);
  object._indexXold = Math.floor(object._childrenInfo[0]._nb / 2);
  _sliceOrigin = goog.vec.Vec3.createFloat32FromValues(object._RASCenter[0], object._RASCenter[1], object._RASCenter[2]);
  object._childrenInfo[1]._sliceOrigin = _sliceOrigin;
  _sliceNormal = goog.vec.Vec3.createFloat32FromValues(0, 1, 0);
  goog.vec.Vec3.normalize(_sliceNormal, _sliceNormal);
  object._childrenInfo[1]._sliceNormal = _sliceNormal;
  _color = [0, 1, 0];
  object._childrenInfo[1]._color = _color;
  this.updateSliceInfo(1, _sliceOrigin, _sliceNormal, object);
  object._children[1]._children = new Array(object._childrenInfo[1]._nb);
  _sliceOrigin[0] = object._childrenInfo[1]._solutionsLine[0][0][0] + object._childrenInfo[1]._sliceDirection[0] * Math.floor(object._childrenInfo[1]._nb / 2);
  _sliceOrigin[1] = object._childrenInfo[1]._solutionsLine[0][0][1] + object._childrenInfo[1]._sliceDirection[1] * Math.floor(object._childrenInfo[1]._nb / 2);
  _sliceOrigin[2] = object._childrenInfo[1]._solutionsLine[0][0][2] + object._childrenInfo[1]._sliceDirection[2] * Math.floor(object._childrenInfo[1]._nb / 2);
  _slice = X.parser.reslice2(_sliceOrigin, object._childrenInfo[1]._sliceXYSpacing, object._childrenInfo[1]._sliceNormal, object._childrenInfo[1]._color, object._BBox, object._IJKVolume, object, object.hasLabelMap, object._colorTable);
  if(object.hasLabelMap) {
    _slice._labelmap = object._labelmap._children[1]._children[Math.floor(object._childrenInfo[1]._nb / 2)]._texture
  }
  object._children[1]._children[Math.floor(object._childrenInfo[1]._nb / 2)] = _slice;
  object._indexY = Math.floor(object._childrenInfo[1]._nb / 2);
  object._indexYold = Math.floor(object._childrenInfo[1]._nb / 2);
  _sliceOrigin = goog.vec.Vec3.createFloat32FromValues(object._RASCenter[0], object._RASCenter[1], object._RASCenter[2]);
  object._childrenInfo[2]._sliceOrigin = _sliceOrigin;
  _sliceNormal = goog.vec.Vec3.createFloat32FromValues(0, 0, 1);
  goog.vec.Vec3.normalize(_sliceNormal, _sliceNormal);
  object._childrenInfo[2]._sliceNormal = _sliceNormal;
  _color = [0, 0.392, 0.804];
  object._childrenInfo[2]._color = _color;
  this.updateSliceInfo(2, _sliceOrigin, _sliceNormal, object);
  object._children[2]._children = new Array(object._childrenInfo[2]._nb);
  _sliceOrigin[0] = object._childrenInfo[2]._solutionsLine[0][0][0] + object._childrenInfo[2]._sliceDirection[0] * Math.floor(object._childrenInfo[2]._nb / 2);
  _sliceOrigin[1] = object._childrenInfo[2]._solutionsLine[0][0][1] + object._childrenInfo[2]._sliceDirection[1] * Math.floor(object._childrenInfo[2]._nb / 2);
  _sliceOrigin[2] = object._childrenInfo[2]._solutionsLine[0][0][2] + object._childrenInfo[2]._sliceDirection[2] * Math.floor(object._childrenInfo[2]._nb / 2);
  _slice = X.parser.reslice2(_sliceOrigin, object._childrenInfo[2]._sliceXYSpacing, object._childrenInfo[2]._sliceNormal, object._childrenInfo[2]._color, object._BBox, object._IJKVolume, object, object.hasLabelMap, object._colorTable);
  if(object.hasLabelMap) {
    _slice._labelmap = object._labelmap._children[2]._children[Math.floor(object._childrenInfo[2]._nb / 2)]._texture
  }
  object._children[2]._children[Math.floor(object._childrenInfo[2]._nb / 2)] = _slice;
  object._indexZ = Math.floor(object._childrenInfo[2]._nb / 2);
  object._indexZold = Math.floor(object._childrenInfo[2]._nb / 2);
  X.TIMERSTOP(this._classname + ".reslice");
  return object._IJKVolume
};
goog.provide("X.parserIMAGE");
goog.require("X.event");
goog.require("X.parser");
X.parserIMAGE = function() {
  goog.base(this);
  this._classname = "parserIMAGE"
};
goog.inherits(X.parserIMAGE, X.parser);
X.parserIMAGE.prototype.parse = function(container, object, data, flag) {
  if(!(data instanceof ArrayBuffer)) {
    throw new Error;
  }
  var bytebuffer = new Uint8Array(data);
  var i = bytebuffer.length;
  var binaryString = new Array(i);
  while(i--) {
    binaryString[i] = String.fromCharCode(bytebuffer[i])
  }
  var convertedData = binaryString.join("");
  var encodedData = window.btoa(convertedData);
  var _image = new Image;
  goog.events.listenOnce(_image, goog.events.EventType.LOAD, this.parseCompleted.bind(this, _image, container, object, data, flag));
  _image.src = "data:image/" + flag + ";base64," + encodedData
};
X.parserIMAGE.prototype.parseCompleted = function(image, container, object, data, flag) {
  container._image = image;
  container._rawData = null;
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
goog.exportSymbol("X.parserIMAGE", X.parserIMAGE);
goog.exportSymbol("X.parserIMAGE.prototype.parse", X.parserIMAGE.prototype.parse);
goog.provide("X.camera2D");
goog.require("X.camera");
goog.require("X.event.WindowLevelEvent");
X.camera2D = function(width, height) {
  goog.base(this, width, height);
  this._classname = "camera2D"
};
goog.inherits(X.camera2D, X.camera);
X.camera2D.prototype.rotate = function(distance) {
  distance = goog.base(this, "rotate", distance);
  var _e = new X.event.WindowLevelEvent;
  if(distance.x > 0) {
    _e._window--
  }else {
    if(distance.x < 0) {
      _e._window++
    }
  }
  if(distance.y > 0) {
    _e._level++
  }else {
    if(distance.y < 0) {
      _e._level--
    }
  }
  this.dispatchEvent(_e)
};
X.camera2D.prototype.zoomIn = function(fast) {
  var zoomStep = 20;
  if(goog.isDefAndNotNull(fast) && !fast) {
    zoomStep = 0.02
  }
  this._view[14] += zoomStep
};
X.camera2D.prototype.zoomOut = function(fast) {
  var zoomStep = 20;
  if(goog.isDefAndNotNull(fast) && !fast) {
    zoomStep = 0.02
  }
  this._view[14] -= zoomStep
};
X.camera2D.prototype.pan = function(distance) {
  if(goog.isArray(distance) && distance.length == 2) {
    distance = new X.vector(distance[0], distance[1], 0)
  }else {
    if(!(distance instanceof X.vector)) {
      throw new Error("Invalid distance vector for pan operation.");
    }
  }
  this._view[12] -= distance.x / this._view[14];
  this._view[13] += distance.y / this._view[14]
};
goog.provide("X.shaders");
goog.require("X.base");
X.shaders = function() {
  goog.base(this);
  this._classname = "shaders";
  this._vertexshaderSource = "";
  var t = "";
  t += "precision mediump float;\n";
  t += "\n";
  t += "attribute vec3 vertexPosition;\n";
  t += "attribute vec3 vertexNormal;\n";
  t += "attribute vec3 vertexColor;\n";
  t += "attribute vec2 vertexTexturePos;\n";
  t += "attribute float vertexScalar;\n";
  t += "\n";
  t += "uniform mat4 view;\n";
  t += "uniform mat4 perspective;\n";
  t += "uniform vec3 center;\n";
  t += "uniform mat4 objectTransform;\n";
  t += "uniform bool useObjectColor;\n";
  t += "uniform bool useScalars;\n";
  t += "uniform bool scalarsReplaceMode;\n";
  t += "uniform float scalarsMin;\n";
  t += "uniform float scalarsMax;\n";
  t += "uniform vec3 scalarsMinColor;\n";
  t += "uniform vec3 scalarsMaxColor;\n";
  t += "uniform float scalarsMinThreshold;\n";
  t += "uniform float scalarsMaxThreshold;\n";
  t += "uniform int scalarsInterpolation;\n";
  t += "uniform vec3 objectColor;\n";
  t += "uniform float pointSize;\n";
  t += "\n";
  t += "varying float fDiscardNow;\n";
  t += "varying vec4 fVertexPosition;\n";
  t += "varying vec3 fragmentColor;\n";
  t += "varying vec2 fragmentTexturePos;\n";
  t += "varying vec3 fVertexNormal;\n";
  t += "varying vec3 fTransformedVertexNormal;\n";
  t += "\n";
  t += "void main(void) {\n";
  t += "  fTransformedVertexNormal = mat3(view[0].xyz,view[1].xyz,view[2].xyz) * ";
  t += "mat3(objectTransform[0].xyz,objectTransform[1].xyz,objectTransform[2].xyz) * ";
  t += "vertexNormal;\n";
  t += "  fVertexNormal = vertexNormal;\n";
  t += "  fDiscardNow = 0.0;\n";
  t += "  vec3 vertexPosition2 = vertexPosition - center;\n";
  t += "  fVertexPosition = view * objectTransform * vec4(vertexPosition2, 1.0);\n";
  t += "  fragmentTexturePos = vertexTexturePos;\n";
  t += "  if (useScalars) {\n";
  t += "    float scalarValue = vertexScalar;\n";
  t += "    if (scalarValue < scalarsMinThreshold || scalarValue > scalarsMaxThreshold) {\n";
  t += "      if (scalarsReplaceMode) {\n";
  t += "        fragmentColor = objectColor;\n";
  t += "      } else {\n";
  t += "        fDiscardNow = 1.0;\n";
  t += "      }\n";
  t += "    } else {\n";
  t += "      if (scalarsReplaceMode) {\n";
  t += "        if (scalarsInterpolation == 1) {\n";
  t += "            vec3 zeroMaxColor;\n";
  t += "            vec3 zeroMinColor;\n";
  t += "            zeroMaxColor[0] = scalarsMaxColor[0]*0.33;\n";
  t += "            zeroMaxColor[1] = scalarsMaxColor[1]*0.33;\n";
  t += "            zeroMaxColor[2] = scalarsMaxColor[2]*0.33;\n";
  t += "            zeroMinColor[0] = scalarsMinColor[0]*0.33;\n";
  t += "            zeroMinColor[1] = scalarsMinColor[1]*0.33;\n";
  t += "            zeroMinColor[2] = scalarsMinColor[2]*0.33;\n";
  t += "            if(scalarValue < 0.0) {fragmentColor = scalarValue/(scalarsMin) * scalarsMinColor + (1.0 - scalarValue/(scalarsMin)) * (zeroMinColor);}\n";
  t += "            else {fragmentColor = scalarValue/(scalarsMax) * scalarsMaxColor + (1.0 - scalarValue/(scalarsMax)) * (zeroMaxColor);}\n";
  t += "        } else {\n";
  t += "            fragmentColor = scalarValue * scalarsMaxColor + (1.0 - scalarValue) * scalarsMinColor;\n";
  t += "          }\n";
  t += "      } else {\n";
  t += "        fragmentColor = vertexColor;\n";
  t += "      }\n";
  t += "    }\n";
  t += "  } else if (useObjectColor) {\n";
  t += "    fragmentColor = objectColor;\n";
  t += "  } else {\n";
  t += "    fragmentColor = vertexColor;\n";
  t += "  }\n";
  t += "  gl_PointSize = pointSize;\n";
  t += "  gl_Position = perspective * fVertexPosition;\n";
  t += "}\n";
  this._vertexshaderSource = t;
  this._fragmentshaderSource = "";
  var t2 = "";
  t2 += "precision mediump float;\n";
  t2 += "\n";
  t2 += "uniform bool usePicking;\n";
  t2 += "uniform bool useTexture;\n";
  t2 += "uniform bool volumeTexture;\n";
  t2 += "uniform bool useLabelMapTexture;\n";
  t2 += "uniform sampler2D textureSampler;\n";
  t2 += "uniform sampler2D textureSampler2;\n";
  t2 += "uniform float objectOpacity;\n";
  t2 += "uniform float labelmapOpacity;\n";
  t2 += "uniform vec4 labelmapColor;\n";
  t2 += "uniform float volumeLowerThreshold;\n";
  t2 += "uniform float volumeUpperThreshold;\n";
  t2 += "uniform float volumeScalarMin;\n";
  t2 += "uniform float volumeScalarMax;\n";
  t2 += "uniform vec3 volumeScalarMinColor;\n";
  t2 += "uniform vec3 volumeScalarMaxColor;\n";
  t2 += "uniform float volumeWindowLow;\n";
  t2 += "uniform float volumeWindowHigh;\n";
  t2 += "\n";
  t2 += "varying float fDiscardNow;\n";
  t2 += "varying vec4 fVertexPosition;\n";
  t2 += "varying vec3 fragmentColor;\n";
  t2 += "varying vec2 fragmentTexturePos;\n";
  t2 += "varying vec3 fVertexNormal;\n";
  t2 += "varying vec3 fTransformedVertexNormal;\n";
  t2 += "\n";
  t2 += "void main(void) {\n";
  t2 += " if (fDiscardNow > 0.0) {\n";
  t2 += "   discard;\n";
  t2 += " }\n";
  t2 += " if (usePicking) {\n";
  t2 += "   gl_FragColor = vec4(fragmentColor, 1.0);\n";
  t2 += " } else if (useTexture) {\n";
  t2 += "   vec4 texture1 = texture2D(textureSampler,fragmentTexturePos);\n";
  t2 += "   vec4 textureSum = texture1;\n";
  t2 += "   if (volumeTexture) {\n";
  t2 += "     float _windowLow = (volumeWindowLow / volumeScalarMax);\n";
  t2 += "     float _windowHigh = (volumeWindowHigh / volumeScalarMax);\n";
  t2 += "     vec3 _minrange = vec3(_windowLow,_windowLow,_windowLow);\n";
  t2 += "     vec3 _maxrange = vec3(_windowHigh,_windowHigh,_windowHigh);\n";
  t2 += "     vec3 fac = _maxrange - _minrange;\n";
  t2 += "     textureSum = vec4((textureSum.r - _minrange)/fac,1);\n";
  t2 += "     textureSum = textureSum.r * vec4(volumeScalarMaxColor,1) + (1.0 - textureSum.r) * vec4(volumeScalarMinColor,1);\n";
  t2 += "   }\n";
  t2 += "   if (useLabelMapTexture) {\n";
  t2 += "     vec4 texture2 = texture2D(textureSampler2,fragmentTexturePos);\n";
  t2 += "     if (texture2.a > 0.0) {\n";
  t2 += "         if (labelmapColor.a != -255.0) {\n";
  t2 += "           if (all(equal(floor(texture2 * vec4(255)), labelmapColor))) {\n";
  t2 += "             if (labelmapOpacity < 1.0) {\n";
  t2 += "               textureSum = mix(texture2, textureSum, 1.0 - labelmapOpacity);\n";
  t2 += "             } else {\n";
  t2 += "               textureSum = texture2;\n";
  t2 += "             }\n";
  t2 += "           }\n";
  t2 += "         } else {\n";
  t2 += "           if (labelmapOpacity < 1.0) {\n";
  t2 += "             textureSum = mix(texture2, textureSum, 1.0 - labelmapOpacity);\n";
  t2 += "           } else {\n";
  t2 += "             textureSum = texture2;\n";
  t2 += "           }\n";
  t2 += "         }\n";
  t2 += "     }\n";
  t2 += "   }\n";
  t2 += "   if (volumeTexture) {\n";
  t2 += "     float _volumeLowerThreshold = (volumeLowerThreshold / volumeScalarMax);\n";
  t2 += "     float _volumeUpperThreshold = (volumeUpperThreshold / volumeScalarMax);\n";
  t2 += "     if (texture1.r < _volumeLowerThreshold ||\n";
  t2 += "         texture1.r > _volumeUpperThreshold ||\n";
  t2 += "         texture1.a == 0.0 ) {\n";
  t2 += "       discard;\n";
  t2 += "     };\n";
  t2 += "   };\n";
  t2 += "   gl_FragColor = textureSum;\n";
  t2 += "   gl_FragColor.a = objectOpacity;\n";
  t2 += " } else {\n";
  t2 += "   vec3 nNormal = normalize(fTransformedVertexNormal);\n";
  t2 += "   if (fVertexNormal == vec3(0.0,0.0,0.0)) {\n";
  t2 += "     gl_FragColor = vec4(fragmentColor,1.0);\n";
  t2 += "     return;\n";
  t2 += "   }\n";
  t2 += "   vec3 light = vec3(0.0, 0.0, 1.0);\n";
  t2 += "   vec3 lightDirection = vec3(0,0,-10);\n";
  t2 += "   lightDirection = normalize(lightDirection);\n";
  t2 += "   vec3 eyeDirection = normalize(-fVertexPosition.xyz);\n";
  t2 += "   vec3 reflectionDirection = reflect(-lightDirection, nNormal);\n";
  t2 += "   float specular = pow(max(dot(reflectionDirection, eyeDirection), 0.0), 10.0);\n";
  t2 += "   float diffuse = 0.8 * max(dot(nNormal, light), 0.0);\n";
  t2 += "   float ambient = 0.3;\n";
  t2 += "   gl_FragColor = vec4(fragmentColor * ambient +\n";
  t2 += "                       fragmentColor * diffuse +\n";
  t2 += "                       vec3(0.2, 0.2, 0.2) * specular,\n";
  t2 += "                       objectOpacity);\n";
  t2 += " }\n";
  t2 += "}\n";
  this._fragmentshaderSource = t2
};
goog.inherits(X.shaders, X.base);
X.shaders.attributes = {VERTEXPOSITION:"vertexPosition", VERTEXNORMAL:"vertexNormal", VERTEXCOLOR:"vertexColor", VERTEXTEXTUREPOS:"vertexTexturePos", VERTEXSCALAR:"vertexScalar"};
X.shaders.uniforms = {VIEW:"view", PERSPECTIVE:"perspective", CENTER:"center", OBJECTTRANSFORM:"objectTransform", USEOBJECTCOLOR:"useObjectColor", OBJECTCOLOR:"objectColor", USESCALARS:"useScalars", SCALARSREPLACEMODE:"scalarsReplaceMode", SCALARSMIN:"scalarsMin", SCALARSMAX:"scalarsMax", SCALARSMINCOLOR:"scalarsMinColor", SCALARSMAXCOLOR:"scalarsMaxColor", SCALARSMINTHRESHOLD:"scalarsMinThreshold", SCALARSMAXTHRESHOLD:"scalarsMaxThreshold", SCALARSINTERPOLATION:"scalarsInterpolation", POINTSIZE:"pointSize", 
OBJECTOPACITY:"objectOpacity", NORMAL:"normal", USEPICKING:"usePicking", USETEXTURE:"useTexture", USELABELMAPTEXTURE:"useLabelMapTexture", LABELMAPOPACITY:"labelmapOpacity", LABELMAPCOLOR:"labelmapColor", TEXTURESAMPLER:"textureSampler", TEXTURESAMPLER2:"textureSampler2", VOLUMELOWERTHRESHOLD:"volumeLowerThreshold", VOLUMEUPPERTHRESHOLD:"volumeUpperThreshold", VOLUMESCALARMIN:"volumeScalarMin", VOLUMESCALARMAX:"volumeScalarMax", VOLUMESCALARMINCOLOR:"volumeScalarMinColor", VOLUMESCALARMAXCOLOR:"volumeScalarMaxColor", 
VOLUMEWINDOWLOW:"volumeWindowLow", VOLUMEWINDOWHIGH:"volumeWindowHigh", VOLUMETEXTURE:"volumeTexture"};
X.shaders.prototype.vertex = function() {
  return this._vertexshaderSource
};
X.shaders.prototype.fragment = function() {
  return this._fragmentshaderSource
};
X.shaders.prototype.validate = function() {
  var attributes = Object.keys(X.shaders.attributes);
  var uniforms = Object.keys(X.shaders.uniforms);
  var attributesValid = attributes.every(function(a) {
    a = X.shaders.attributes[a];
    return this._vertexshaderSource.search(a) != -1 || this._fragmentshaderSource.search(a) != -1
  }.bind(this));
  if(!attributesValid) {
    throw new Error("Could not find all attributes in the shader sources.");
  }
  var uniformsValid = uniforms.every(function(u) {
    u = X.shaders.uniforms[u];
    return this._vertexshaderSource.search(u) != -1 || this._fragmentshaderSource.search(u) != -1
  }.bind(this));
  if(!uniformsValid) {
    throw new Error("Could not find all uniforms in the shader sources.");
  }
  return true
};
goog.provide("X.slice");
goog.require("X.base");
goog.require("X.object");
goog.require("goog.math.Vec3");
X.slice = function(slice) {
  goog.base(this);
  this._classname = "slice";
  this._center = [0, 0, 0];
  this._front = [0, 0, 1];
  this._up = [0, 1, 0];
  this._right = [1, 0, 0];
  this._width = 10;
  this._height = 10;
  this._textureCoordinateMap = [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0];
  this._volume = null;
  this._labelmap = null;
  this._borders = true;
  this._borderColor = [1, 1, 1];
  if(goog.isDefAndNotNull(slice)) {
    this.copy_(slice)
  }
};
goog.inherits(X.slice, X.object);
X.slice.prototype.copy_ = function(slice) {
  this._center = slice._center.slice();
  this._front = slice._front.slice();
  this._up = slice._up.slice();
  this._width = slice._width;
  this._height = slice._height;
  this._volume = slice._volume;
  this._labelmap = slice._labelmap;
  this._borders = slice._borders;
  this._borderColor = slice._borderColor;
  this._hideChildren = slice._hideChildren;
  goog.base(this, "copy_", slice)
};
X.slice.prototype.__defineSetter__("height", function(height) {
  this._height = height
});
X.slice.prototype.__defineSetter__("width", function(width) {
  this._width = width
});
X.slice.prototype.setup = function(center, front, up, right, width, height, borders, borderColor) {
  if(!goog.isDefAndNotNull(center) || !goog.isArray(center) || center.length != 3) {
    throw new Error("Invalid center.");
  }
  if(!goog.isDefAndNotNull(front) || !goog.isArray(front) || front.length != 3) {
    throw new Error("Invalid front direction.");
  }
  if(!goog.isDefAndNotNull(up) || !goog.isArray(up) || up.length != 3) {
    throw new Error("Invalid up direction.");
  }
  if(!goog.isNumber(width)) {
    throw new Error("Invalid width.");
  }
  if(!goog.isNumber(height)) {
    throw new Error("Invalid height.");
  }
  var _borders = false;
  if(goog.isDefAndNotNull(borders)) {
    _borders = borders
  }
  var _borderColor = [1, 1, 1];
  if(goog.isDefAndNotNull(borderColor)) {
    _borderColor = borderColor
  }
  this._center = center;
  this._front = front;
  this._up = up;
  this._right = right;
  this._width = width;
  this._height = height;
  this._borders = _borders;
  this._borderColor = _borderColor;
  this.create_()
};
X.slice.prototype.create = function() {
  this.create_()
};
X.slice.prototype.create_ = function() {
  var frontVector = (new goog.math.Vec3(this._front[0], this._front[1], this._front[2])).normalize();
  var upVector = new goog.math.Vec3(this._up[0], this._up[1], this._up[2]);
  var rightVector = new goog.math.Vec3(this._right[0], this._right[1], this._right[2]);
  var centerVector = new goog.math.Vec3(this._center[0], this._center[1], this._center[2]);
  var dirVector = goog.math.Vec3.sum(rightVector.clone().invert().scale(this._width / 2), upVector.clone().invert().scale(this._height / 2));
  var point0 = new goog.math.Vec3(dirVector.x + centerVector.x, dirVector.y + centerVector.y, dirVector.z + centerVector.z);
  dirVector = goog.math.Vec3.sum(rightVector.clone().invert().scale(this._width / 2), upVector.clone().scale(this._height / 2));
  var point1 = new goog.math.Vec3(dirVector.x + centerVector.x, dirVector.y + centerVector.y, dirVector.z + centerVector.z);
  dirVector = goog.math.Vec3.sum(rightVector.clone().scale(this._width / 2), upVector.clone().invert().scale(this._height / 2));
  var point2 = new goog.math.Vec3(dirVector.x + centerVector.x, dirVector.y + centerVector.y, dirVector.z + centerVector.z);
  var point3 = point2;
  dirVector = goog.math.Vec3.sum(rightVector.clone().scale(this._width / 2), upVector.clone().scale(this._height / 2));
  var point4 = new goog.math.Vec3(dirVector.x + centerVector.x, dirVector.y + centerVector.y, dirVector.z + centerVector.z);
  var point5 = point1;
  this._points = new X.triplets(18);
  this._normals = new X.triplets(18);
  this._points.add(point0.x, point0.y, point0.z);
  this._points.add(point1.x, point1.y, point1.z);
  this._points.add(point2.x, point2.y, point2.z);
  this._points.add(point3.x, point3.y, point3.z);
  this._points.add(point4.x, point4.y, point4.z);
  this._points.add(point5.x, point5.y, point5.z);
  this._normals.add(frontVector.x, frontVector.y, frontVector.z);
  this._normals.add(frontVector.x, frontVector.y, frontVector.z);
  this._normals.add(frontVector.x, frontVector.y, frontVector.z);
  this._normals.add(frontVector.x, frontVector.y, frontVector.z);
  this._normals.add(frontVector.x, frontVector.y, frontVector.z);
  this._normals.add(frontVector.x, frontVector.y, frontVector.z);
  if(this._borders) {
    var borders = new X.object;
    borders._points = new X.triplets(24);
    borders._normals = new X.triplets(24);
    borders._points.add(point0.x, point0.y, point0.z);
    borders._points.add(point1.x, point1.y, point1.z);
    borders._points.add(point1.x, point1.y, point1.z);
    borders._points.add(point4.x, point4.y, point4.z);
    borders._points.add(point4.x, point4.y, point4.z);
    borders._points.add(point2.x, point2.y, point2.z);
    borders._points.add(point2.x, point2.y, point2.z);
    borders._points.add(point0.x, point0.y, point0.z);
    borders._normals.add(0, 0, 0);
    borders._normals.add(0, 0, 0);
    borders._normals.add(0, 0, 0);
    borders._normals.add(0, 0, 0);
    borders._normals.add(0, 0, 0);
    borders._normals.add(0, 0, 0);
    borders._normals.add(0, 0, 0);
    borders._normals.add(0, 0, 0);
    borders._color = [this._borderColor[0], this._borderColor[1], this._borderColor[2]];
    borders._type = X.displayable.types.LINES;
    borders._linewidth = 2;
    this._children.push(borders)
  }
};
goog.exportSymbol("X.slice", X.slice);
goog.exportSymbol("X.slice.prototype.create", X.slice.prototype.create);
goog.provide("X.volume");
goog.require("X.object");
goog.require("X.slice");
goog.require("X.parser");
goog.require("X.thresholdable");
X.volume = function(volume) {
  goog.base(this);
  this._classname = "volume";
  this._center = [0, 0, 0];
  this._dimensions = [10, 10, 10];
  this._BBox = [1, 1, 1];
  this._range = [10, 10, 10];
  this._spacing = [1, 1, 1];
  this._image = [];
  this._indexX = 0;
  this._indexXold = 0;
  this._indexY = 0;
  this._indexYold = 0;
  this._indexZ = 0;
  this._indexZold = 0;
  this._slicesX = new X.object;
  this._slicesY = new X.object;
  this._slicesZ = new X.object;
  this._volumeRendering = false;
  this._volumeRenderingOld = false;
  this._volumeRenderingDirection = -1;
  this._volumeRenderingCache = [];
  this._labelmap = null;
  this._borders = true;
  this._windowLow = Infinity;
  this._windowHigh = -Infinity;
  this._reslicing = true;
  this._max = 0;
  this._data = null;
  inject(this, new X.loadable);
  inject(this, new X.thresholdable);
  if(goog.isDefAndNotNull(volume)) {
    this.copy_(volume)
  }
};
goog.inherits(X.volume, X.object);
X.volume.prototype.copy_ = function(volume) {
  this._center = volume._center.slice();
  this._dimensions = volume._dimensions.slice();
  this._spacing = volume._spacing.slice();
  this._indexX = volume._indexX;
  this._indexXold = volume._indexXold;
  this._indexY = volume._indexY;
  this._indexYold = volume._indexYold;
  this._indexZ = volume._indexZ;
  this._indexZold = volume._indexZold;
  this._dimensionsRAS = volume._dimensionsRAS.slice();
  this._slicesX = new X.object(volume._slicesX);
  this._slicesY = new X.object(volume._slicesY);
  this._slicesZ = new X.object(volume._slicesZ);
  this._max = volume._max;
  this._data = volume._data;
  this._volumeRendering = volume._volumeRendering;
  this._volumeRenderingOld = volume._volumeRenderingOld;
  this._volumeRenderingDirection = volume._volumeRenderingDirection;
  this._labelmap = volume._labelmap;
  this._borders = volume._borders;
  goog.base(this, "copy_", volume)
};
X.volume.prototype.create_ = function(_info) {
  this._children.length = 0;
  this._slicesX._children.length = 0;
  this._slicesY._children.length = 0;
  this._slicesZ._children.length = 0;
  this._children.push(this._slicesX);
  this._children.push(this._slicesY);
  this._children.push(this._slicesZ);
  this._RASOrigin = _info.RASOrigin;
  this._RASSpacing = _info.RASSpacing;
  this._RASDimensions = _info.RASDimensions;
  this._IJKToRAS = _info.IJKToRAS;
  this._RASToIJK = _info.RASToIJK;
  this._max = _info.max;
  this._data = _info.data;
  this._dirty = true
};
X.volume.prototype.modified = function(propagateEvent) {
  propagateEvent = typeof propagateEvent !== "undefined" ? propagateEvent : true;
  if(this._children.length > 0) {
    if(this._volumeRendering != this._volumeRenderingOld) {
      if(!this._volumeRendering && this._volumeRenderingDirection != -1) {
        var _child = this._children[this._volumeRenderingDirection];
        _child["visible"] = false
      }
      this._dirty = true;
      this._volumeRenderingOld = this._volumeRendering
    }
    if(!this._visible) {
      return
    }
    this.slicing_();
    if(this._volumeRendering && this._volumeRenderingDirection != -1) {
      this.volumeRendering_(this._volumeRenderingDirection)
    }
  }
  if(propagateEvent) {
    goog.base(this, "modified")
  }
};
X.volume.prototype.slicing_ = function() {
  var xyz = 0;
  for(xyz = 0;xyz < 3;xyz++) {
    var _child = this._children[xyz];
    var currentIndex = 0;
    var oldIndex = 0;
    if(xyz == 0) {
      currentIndex = this._indexX;
      oldIndex = this._indexXold;
      this._indexXold = this._indexX
    }else {
      if(xyz == 1) {
        currentIndex = this._indexY;
        oldIndex = this._indexYold;
        this._indexYold = this._indexY
      }else {
        if(xyz == 2) {
          currentIndex = this._indexZ;
          oldIndex = this._indexZold;
          this._indexZold = this._indexZ
        }
      }
    }
    if(!goog.isDefAndNotNull(this._children[xyz]._children[parseInt(currentIndex, 10)])) {
      var _sliceOrigin = goog.vec.Vec3.createFloat32();
      _sliceOrigin[0] = this._childrenInfo[xyz]._solutionsLine[0][0][0] + this._childrenInfo[xyz]._sliceDirection[0] * parseInt(currentIndex, 10);
      _sliceOrigin[1] = this._childrenInfo[xyz]._solutionsLine[0][0][1] + this._childrenInfo[xyz]._sliceDirection[1] * parseInt(currentIndex, 10);
      _sliceOrigin[2] = this._childrenInfo[xyz]._solutionsLine[0][0][2] + this._childrenInfo[xyz]._sliceDirection[2] * parseInt(currentIndex, 10);
      if(this.hasLabelMap) {
        var _sliceLabel = X.parser.reslice2(_sliceOrigin, this._childrenInfo[xyz]._sliceXYSpacing, this._childrenInfo[xyz]._sliceNormal, this._childrenInfo[xyz]._color, this._BBox, this._labelmap._IJKVolume, this._labelmap, this._labelmap.hasLabelMap, this._labelmap._colortable._map);
        this._labelmap._children[xyz]._children[parseInt(currentIndex, 10)] = _sliceLabel;
        this._labelmap._children[xyz].modified(true)
      }
      var _slice = X.parser.reslice2(_sliceOrigin, this._childrenInfo[xyz]._sliceXYSpacing, this._childrenInfo[xyz]._sliceNormal, this._childrenInfo[xyz]._color, this._BBox, this._IJKVolume, this, true, null);
      if(this.hasLabelMap) {
        _slice._labelmap = _slice._texture;
        _slice._labelmap = this._labelmap._children[xyz]._children[parseInt(currentIndex, 10)]._texture
      }
      _child._children[parseInt(currentIndex, 10)] = _slice;
      this._children[xyz].modified(true)
    }
    var _oldSlice = _child._children[parseInt(oldIndex, 10)];
    if(!this._volumeRendering) {
      _oldSlice["visible"] = false
    }
    var _currentSlice = _child._children[parseInt(currentIndex, 10)];
    _currentSlice["visible"] = true;
    _currentSlice._opacity = 1;
    if(this._volumeRendering) {
      _currentSlice._children[0]._visible = false;
      if(xyz != this._volumeRenderingDirection) {
        _currentSlice["visible"] = false;
        _currentSlice._opacity = 0
      }
    }
  }
};
X.volume.prototype.__defineGetter__("dimensions", function() {
  return this._dimensions
});
X.volume.prototype.__defineSetter__("dimensions", function(dimensions) {
  this._dimensions = dimensions
});
X.volume.prototype.__defineGetter__("spacing", function() {
  return this._spacing
});
X.volume.prototype.__defineSetter__("spacing", function(spacing) {
  this._spacing = spacing
});
X.volume.prototype.__defineGetter__("bbox", function() {
  return this._BBox
});
X.volume.prototype.__defineGetter__("range", function() {
  return this._range
});
X.volume.prototype.__defineGetter__("dimensionsRAS", function() {
  return this._dimensionsRAS
});
X.volume.prototype.__defineGetter__("volumeRendering", function() {
  return this._volumeRendering
});
X.volume.prototype.__defineSetter__("volumeRendering", function(volumeRendering) {
  this._volumeRendering = volumeRendering;
  this.modified(false)
});
X.volume.prototype.__defineGetter__("visible", function() {
  return this._visible
});
X.volume.prototype.__defineSetter__("visible", function(visible) {
  if(visible) {
    this._visible = visible;
    this.modified(false)
  }else {
    var children = this._children;
    var numberOfChildren = children.length;
    var c = 0;
    for(c = 0;c < numberOfChildren;c++) {
      children[c]["visible"] = visible
    }
    this._visible = visible;
    this._dirty = true
  }
});
X.volume.prototype.__defineGetter__("center", function() {
  return this._center
});
X.volume.prototype.__defineSetter__("center", function(center) {
  if(!goog.isDefAndNotNull(center) || !goog.isArray(center) || !(center.length == 3)) {
    throw new Error("Invalid center.");
  }
  this._center = center
});
X.volume.prototype.__defineGetter__("volumeRenderingCache", function() {
  return this._volumeRenderingCache
});
X.volume.prototype.__defineSetter__("volumeRenderingCache", function(volumeRenderingCache) {
  if(!goog.isDefAndNotNull(volumeRenderingCache) || !goog.isArray(volumeRenderingCache) || !(volumeRenderingCache.length <= 3)) {
    throw new Error("Invalid volumeRederingCache.");
  }
  this._volumeRenderingCache = volumeRenderingCache
});
X.volume.prototype.__defineGetter__("image", function() {
  return this._image
});
X.volume.prototype.__defineGetter__("labelmap", function() {
  if(!this._labelmap) {
    this._labelmap = new X.labelmap(this)
  }
  return this._labelmap
});
X.volume.prototype.__defineGetter__("indexX", function() {
  return this._indexX
});
X.volume.prototype.__defineSetter__("indexX", function(indexX) {
  if(goog.isNumber(indexX) && indexX >= 0 && indexX < this._slicesX._children.length) {
    this._indexX = indexX;
    this.modified(false)
  }
});
X.volume.prototype.__defineGetter__("indexY", function() {
  return this._indexY
});
X.volume.prototype.__defineSetter__("indexY", function(indexY) {
  if(goog.isNumber(indexY) && indexY >= 0 && indexY < this._slicesY._children.length) {
    this._indexY = indexY;
    this.modified(false)
  }
});
X.volume.prototype.__defineGetter__("indexZ", function() {
  return this._indexZ
});
X.volume.prototype.__defineSetter__("indexZ", function(indexZ) {
  if(goog.isNumber(indexZ) && indexZ >= 0 && indexZ < this._slicesZ._children.length) {
    this._indexZ = indexZ;
    this.modified(false)
  }
});
X.volume.prototype.__defineGetter__("windowLow", function() {
  return this._windowLow
});
X.volume.prototype.__defineSetter__("windowLow", function(windowLow) {
  this._windowLow = windowLow
});
X.volume.prototype.__defineGetter__("windowHigh", function() {
  return this._windowHigh
});
X.volume.prototype.__defineSetter__("windowHigh", function(windowHigh) {
  this._windowHigh = windowHigh
});
X.volume.prototype.__defineGetter__("borders", function() {
  return this._borders
});
X.volume.prototype.__defineSetter__("borders", function(borders) {
  this._borders = borders
});
X.volume.prototype.__defineGetter__("reslicing", function() {
  return this._reslicing
});
X.volume.prototype.__defineSetter__("reslicing", function(reslicing) {
  this._reslicing = reslicing
});
X.volume.prototype.__defineSetter__("xNormX", function(xNormX) {
  this._childrenInfo[0]._sliceNormal[0] = xNormX
});
X.volume.prototype.__defineGetter__("xNormX", function() {
  return this._childrenInfo[0]._sliceNormal[0]
});
X.volume.prototype.__defineSetter__("xNormY", function(xNormY) {
  this._childrenInfo[0]._sliceNormal[1] = xNormY
});
X.volume.prototype.__defineGetter__("xNormY", function() {
  return this._childrenInfo[0]._sliceNormal[1]
});
X.volume.prototype.__defineSetter__("xNormZ", function(xNormZ) {
  this._childrenInfo[0]._sliceNormal[2] = xNormZ
});
X.volume.prototype.__defineGetter__("xNormZ", function() {
  return this._childrenInfo[0]._sliceNormal[2]
});
X.volume.prototype.__defineSetter__("xColor", function(xColor) {
  this._childrenInfo[0]._color = xColor
});
X.volume.prototype.__defineGetter__("xColor", function() {
  return this._childrenInfo[0]._color
});
X.volume.prototype.__defineSetter__("yNormX", function(yNormX) {
  this._childrenInfo[1]._sliceNormal[0] = yNormX
});
X.volume.prototype.__defineGetter__("yNormX", function() {
  return this._childrenInfo[1]._sliceNormal[0]
});
X.volume.prototype.__defineSetter__("yNormY", function(yNormY) {
  this._childrenInfo[1]._sliceNormal[1] = yNormY
});
X.volume.prototype.__defineGetter__("yNormY", function() {
  return this._childrenInfo[1]._sliceNormal[1]
});
X.volume.prototype.__defineSetter__("yNormZ", function(yNormZ) {
  this._childrenInfo[1]._sliceNormal[2] = yNormZ
});
X.volume.prototype.__defineGetter__("yNormZ", function() {
  return this._childrenInfo[1]._sliceNormal[2]
});
X.volume.prototype.__defineSetter__("yColor", function(yColor) {
  this._childrenInfo[1]._color = yColor
});
X.volume.prototype.__defineGetter__("yColor", function() {
  return this._childrenInfo[1]._color
});
X.volume.prototype.__defineSetter__("zNormX", function(zNormX) {
  this._childrenInfo[2]._sliceNormal[0] = zNormX
});
X.volume.prototype.__defineGetter__("zNormX", function() {
  return this._childrenInfo[2]._sliceNormal[0]
});
X.volume.prototype.__defineSetter__("zNormY", function(zNormY) {
  this._childrenInfo[2]._sliceNormal[1] = zNormY
});
X.volume.prototype.__defineGetter__("zNormY", function() {
  return this._childrenInfo[2]._sliceNormal[1]
});
X.volume.prototype.__defineSetter__("zNormZ", function(zNormZ) {
  this._childrenInfo[2]._sliceNormal[2] = zNormZ
});
X.volume.prototype.__defineGetter__("zNormZ", function() {
  return this._childrenInfo[2]._sliceNormal[2]
});
X.volume.prototype.__defineSetter__("zColor", function(zColor) {
  this._childrenInfo[2]._color = zColor
});
X.volume.prototype.__defineGetter__("zColor", function() {
  return this._childrenInfo[2]._color
});
X.volume.prototype.sliceInfoChanged = function(index) {
  this._children[index]["visible"] = false;
  for(var i = 0;i < this._children[index]._children.length;i++) {
    if(typeof this._children[index]._children[i] != "undefined") {
      if(this.hasLabelMap) {
        this._labelmap._children[index]._children[i].remove();
        this._labelmap._children[index]._children[i] = null
      }
      this._children[index]._children[i].remove();
      this._children[index]._children[i] = null
    }
  }
  goog.vec.Vec3.normalize(this._childrenInfo[index]._sliceNormal, this._childrenInfo[index]._sliceNormal);
  X.parser.prototype.updateSliceInfo(index, this._childrenInfo[index]._sliceOrigin, this._childrenInfo[index]._sliceNormal, this);
  this._children[index]._children = [];
  this._children[index]._children = new Array(this._childrenInfo[index]._nb);
  if(this.hasLabelMap) {
    var _sliceLabel = X.parser.reslice2(this._childrenInfo[index]._sliceOrigin, this._childrenInfo[index]._sliceXYSpacing, this._childrenInfo[index]._sliceNormal, this._childrenInfo[index]._color, this._BBox, this._labelmap._IJKVolume, this._labelmap, this._labelmap.hasLabelMap, this._labelmap._colortable._map);
    this._labelmap._children[index]._children = [];
    this._labelmap._children[index]._children = new Array(this._childrenInfo[index]._nb);
    this._labelmap._children[index]._children[Math.floor(this._childrenInfo[index]._nb / 2)] = _sliceLabel;
    this._labelmap._children[index].modified()
  }
  var _slice = X.parser.reslice2(this._childrenInfo[index]._sliceOrigin, this._childrenInfo[index]._sliceXYSpacing, this._childrenInfo[index]._sliceNormal, this._childrenInfo[index]._color, this._BBox, this._IJKVolume, this, true, null);
  if(this.hasLabelMap) {
    _slice._labelmap = _slice._texture;
    _slice._labelmap = this._labelmap._children[index]._children[Math.floor(this._childrenInfo[index]._nb / 2)]._texture
  }
  this._children[index]._children[Math.floor(this._childrenInfo[index]._nb / 2)] = _slice;
  if(index == 0) {
    this._indexX = Math.floor(this._childrenInfo[index]._nb / 2);
    this._indexXold = Math.floor(this._childrenInfo[index]._nb / 2)
  }else {
    if(index == 1) {
      this._indexY = Math.floor(this._childrenInfo[index]._nb / 2);
      this._indexYold = Math.floor(this._childrenInfo[index]._nb / 2)
    }else {
      this._indexZ = Math.floor(this._childrenInfo[index]._nb / 2);
      this._indexZold = Math.floor(this._childrenInfo[index]._nb / 2)
    }
  }
  this._children[index].modified();
  this._children[index]._children[Math.floor(this._childrenInfo[index]._nb / 2)]._visible = true
};
X.volume.prototype.volumeRendering_ = function(direction) {
  if(this._computing) {
    return
  }
  if(!this._volumeRendering || !this._dirty && direction == this._volumeRenderingDirection) {
    this._volumeRenderingDirection = direction;
    return
  }
  if(this._volumeRenderingCache.indexOf(direction) == -1) {
    this._volumeRenderingCache.push(direction);
    this._computing = true;
    this.onComputing_(direction)
  }else {
    var _child = this._children[this._volumeRenderingDirection];
    _child["visible"] = false;
    _child = this._children[direction];
    var _numberOfSlices = _child._children.length;
    var i;
    for(i = 0;i < _numberOfSlices;i++) {
      _child._children[i]._visible = true
    }
    this._volumeRenderingDirection = direction;
    this._dirty = false;
    return
  }
  setTimeout(function() {
    var _child = null;
    if(this._volumeRenderingDirection >= 0) {
      _child = this._children[this._volumeRenderingDirection];
      _child["visible"] = false
    }
    _child = this._children[direction];
    var _numberOfSlices = _child._children.length;
    var _progress = 0;
    var quarters = Math.floor(_numberOfSlices / 4);
    var i;
    for(i = 0;i < 1 * quarters;i++) {
      if(!goog.isDefAndNotNull(_child._children[i])) {
        var _sliceOrigin = goog.vec.Vec3.createFloat32();
        _sliceOrigin[0] = this._childrenInfo[direction]._solutionsLine[0][0][0] + this._childrenInfo[direction]._sliceDirection[0] * i;
        _sliceOrigin[1] = this._childrenInfo[direction]._solutionsLine[0][0][1] + this._childrenInfo[direction]._sliceDirection[1] * i;
        _sliceOrigin[2] = this._childrenInfo[direction]._solutionsLine[0][0][2] + this._childrenInfo[direction]._sliceDirection[2] * i;
        if(this.hasLabelMap) {
          var _sliceLabel = X.parser.reslice2(_sliceOrigin, this._childrenInfo[direction]._sliceXYSpacing, this._childrenInfo[direction]._sliceNormal, this._childrenInfo[direction]._color, this._BBox, this._labelmap._IJKVolume, this._labelmap, this._labelmap.hasLabelMap, this._labelmap._colortable._map);
          this._labelmap._children[direction]._children[i] = _sliceLabel;
          this._labelmap._children[direction].modified(true)
        }
        var _slice = X.parser.reslice2(_sliceOrigin, this._childrenInfo[direction]._sliceXYSpacing, this._childrenInfo[direction]._sliceNormal, this._childrenInfo[direction]._color, this._BBox, this._IJKVolume, this, true, null);
        _slice._children[0]._visible = false;
        if(this.hasLabelMap) {
          _slice._labelmap = _slice._texture;
          _slice._labelmap = this._labelmap._children[direction]._children[i]._texture
        }
        _child._children[i] = _slice;
        _child._children[i]._visible = true
      }else {
        _child._children[i]._visible = true
      }
    }
    this.onComputingProgress_(0.25);
    setTimeout(function() {
      for(;i < 2 * quarters;i++) {
        if(!goog.isDefAndNotNull(_child._children[i])) {
          var _sliceOrigin = goog.vec.Vec3.createFloat32();
          _sliceOrigin[0] = this._childrenInfo[direction]._solutionsLine[0][0][0] + this._childrenInfo[direction]._sliceDirection[0] * i;
          _sliceOrigin[1] = this._childrenInfo[direction]._solutionsLine[0][0][1] + this._childrenInfo[direction]._sliceDirection[1] * i;
          _sliceOrigin[2] = this._childrenInfo[direction]._solutionsLine[0][0][2] + this._childrenInfo[direction]._sliceDirection[2] * i;
          if(this.hasLabelMap) {
            var _sliceLabel = X.parser.reslice2(_sliceOrigin, this._childrenInfo[direction]._sliceXYSpacing, this._childrenInfo[direction]._sliceNormal, this._childrenInfo[direction]._color, this._BBox, this._labelmap._IJKVolume, this._labelmap, this._labelmap.hasLabelMap, this._labelmap._colortable._map);
            this._labelmap._children[direction]._children[i] = _sliceLabel;
            this._labelmap._children[direction].modified(true)
          }
          var _slice = X.parser.reslice2(_sliceOrigin, this._childrenInfo[direction]._sliceXYSpacing, this._childrenInfo[direction]._sliceNormal, this._childrenInfo[direction]._color, this._BBox, this._IJKVolume, this, true, null);
          _slice._children[0]._visible = false;
          if(this.hasLabelMap) {
            _slice._labelmap = _slice._texture;
            _slice._labelmap = this._labelmap._children[direction]._children[i]._texture
          }
          _child._children[i] = _slice;
          _child._children[i]._visible = true
        }else {
          _child._children[i]._visible = true
        }
      }
      this.onComputingProgress_(0.5);
      setTimeout(function() {
        for(;i < 3 * quarters;i++) {
          if(!goog.isDefAndNotNull(_child._children[i])) {
            var _sliceOrigin = goog.vec.Vec3.createFloat32();
            _sliceOrigin[0] = this._childrenInfo[direction]._solutionsLine[0][0][0] + this._childrenInfo[direction]._sliceDirection[0] * i;
            _sliceOrigin[1] = this._childrenInfo[direction]._solutionsLine[0][0][1] + this._childrenInfo[direction]._sliceDirection[1] * i;
            _sliceOrigin[2] = this._childrenInfo[direction]._solutionsLine[0][0][2] + this._childrenInfo[direction]._sliceDirection[2] * i;
            if(this.hasLabelMap) {
              var _sliceLabel = X.parser.reslice2(_sliceOrigin, this._childrenInfo[direction]._sliceXYSpacing, this._childrenInfo[direction]._sliceNormal, this._childrenInfo[direction]._color, this._BBox, this._labelmap._IJKVolume, this._labelmap, this._labelmap.hasLabelMap, this._labelmap._colortable._map);
              this._labelmap._children[direction]._children[i] = _sliceLabel;
              this._labelmap._children[direction].modified(true)
            }
            var _slice = X.parser.reslice2(_sliceOrigin, this._childrenInfo[direction]._sliceXYSpacing, this._childrenInfo[direction]._sliceNormal, this._childrenInfo[direction]._color, this._BBox, this._IJKVolume, this, true, null);
            _slice._children[0]._visible = false;
            if(this.hasLabelMap) {
              _slice._labelmap = _slice._texture;
              _slice._labelmap = this._labelmap._children[direction]._children[i]._texture
            }
            _child._children[i] = _slice;
            _child._children[i]._visible = true
          }else {
            _child._children[i]._visible = true
          }
        }
        this.onComputingProgress_(0.75);
        setTimeout(function() {
          for(i = 3 * quarters;i < _numberOfSlices;i++) {
            if(!goog.isDefAndNotNull(_child._children[i])) {
              var _sliceOrigin = goog.vec.Vec3.createFloat32();
              _sliceOrigin[0] = this._childrenInfo[direction]._solutionsLine[0][0][0] + this._childrenInfo[direction]._sliceDirection[0] * i;
              _sliceOrigin[1] = this._childrenInfo[direction]._solutionsLine[0][0][1] + this._childrenInfo[direction]._sliceDirection[1] * i;
              _sliceOrigin[2] = this._childrenInfo[direction]._solutionsLine[0][0][2] + this._childrenInfo[direction]._sliceDirection[2] * i;
              if(this.hasLabelMap) {
                var _sliceLabel = X.parser.reslice2(_sliceOrigin, this._childrenInfo[direction]._sliceXYSpacing, this._childrenInfo[direction]._sliceNormal, this._childrenInfo[direction]._color, this._BBox, this._labelmap._IJKVolume, this._labelmap, this._labelmap.hasLabelMap, this._labelmap._colortable._map);
                this._labelmap._children[direction]._children[i] = _sliceLabel;
                this._labelmap._children[direction].modified(true)
              }
              var _slice = X.parser.reslice2(_sliceOrigin, this._childrenInfo[direction]._sliceXYSpacing, this._childrenInfo[direction]._sliceNormal, this._childrenInfo[direction]._color, this._BBox, this._IJKVolume, this, true, null);
              _slice._children[0]._visible = false;
              if(this.hasLabelMap) {
                _slice._labelmap = _slice._texture;
                _slice._labelmap = this._labelmap._children[direction]._children[i]._texture
              }
              _child._children[i] = _slice;
              _child._children[i]._visible = true
            }else {
              _child._children[i]._visible = true
            }
          }
          this.onComputingProgress_(1);
          setTimeout(function() {
            if(this._computing) {
              this._children[direction].modified(true)
            }
            this._volumeRenderingDirection = direction;
            this._dirty = false;
            if(this._computing) {
              this.onComputingEnd_(direction)
            }
            this._computing = false
          }.bind(this), 10)
        }.bind(this), 10)
      }.bind(this), 10)
    }.bind(this), 10)
  }.bind(this), 10)
};
X.volume.prototype.onComputing_ = function(direction) {
  var computingEvent = new X.event.ComputingEvent;
  computingEvent._object = this;
  this.dispatchEvent(computingEvent);
  this["onComputing"](direction)
};
X.volume.prototype.onComputingProgress_ = function(progress) {
  var computingProgressEvent = new X.event.ComputingProgressEvent;
  computingProgressEvent._value = progress;
  this.dispatchEvent(computingProgressEvent);
  this["onComputingProgress"](progress * 100)
};
X.volume.prototype.onComputingEnd_ = function(direction) {
  var computingEndEvent = new X.event.ComputingEndEvent;
  computingEndEvent._object = this;
  this.dispatchEvent(computingEndEvent);
  this["onComputingEnd"](direction)
};
X.volume.prototype.onComputing = function(direction) {
};
X.volume.prototype.onComputingProgress = function(progress) {
};
X.volume.prototype.onComputingEnd = function(direction) {
};
goog.exportSymbol("X.volume", X.volume);
goog.exportSymbol("X.volume.prototype.modified", X.volume.prototype.modified);
goog.exportSymbol("X.volume.prototype.sliceInfoChanged", X.volume.prototype.sliceInfoChanged);
goog.exportSymbol("X.volume.prototype.onComputing", X.volume.prototype.onComputing);
goog.exportSymbol("X.volume.prototype.onComputingProgress", X.volume.prototype.onComputingProgress);
goog.exportSymbol("X.volume.prototype.onComputingEnd", X.volume.prototype.onComputingEnd);
goog.provide("X.parserOFF");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parser");
goog.require("X.triplets");
X.parserOFF = function() {
  goog.base(this);
  this._classname = "parserOFF"
};
goog.inherits(X.parserOFF, X.parser);
X.parserOFF.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  this._data = data;
  var _length = data.byteLength;
  var byteData = this.scan("uchar", _length);
  var _pts = [];
  object._points = new X.triplets(_length);
  object._normals = new X.triplets(_length);
  var p = object._points;
  var n = object._normals;
  var _position = 0;
  var _self = this;
  function readLine() {
    if(_position === _length) {
      throw new Error("End of file reached unexpectedly.");
    }
    for(var i = _position;i < _length;++i) {
      if(byteData[i] === 10) {
        var line = _self.parseChars(byteData, _position, i);
        _position = i + 1;
        return line
      }
    }
    _position = _length;
    return _self.parseChars(byteData, _position, _length - 1)
  }
  var _firstLine = readLine();
  var _numbersLine = _firstLine === "OFF" ? readLine() : _firstLine;
  var _split = _numbersLine.split(" ");
  var _nVertices = _split[0];
  var _nFaces = _split[1];
  while(_nVertices--) {
    var line = readLine();
    var coords = line.split(" ");
    var x = parseFloat(coords[0]);
    var y = parseFloat(coords[1]);
    var z = parseFloat(coords[2]);
    _pts.push([x, y, z])
  }
  while(_nFaces--) {
    var line = readLine();
    var coords = line.split(" ");
    var p1 = _pts[parseInt(coords[1], 10)];
    var p2 = _pts[parseInt(coords[2], 10)];
    var p3 = _pts[parseInt(coords[3], 10)];
    p.add(p1[0], p1[1], p1[2]);
    p.add(p2[0], p2[1], p2[2]);
    p.add(p3[0], p3[1], p3[2]);
    var v1 = new goog.math.Vec3(p1[0], p1[1], p1[2]);
    var v2 = new goog.math.Vec3(p2[0], p2[1], p2[2]);
    var v3 = new goog.math.Vec3(p3[0], p3[1], p3[2]);
    var norm = goog.math.Vec3.cross(v2.subtract(v1), v3.subtract(v1));
    norm.normalize();
    n.add(norm.x, norm.y, norm.z);
    n.add(norm.x, norm.y, norm.z);
    n.add(norm.x, norm.y, norm.z)
  }
  X.TIMERSTOP(this._classname + ".parse");
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
goog.exportSymbol("X.parserOFF", X.parserOFF);
goog.exportSymbol("X.parserOFF.prototype.parse", X.parserOFF.prototype.parse);
goog.provide("X.parserDCM");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parser");
goog.require("X.triplets");
goog.require("goog.math.Vec3");
X.parserDCM = function() {
  goog.base(this);
  this._classname = "parserDCM"
};
goog.inherits(X.parserDCM, X.parser);
X.parserDCM.prototype.parse = function(container, object, data, flag) {
  object.MRI = {};
  object.MRI.loaded_files = 0;
  this.parseStream(data, object);
  if(!goog.isDefAndNotNull(object._file.length) || object.slices.length == object._file.length) {
    object.MRI.loaded_files = object._file.length;
    var series = {};
    var imageSeriesPushed = {};
    for(var i = 0;i < object.slices.length;i++) {
      if(!series.hasOwnProperty(object.slices[i]["series_instance_uid"])) {
        series[object.slices[i]["series_instance_uid"]] = new Array;
        imageSeriesPushed[object.slices[i]["series_instance_uid"]] = {}
      }
      if(!imageSeriesPushed[object.slices[i]["series_instance_uid"]].hasOwnProperty(object.slices[i]["sop_instance_uid"])) {
        imageSeriesPushed[object.slices[i]["series_instance_uid"]][object.slices[i]["sop_instance_uid"]] = true;
        series[object.slices[i]["series_instance_uid"]].push(object.slices[i])
      }
    }
    var seriesInstanceUID = Object.keys(series)[0];
    var first_image = series[seriesInstanceUID];
    var first_image_stacks = first_image.length;
    var volumeAttributes = {};
    var _ordering = "image_position_patient";
    if(first_image_stacks == 1) {
      _ordering = "image_position_patient";
      series[seriesInstanceUID][0]["dist"] = 0
    }else {
      if(first_image[0]["image_position_patient"][0] != first_image[1]["image_position_patient"][0] || first_image[0]["image_position_patient"][1] != first_image[1]["image_position_patient"][1] || first_image[0]["image_position_patient"][2] != first_image[1]["image_position_patient"][2]) {
        _ordering = "image_position_patient";
        var _x_cosine = new goog.math.Vec3(first_image[0]["image_orientation_patient"][0], first_image[0]["image_orientation_patient"][1], first_image[0]["image_orientation_patient"][2]);
        var _y_cosine = new goog.math.Vec3(first_image[0]["image_orientation_patient"][3], first_image[0]["image_orientation_patient"][4], first_image[0]["image_orientation_patient"][5]);
        var _z_cosine = goog.math.Vec3.cross(_x_cosine, _y_cosine);
        function computeDistance(flag, arrelem) {
          arrelem["dist"] = arrelem["image_position_patient"][0] * flag.x + arrelem["image_position_patient"][1] * flag.y + arrelem["image_position_patient"][2] * flag.z;
          return arrelem
        }
        first_image.map(computeDistance.bind(null, _z_cosine));
        first_image.sort(function(a, b) {
          return a["dist"] - b["dist"]
        })
      }else {
        if(first_image[0]["instance_number"] != first_image[1]["instance_number"]) {
          _ordering = "instance_number";
          first_image.sort(function(a, b) {
            return a["instance_number"] - b["instance_number"]
          })
        }else {
          window.console.log("Could not resolve the ordering mode")
        }
      }
    }
    if(isNaN(first_image[0]["pixel_spacing"][0])) {
      first_image[0]["pixel_spacing"][0] = 1
    }
    if(isNaN(first_image[0]["pixel_spacing"][1])) {
      first_image[0]["pixel_spacing"][1] = 1
    }
    if(first_image_stacks > 1) {
      switch(_ordering) {
        case "image_position_patient":
          var _first_position = first_image[0]["image_position_patient"];
          var _second_image_position = first_image[1]["image_position_patient"];
          var _x = _second_image_position[0] - _first_position[0];
          var _y = _second_image_position[1] - _first_position[1];
          var _z = _second_image_position[2] - _first_position[2];
          first_image[0]["pixel_spacing"][2] = Math.sqrt(_x * _x + _y * _y + _z * _z);
          break;
        case "instance_number":
          first_image[0]["pixel_spacing"][2] = 1;
          break;
        default:
          window.console.log("Unkown ordering mode - returning: " + _ordering);
          break
      }
    }else {
      first_image[0]["pixel_spacing"][2] = 1
    }
    var first_image_expected_nb_slices = 1;
    switch(_ordering) {
      case "image_position_patient":
        var _first_position = first_image[0]["image_position_patient"];
        var _last_image_position = first_image[first_image_stacks - 1]["image_position_patient"];
        var _x = _last_image_position[0] - _first_position[0];
        var _y = _last_image_position[1] - _first_position[1];
        var _z = _last_image_position[2] - _first_position[2];
        var _distance_position = Math.sqrt(_x * _x + _y * _y + _z * _z);
        first_image_expected_nb_slices += Math.round(_distance_position / first_image[0]["pixel_spacing"][2]);
        break;
      case "instance_number":
        first_image_expected_nb_slices += Math.abs(first_image[first_image_stacks - 1]["instance_number"] - first_image[0]["instance_number"]);
        break;
      default:
        window.console.log("Unkown ordering mode - returning: " + _ordering);
        break
    }
    var first_slice_size = first_image[0]["columns"] * first_image[0]["rows"];
    var first_image_size = first_slice_size * first_image_expected_nb_slices;
    var first_image_data = null;
    switch(first_image[0].bits_allocated) {
      case 8:
        first_image_data = new Uint8Array(first_image_size);
        break;
      case 16:
        first_image_data = new Uint16Array(first_image_size);
        break;
      case 32:
        first_image_data = new Uint32Array(first_image_size);
      default:
        window.console.log("Unknown number of bits allocated - using default: 32 bits");
        break
    }
    object._spacing = first_image[0]["pixel_spacing"];
    for(var _i = 0;_i < first_image_stacks;_i++) {
      var _data = first_image[_i].data;
      var _distance_position = 0;
      switch(_ordering) {
        case "image_position_patient":
          var _x = first_image[_i]["image_position_patient"][0] - first_image[0]["image_position_patient"][0];
          var _y = first_image[_i]["image_position_patient"][1] - first_image[0]["image_position_patient"][1];
          var _z = first_image[_i]["image_position_patient"][2] - first_image[0]["image_position_patient"][2];
          _distance_position = Math.sqrt(_x * _x + _y * _y + _z * _z) / first_image[0]["pixel_spacing"][2];
          break;
        case "instance_number":
          _distance_position = first_image[_i]["instance_number"] - first_image[0]["instance_number"];
          break;
        default:
          window.console.log("Unkown ordering mode - returning: " + _ordering);
          break
      }
      first_image_data.set(_data, _distance_position * first_slice_size)
    }
    volumeAttributes.data = first_image_data;
    object._data = first_image_data;
    object._dimensions = [first_image[0]["columns"], first_image[0]["rows"], first_image_expected_nb_slices];
    volumeAttributes.dimensions = object._dimensions;
    var min_max = this.arrayMinMax(first_image_data);
    var min = min_max[0];
    var max = min_max[1];
    volumeAttributes.min = object._min = object._windowLow = min;
    volumeAttributes.max = object._max = object._windowHigh = max;
    if(object._lowerThreshold == -Infinity) {
      object._lowerThreshold = min
    }
    if(object._upperThreshold == Infinity) {
      object._upperThreshold = max
    }
    var _origin = first_image[0]["image_position_patient"];
    var IJKToRAS = goog.vec.Mat4.createFloat32();
    switch(_ordering) {
      case "image_position_patient":
        var _x_cosine = new goog.math.Vec3(first_image[0]["image_orientation_patient"][0], first_image[0]["image_orientation_patient"][1], first_image[0]["image_orientation_patient"][2]);
        var _y_cosine = new goog.math.Vec3(first_image[0]["image_orientation_patient"][3], first_image[0]["image_orientation_patient"][4], first_image[0]["image_orientation_patient"][5]);
        var _z_cosine = goog.math.Vec3.cross(_x_cosine, _y_cosine);
        goog.vec.Mat4.setRowValues(IJKToRAS, 0, -first_image[0]["image_orientation_patient"][0] * first_image[0]["pixel_spacing"][0], -first_image[0]["image_orientation_patient"][3] * first_image[0]["pixel_spacing"][1], -_z_cosine.x * first_image[0]["pixel_spacing"][2], -_origin[0]);
        goog.vec.Mat4.setRowValues(IJKToRAS, 1, -first_image[0]["image_orientation_patient"][1] * first_image[0]["pixel_spacing"][0], -first_image[0]["image_orientation_patient"][4] * first_image[0]["pixel_spacing"][1], -_z_cosine.y * first_image[0]["pixel_spacing"][2], -_origin[1]);
        goog.vec.Mat4.setRowValues(IJKToRAS, 2, first_image[0]["image_orientation_patient"][2] * first_image[0]["pixel_spacing"][0], first_image[0]["image_orientation_patient"][5] * first_image[0]["pixel_spacing"][1], _z_cosine.z * first_image[0]["pixel_spacing"][2], _origin[2]);
        goog.vec.Mat4.setRowValues(IJKToRAS, 3, 0, 0, 0, 1);
        break;
      case "instance_number":
        goog.vec.Mat4.setRowValues(IJKToRAS, 0, -1, 0, 0, -_origin[0]);
        goog.vec.Mat4.setRowValues(IJKToRAS, 1, -0, -1, -0, -_origin[1]);
        goog.vec.Mat4.setRowValues(IJKToRAS, 2, 0, 0, 1, _origin[2]);
        goog.vec.Mat4.setRowValues(IJKToRAS, 3, 0, 0, 0, 1);
        break;
      default:
        window.console.log("Unkown ordering mode - returning: " + _ordering);
        break
    }
    volumeAttributes.IJKToRAS = IJKToRAS;
    volumeAttributes.RASToIJK = goog.vec.Mat4.createFloat32();
    goog.vec.Mat4.invert(volumeAttributes.IJKToRAS, volumeAttributes.RASToIJK);
    var tar = goog.vec.Vec4.createFloat32FromValues(0, 0, 0, 1);
    var res = goog.vec.Vec4.createFloat32();
    goog.vec.Mat4.multVec4(IJKToRAS, tar, res);
    var tar2 = goog.vec.Vec4.createFloat32FromValues(1, 1, 1, 1);
    var res2 = goog.vec.Vec4.createFloat32();
    goog.vec.Mat4.multVec4(IJKToRAS, tar2, res2);
    volumeAttributes.RASSpacing = [res2[0] - res[0], res2[1] - res[1], res2[2] - res[2]];
    var _rasBB = X.parser.computeRASBBox(IJKToRAS, [object._dimensions[0], object._dimensions[1], object._dimensions[2]]);
    volumeAttributes.RASDimensions = [_rasBB[1] - _rasBB[0] + 1, _rasBB[3] - _rasBB[2] + 1, _rasBB[5] - _rasBB[4] + 1];
    volumeAttributes.RASOrigin = [_rasBB[0], _rasBB[2], _rasBB[4]];
    object.create_(volumeAttributes);
    object._image = this.reslice(object)
  }
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
X.parserDCM.prototype.handleDefaults = function(_bytes, _bytePointer, _VR, _VL) {
  switch(_VR) {
    case 16975:
    ;
    case 20819:
    ;
    case 20053:
    ;
    case 22351:
      function byte2bits(a) {
        var tmp = "";
        for(var i = 128;i >= 1;i /= 2) {
          tmp += a & i ? "1" : "0"
        }
        return tmp
      }
      _VL = _bytes[_bytePointer++];
      var _VLT = _bytes[_bytePointer++];
      var _b0 = _VL & 255;
      var _b1 = (_VL & 65280) >> 8;
      var _b2 = _VLT & 255;
      var _b3 = (_VLT & 65280) >> 8;
      var _VLb0 = byte2bits(_b0);
      var _VLb1 = byte2bits(_b1);
      var _VLb = _VLb1 + _VLb0;
      var _VLTb0 = byte2bits(_b2);
      var _VLTb1 = byte2bits(_b3);
      var _VLTb = _VLTb1 + _VLTb0;
      var _VL2 = _VLTb + _VLb;
      _VL = parseInt(_VL2, 2);
      if(_VL == 4294967295) {
        _VL = 0
      }
      _bytePointer += _VL / 2;
      break;
    default:
      _bytePointer += _VL / 2;
      break
  }
  return _bytePointer
};
X.parserDCM.prototype.parseStream = function(data, object) {
  this._data = data;
  if(typeof object.slices == "undefined" || object.slices == null) {
    object.slices = new Array
  }
  var slice = {};
  slice["pixel_spacing"] = [0.1, 0.1, Infinity];
  slice["image_orientation_patient"] = [1, 0, 0, 0, 1, 0];
  slice["image_position_patient"] = [0, 0, 0];
  slice["transfer_syntax_uid"] = "no_transfer_syntax_uid";
  var _bytes = this.scan("ushort", this._data.byteLength);
  var _bytePointer = 66;
  var _tagGroup = null;
  var _tagElement = null;
  var _VR = null;
  var _VL = null;
  while(_bytePointer < _bytes.length) {
    _tagGroup = _bytes[_bytePointer++];
    _tagElement = _bytes[_bytePointer++];
    _VR = _bytes[_bytePointer++];
    _VL = _bytes[_bytePointer++];
    if(slice["transfer_syntax_uid"] == "1.2.840.10008.1.2" && _VL == 0) {
      _VL = _VR
    }
    switch(_tagGroup) {
      case 2:
        switch(_tagElement) {
          case 16:
            var _transfer_syntax_uid = "";
            var i = 0;
            for(i = 0;i < _VL / 2;i++) {
              var _short = _bytes[_bytePointer++];
              var _b0 = _short & 255;
              var _b1 = (_short & 65280) >> 8;
              _transfer_syntax_uid += String.fromCharCode(_b0);
              _transfer_syntax_uid += String.fromCharCode(_b1)
            }
            slice["transfer_syntax_uid"] = _transfer_syntax_uid.replace(/\0/g, "");
            break;
          default:
            _bytePointer = X.parserDCM.prototype.handleDefaults(_bytes, _bytePointer, _VR, _VL);
            break
        }
        break;
      case 40:
        switch(_tagElement) {
          case 16:
            slice["rows"] = _bytes[_bytePointer];
            _bytePointer += _VL / 2;
            break;
          case 17:
            slice["columns"] = _bytes[_bytePointer];
            _bytePointer += _VL / 2;
            break;
          case 256:
            slice.bits_allocated = _bytes[_bytePointer];
            _bytePointer += _VL / 2;
            break;
          case 257:
            slice["bits_stored"] = _bytes[_bytePointer];
            _bytePointer += _VL / 2;
            break;
          case 2:
            slice["number_of_images"] = _bytes[_bytePointer];
            _bytePointer += _VL / 2;
            break;
          case 48:
            var _pixel_spacing = "";
            var i = 0;
            for(i = 0;i < _VL / 2;i++) {
              var _short = _bytes[_bytePointer++];
              var _b0 = _short & 255;
              var _b1 = (_short & 65280) >> 8;
              _pixel_spacing += String.fromCharCode(_b0);
              _pixel_spacing += String.fromCharCode(_b1)
            }
            _pixel_spacing = _pixel_spacing.split("\\");
            slice["pixel_spacing"] = [parseFloat(_pixel_spacing[0]), parseFloat(_pixel_spacing[1]), Infinity];
            break;
          case 4178:
          ;
          case 4179:
          ;
          case 4176:
          ;
          case 4177:
          ;
          case 4:
          ;
          case 258:
          ;
          case 259:
          ;
          case 4180:
          ;
          case 8464:
          ;
          default:
            _bytePointer = X.parserDCM.prototype.handleDefaults(_bytes, _bytePointer, _VR, _VL);
            break
        }
        break;
      case 32:
        switch(_tagElement) {
          case 14:
            slice["series_instance_uid"] = "";
            var i = 0;
            for(i = 0;i < _VL / 2;i++) {
              var _short = _bytes[_bytePointer++];
              var _b0 = _short & 255;
              var _b1 = (_short & 65280) >> 8;
              slice["series_instance_uid"] += String.fromCharCode(_b0);
              slice["series_instance_uid"] += String.fromCharCode(_b1)
            }
            break;
          case 19:
            var _position = "";
            for(i = 0;i < _VL / 2;i++) {
              var _short = _bytes[_bytePointer++];
              var _b0 = _short & 255;
              var _b1 = (_short & 65280) >> 8;
              _position += String.fromCharCode(_b0);
              _position += String.fromCharCode(_b1)
            }
            slice["instance_number"] = parseInt(_position, 10);
            break;
          case 50:
            var _image_position = "";
            var i = 0;
            for(i = 0;i < _VL / 2;i++) {
              var _short = _bytes[_bytePointer++];
              var _b0 = _short & 255;
              var _b1 = (_short & 65280) >> 8;
              _image_position += String.fromCharCode(_b0);
              _image_position += String.fromCharCode(_b1)
            }
            _image_position = _image_position.split("\\");
            slice["image_position_patient"] = [parseFloat(_image_position[0]), parseFloat(_image_position[1]), parseFloat(_image_position[2])];
            break;
          case 55:
            var _image_orientation = "";
            var i = 0;
            for(i = 0;i < _VL / 2;i++) {
              var _short = _bytes[_bytePointer++];
              var _b0 = _short & 255;
              var _b1 = (_short & 65280) >> 8;
              _image_orientation += String.fromCharCode(_b0);
              _image_orientation += String.fromCharCode(_b1)
            }
            _image_orientation = _image_orientation.split("\\");
            slice["image_orientation_patient"] = [parseFloat(_image_orientation[0]), parseFloat(_image_orientation[1]), parseFloat(_image_orientation[2]), parseFloat(_image_orientation[3]), parseFloat(_image_orientation[4]), parseFloat(_image_orientation[5])];
            break;
          default:
            _bytePointer = X.parserDCM.prototype.handleDefaults(_bytes, _bytePointer, _VR, _VL);
            break
        }
        break;
      case 65534:
        switch(_tagElement) {
          case 57344:
          ;
          case 57357:
          ;
          case 57565:
          ;
          default:
            _VL = 0;
            _bytePointer += _VL / 2;
            break
        }
        break;
      case 8:
        switch(_tagElement) {
          case 24:
            slice["sop_instance_uid"] = "";
            var i = 0;
            for(i = 0;i < _VL / 2;i++) {
              var _short = _bytes[_bytePointer++];
              var _b0 = _short & 255;
              var _b1 = (_short & 65280) >> 8;
              slice["sop_instance_uid"] += String.fromCharCode(_b0);
              slice["sop_instance_uid"] += String.fromCharCode(_b1)
            }
            break;
          default:
            _bytePointer = X.parserDCM.prototype.handleDefaults(_bytes, _bytePointer, _VR, _VL);
            break
        }
        break;
      case 16:
        switch(_tagElement) {
          case 8720:
            var _anatomical_orientation = "";
            var i = 0;
            for(i = 0;i < _VL / 2;i++) {
              var _short = _bytes[_bytePointer++];
              var _b0 = _short & 255;
              var _b1 = (_short & 65280) >> 8;
              _anatomical_orientation += String.fromCharCode(_b0);
              _anatomical_orientation += String.fromCharCode(_b1)
            }
            break;
          default:
            _bytePointer = X.parserDCM.prototype.handleDefaults(_bytes, _bytePointer, _VR, _VL);
            break
        }
        break;
      default:
        _bytePointer = X.parserDCM.prototype.handleDefaults(_bytes, _bytePointer, _VR, _VL);
        break
    }
  }
  switch(slice.bits_allocated) {
    case 8:
      slice.data = new Uint8Array(slice["columns"] * slice["rows"]);
      break;
    case 16:
      slice.data = new Uint16Array(slice["columns"] * slice["rows"]);
      break;
    case 32:
      slice.data = new Uint32Array(slice["columns"] * slice["rows"]);
      break
  }
  this.jumpTo(this._data.byteLength - slice["columns"] * slice["rows"] * 2);
  var _data = null;
  switch(slice.bits_allocated) {
    case 8:
      _data = this.scan("uchar", slice["columns"] * slice["rows"]);
      break;
    case 16:
      _data = this.scan("ushort", slice["columns"] * slice["rows"]);
      break;
    case 32:
      _data = this.scan("uint", slice["columns"] * slice["rows"]);
      break
  }
  slice["data"] = _data;
  object.slices.push(slice);
  return object
};
goog.exportSymbol("X.parserDCM", X.parserDCM);
goog.exportSymbol("X.parserDCM.prototype.parse", X.parserDCM.prototype.parse);
goog.provide("X.parserVTK");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parser");
goog.require("X.triplets");
X.parserVTK = function() {
  goog.base(this);
  this._classname = "parserVTK"
};
goog.inherits(X.parserVTK, X.parser);
X.parserVTK.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  var p = object._points;
  var n = object._normals;
  var _data = new Uint8Array(data);
  var _str = "";
  object._points = p = new X.triplets(data.byteLength);
  object._normals = n = new X.triplets(data.byteLength);
  var QUANTUM = 32768;
  for(var i = 0, len = _data.length;i < len;i += QUANTUM) {
    _str += this.parseChars(_data, i, Math.min(i + QUANTUM, len))
  }
  var dataAsArray = _str.split("\n");
  var numberOfLines = dataAsArray.length;
  this._unorderedPoints = null;
  this._unorderedNormals = null;
  this._geometries = [];
  this._objectType = X.displayable.types.TRIANGLES;
  this._pointsMode = false;
  this._geometryMode = false;
  this._pointDataMode = false;
  this._normalsMode = false;
  var i = 0;
  var n2 = numberOfLines % 8;
  while(n2--) {
    this.parseLine(dataAsArray[i]);
    i++
  }
  n2 = numberOfLines * 0.125 ^ 0;
  while(n2--) {
    this.parseLine(dataAsArray[i]);
    i++;
    this.parseLine(dataAsArray[i]);
    i++;
    this.parseLine(dataAsArray[i]);
    i++;
    this.parseLine(dataAsArray[i]);
    i++;
    this.parseLine(dataAsArray[i]);
    i++;
    this.parseLine(dataAsArray[i]);
    i++;
    this.parseLine(dataAsArray[i]);
    i++;
    this.parseLine(dataAsArray[i]);
    i++
  }
  this.configure(p, n);
  object._type = this._objectType;
  X.TIMERSTOP(this._classname + ".parse");
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
X.parserVTK.prototype.parseLine = function(line) {
  line = line.replace(/^\s+|\s+$/g, "");
  var lineFields = line.split(" ");
  var numberOfLineFields = lineFields.length;
  var firstLineField = lineFields[0];
  switch(firstLineField) {
    case "POINTS":
      this._pointsMode = true;
      this._geometryMode = false;
      this._pointDataMode = false;
      var numberOfPoints = parseInt(lineFields[1], 10);
      this._unorderedPoints = new X.triplets(numberOfPoints * 3);
      this._unorderedNormals = new X.triplets(numberOfPoints * 3);
      return;
    case "VERTICES":
      this._geometryMode = true;
      this._pointsMode = false;
      this._pointDataMode = false;
      var numberOfElements = parseInt(lineFields[1], 10);
      if(numberOfElements >= 3) {
        this._objectType = X.displayable.types.TRIANGLES
      }else {
        if(numberOfElements == 1) {
          this._objectType = X.displayable.types.POINTS
        }else {
          throw new Error("This VTK file is not supported!");
        }
      }
      this._geometries = [];
      return;
    case "TRIANGLE_STRIPS":
      this._geometryMode = true;
      this._pointsMode = false;
      this._pointDataMode = false;
      this._objectType = X.displayable.types.TRIANGLE_STRIPS;
      this._geometries = [];
      return;
    case "LINES":
      this._geometryMode = true;
      this._pointsMode = false;
      this._pointDataMode = false;
      this._objectType = X.displayable.types.LINES;
      this._geometries = [];
      return;
    case "POLYGONS":
      this._geometryMode = true;
      this._pointsMode = false;
      this._pointDataMode = false;
      this._objectType = X.displayable.types.POLYGONS;
      this._geometries = [];
      return;
    case "POINT_DATA":
      this._pointDataMode = true;
      this._pointsMode = false;
      this._geometryMode = false;
      return
  }
  if(this._pointsMode) {
    if(numberOfLineFields == 1 || isNaN(parseFloat(firstLineField))) {
      this._pointsMode = false;
      return
    }
    if(numberOfLineFields >= 3) {
      var x0 = parseFloat(lineFields[0]);
      var y0 = parseFloat(lineFields[1]);
      var z0 = parseFloat(lineFields[2]);
      this._unorderedPoints.add(x0, y0, z0)
    }
    if(numberOfLineFields >= 6) {
      var x1 = parseFloat(lineFields[3]);
      var y1 = parseFloat(lineFields[4]);
      var z1 = parseFloat(lineFields[5]);
      this._unorderedPoints.add(x1, y1, z1)
    }
    if(numberOfLineFields >= 9) {
      var x2 = parseFloat(lineFields[6]);
      var y2 = parseFloat(lineFields[7]);
      var z2 = parseFloat(lineFields[8]);
      this._unorderedPoints.add(x2, y2, z2)
    }
  }else {
    if(this._geometryMode) {
      if(numberOfLineFields == 1 || isNaN(parseFloat(firstLineField))) {
        this._geometryMode = false;
        return
      }
      var values = lineFields.slice(1);
      this._geometries.push(values)
    }else {
      if(this._pointDataMode) {
        if(firstLineField == "NORMALS") {
          this._normalsMode = true;
          return
        }
        if(numberOfLineFields == 1 || isNaN(parseFloat(firstLineField))) {
          this._pointDataMode = false;
          this._normalsMode = false;
          return
        }
        if(this._normalsMode) {
          if(numberOfLineFields >= 3) {
            var x0 = parseFloat(lineFields[0]);
            var y0 = parseFloat(lineFields[1]);
            var z0 = parseFloat(lineFields[2]);
            this._unorderedNormals.add(x0, y0, z0)
          }
          if(numberOfLineFields >= 6) {
            var x1 = parseFloat(lineFields[3]);
            var y1 = parseFloat(lineFields[4]);
            var z1 = parseFloat(lineFields[5]);
            this._unorderedNormals.add(x1, y1, z1)
          }
          if(numberOfLineFields >= 9) {
            var x2 = parseFloat(lineFields[6]);
            var y2 = parseFloat(lineFields[7]);
            var z2 = parseFloat(lineFields[8]);
            this._unorderedNormals.add(x2, y2, z2)
          }
        }
      }
    }
  }
};
X.parserVTK.prototype.configure = function(p, n) {
  var unorderedPoints = this._unorderedPoints;
  var unorderedNormals = this._unorderedNormals;
  var numberOfUnorderedNormals = unorderedNormals.length;
  var numberOfGeometries = this._geometries.length;
  var i = numberOfGeometries;
  do {
    var currentGeometry = this._geometries[numberOfGeometries - i];
    var currentGeometryLength = currentGeometry.length;
    var k;
    for(k = 0;k < currentGeometryLength;k++) {
      if(this._objectType == X.displayable.types.LINES && k + 1 >= currentGeometryLength) {
        break
      }
      var currentIndex = parseInt(currentGeometry[k], 10);
      var currentPoint = unorderedPoints.get(currentIndex);
      p.add(currentPoint[0], currentPoint[1], currentPoint[2]);
      var nextIndex = currentIndex;
      var nextPoint = currentPoint;
      if(this._objectType == X.displayable.types.LINES) {
        nextIndex = parseInt(currentGeometry[k + 1], 10);
        nextPoint = unorderedPoints.get(nextIndex);
        p.add(nextPoint[0], nextPoint[1], nextPoint[2])
      }else {
        if(this._objectType == X.displayable.types.TRIANGLE_STRIPS) {
          if(k == 0 || k == currentGeometryLength - 1) {
            p.add(currentPoint[0], currentPoint[1], currentPoint[2])
          }
        }
      }
      if(currentIndex < numberOfUnorderedNormals) {
        var currentNormals = unorderedNormals.get(currentIndex);
        n.add(currentNormals[0], currentNormals[1], currentNormals[2]);
        if(this._objectType == X.displayable.types.LINES) {
          var nextNormals = unorderedNormals.get(nextIndex);
          n.add(nextNormals[0], nextNormals[1], nextNormals[2])
        }else {
          if(this._objectType == X.displayable.types.TRIANGLE_STRIPS) {
            if(k == 0 || k == currentGeometryLength - 1) {
              n.add(currentNormals[0], currentNormals[1], currentNormals[2])
            }
          }
        }
      }else {
        var artificialNormal = new goog.math.Vec3(currentPoint[0], currentPoint[1], currentPoint[2]);
        artificialNormal.normalize();
        n.add(artificialNormal.x, artificialNormal.y, artificialNormal.z);
        if(this._objectType == X.displayable.types.LINES) {
          var artificialNormal2 = new goog.math.Vec3(nextPoint[0], nextPoint[1], nextPoint[2]);
          artificialNormal2.normalize();
          n.add(artificialNormal2.x, artificialNormal2.y, artificialNormal2.z)
        }else {
          if(this._objectType == X.displayable.types.TRIANGLE_STRIPS) {
            if(k == 0 || k == currentGeometryLength - 1) {
              n.add(artificialNormal.x, artificialNormal.y, artificialNormal.z)
            }
          }
        }
      }
    }
    i--
  }while(i > 0)
};
goog.exportSymbol("X.parserVTK", X.parserVTK);
goog.exportSymbol("X.parserVTK.prototype.parse", X.parserVTK.prototype.parse);
goog.provide("X.parserFSM");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parser");
goog.require("X.triplets");
goog.require("goog.math.Vec3");
X.parserFSM = function() {
  goog.base(this);
  this._classname = "parserFSM";
  this._littleEndian = false
};
goog.inherits(X.parserFSM, X.parser);
X.parserFSM.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  this._data = data;
  var p = object._points;
  var n = object._normals;
  object._pointIndices = [];
  var ind = object._pointIndices;
  var iters = 0;
  var curChar;
  do {
    curChar = this.scan("uchar");
    iters++
  }while(iters < 200 && curChar != 10);
  curChar = this.scan("uchar");
  var numberOfVertices = this.scan("uint");
  var numberOfTriangles = this.scan("uint");
  var _vertices = this.scan("float", numberOfVertices * 3);
  var _indices = this.scan("uint", numberOfTriangles * 3);
  var indexCounter = new Uint32Array(numberOfVertices);
  var normals = new Float32Array(numberOfTriangles * 9);
  object._points = p = new X.triplets(numberOfTriangles * 9);
  object._normals = n = new X.triplets(numberOfTriangles * 9);
  var t;
  for(t = 0;t < numberOfTriangles;t++) {
    var i = t * 3;
    var index1 = _indices[i];
    var index2 = _indices[i + 1];
    var index3 = _indices[i + 2];
    ind.push(index1);
    ind.push(index2);
    ind.push(index3);
    indexCounter[index1] += 1;
    indexCounter[index2] += 1;
    indexCounter[index3] += 1;
    var _index1 = index1 * 3;
    var _index2 = index2 * 3;
    var _index3 = index3 * 3;
    var v1x = _vertices[_index1];
    var v1y = _vertices[_index1 + 1];
    var v1z = _vertices[_index1 + 2];
    var v2x = _vertices[_index2];
    var v2y = _vertices[_index2 + 1];
    var v2z = _vertices[_index2 + 2];
    var v3x = _vertices[_index3];
    var v3y = _vertices[_index3 + 1];
    var v3z = _vertices[_index3 + 2];
    p.add(v1x, v1y, v1z);
    p.add(v2x, v2y, v2z);
    p.add(v3x, v3y, v3z);
    var v1v = new goog.math.Vec3(v1x, v1y, v1z);
    var v2v = new goog.math.Vec3(v2x, v2y, v2z);
    var v3v = new goog.math.Vec3(v3x, v3y, v3z);
    var n1 = v2v.clone().subtract(v1v);
    var n2 = v3v.clone().subtract(v1v);
    var normal = goog.math.Vec3.cross(n1, n2).normalize();
    normals[_index1] += normal.x;
    normals[_index1 + 1] += normal.y;
    normals[_index1 + 2] += normal.z;
    normals[_index2] += normal.x;
    normals[_index2 + 1] += normal.y;
    normals[_index2 + 2] += normal.z;
    normals[_index3] += normal.x;
    normals[_index3 + 1] += normal.y;
    normals[_index3 + 2] += normal.z
  }
  for(t = 0;t < numberOfTriangles;t++) {
    var i = t * 3;
    var index1 = _indices[i];
    var index2 = _indices[i + 1];
    var index3 = _indices[i + 2];
    var _index1 = index1 * 3;
    var _index2 = index2 * 3;
    var _index3 = index3 * 3;
    var n1x = normals[_index1];
    var n1y = normals[_index1 + 1];
    var n1z = normals[_index1 + 2];
    var n2x = normals[_index2];
    var n2y = normals[_index2 + 1];
    var n2z = normals[_index2 + 2];
    var n3x = normals[_index3];
    var n3y = normals[_index3 + 1];
    var n3z = normals[_index3 + 2];
    var n1v = new goog.math.Vec3(n1x, n1y, n1z);
    var n2v = new goog.math.Vec3(n2x, n2y, n2z);
    var n3v = new goog.math.Vec3(n3x, n3y, n3z);
    var normal1 = n1v.scale(1 / indexCounter[index1]).normalize();
    var normal2 = n2v.scale(1 / indexCounter[index2]).normalize();
    var normal3 = n3v.scale(1 / indexCounter[index3]).normalize();
    n.add(normal1.x, normal1.y, normal1.z);
    n.add(normal2.x, normal2.y, normal2.z);
    n.add(normal3.x, normal3.y, normal3.z)
  }
  var _rest_of_file = this.scan("uchar", this._data.byteLength - this._dataPointer);
  var _cras = null;
  for(var i = 0;i < _rest_of_file.length;i++) {
    if(_rest_of_file[i] == 99 && _rest_of_file[i + 1] == 114 && _rest_of_file[i + 2] == 97 && _rest_of_file[i + 3] == 115) {
      var _cras_values_start = i + 9;
      var _cras_values_stop = _cras_values_start;
      while(_rest_of_file[i] != 10 && i < _rest_of_file.length) {
        _cras_values_stop++;
        i++
      }
      _cras = this.parseChars(_rest_of_file.subarray(_cras_values_start, _cras_values_stop)).split(" ");
      break
    }
  }
  if(_cras) {
    object._transform.translateX(parseFloat(_cras[0]));
    object._transform.translateY(parseFloat(_cras[1]));
    object._transform.translateZ(parseFloat(_cras[2]))
  }
  object._type = X.displayable.types.TRIANGLES;
  X.TIMERSTOP(this._classname + ".parse");
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
goog.exportSymbol("X.parserFSM", X.parserFSM);
goog.exportSymbol("X.parserFSM.prototype.parse", X.parserFSM.prototype.parse);
goog.provide("USE_TYPEDARRAY");
var USE_TYPEDARRAY = true;
goog.provide("Zlib.CRC32");
goog.require("USE_TYPEDARRAY");
var ZLIB_CRC32_EXPORT = false;
goog.scope(function() {
  Zlib.CRC32.calc = function(data, pos, length) {
    return Zlib.CRC32.update(data, 0, pos, length)
  };
  Zlib.CRC32.update = function(data, crc, pos, length) {
    var table = Zlib.CRC32.Table;
    var i = typeof pos === "number" ? pos : pos = 0;
    var il = typeof length === "number" ? length : data.length;
    crc ^= 4294967295;
    for(i = il & 7;i--;++pos) {
      crc = crc >>> 8 ^ table[(crc ^ data[pos]) & 255]
    }
    for(i = il >> 3;i--;pos += 8) {
      crc = crc >>> 8 ^ table[(crc ^ data[pos]) & 255];
      crc = crc >>> 8 ^ table[(crc ^ data[pos + 1]) & 255];
      crc = crc >>> 8 ^ table[(crc ^ data[pos + 2]) & 255];
      crc = crc >>> 8 ^ table[(crc ^ data[pos + 3]) & 255];
      crc = crc >>> 8 ^ table[(crc ^ data[pos + 4]) & 255];
      crc = crc >>> 8 ^ table[(crc ^ data[pos + 5]) & 255];
      crc = crc >>> 8 ^ table[(crc ^ data[pos + 6]) & 255];
      crc = crc >>> 8 ^ table[(crc ^ data[pos + 7]) & 255]
    }
    return(crc ^ 4294967295) >>> 0
  };
  Zlib.CRC32.Table = function(table) {
    return USE_TYPEDARRAY ? new Uint32Array(table) : table
  }([0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 
  2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 
  2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 
  2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 
  3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 
  414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918E3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117])
});
if(ZLIB_CRC32_EXPORT) {
  goog.exportSymbol("Zlib.CRC32", Zlib.CRC32);
  goog.exportSymbol("Zlib.CRC32.calc", Zlib.CRC32.calc);
  goog.exportSymbol("Zlib.CRC32.update", Zlib.CRC32.update)
}
;goog.provide("Zlib.Huffman");
goog.scope(function() {
  Zlib.Huffman.buildHuffmanTable = function(lengths) {
    var listSize = lengths.length;
    var maxCodeLength = 0;
    var minCodeLength = Number.POSITIVE_INFINITY;
    var size;
    var table;
    var bitLength;
    var code;
    var skip;
    var reversed;
    var rtemp;
    var i;
    var il;
    var j;
    var jl;
    for(i = 0, il = listSize;i < il;++i) {
      if(lengths[i] > maxCodeLength) {
        maxCodeLength = lengths[i]
      }
      if(lengths[i] < minCodeLength) {
        minCodeLength = lengths[i]
      }
    }
    size = 1 << maxCodeLength;
    table = new (USE_TYPEDARRAY ? Uint32Array : Array)(size);
    for(bitLength = 1, code = 0, skip = 2;bitLength <= maxCodeLength;) {
      for(i = 0;i < listSize;++i) {
        if(lengths[i] === bitLength) {
          for(reversed = 0, rtemp = code, j = 0;j < bitLength;++j) {
            reversed = reversed << 1 | rtemp & 1;
            rtemp >>= 1
          }
          for(j = reversed;j < size;j += skip) {
            table[j] = bitLength << 16 | i
          }
          ++code
        }
      }
      ++bitLength;
      code <<= 1;
      skip <<= 1
    }
    return[table, maxCodeLength, minCodeLength]
  }
});
goog.provide("Zlib.RawInflate");
goog.require("Zlib.Huffman");
var ZLIB_RAW_INFLATE_EXPORT = false;
var ZLIB_RAW_INFLATE_BUFFER_SIZE = 32768;
goog.scope(function() {
  var buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;
  Zlib.RawInflate = function(input, opt_params) {
    this.buffer;
    this.blocks = [];
    this.bufferSize = ZLIB_RAW_INFLATE_BUFFER_SIZE;
    this.totalpos = 0;
    this.ip = 0;
    this.bitsbuf = 0;
    this.bitsbuflen = 0;
    this.input = USE_TYPEDARRAY ? new Uint8Array(input) : input;
    this.output;
    this.op;
    this.bfinal = false;
    this.bufferType = Zlib.RawInflate.BufferType.ADAPTIVE;
    this.resize = false;
    if(opt_params || !(opt_params = {})) {
      if(opt_params["index"]) {
        this.ip = opt_params["index"]
      }
      if(opt_params["bufferSize"]) {
        this.bufferSize = opt_params["bufferSize"]
      }
      if(opt_params["bufferType"]) {
        this.bufferType = opt_params["bufferType"]
      }
      if(opt_params["resize"]) {
        this.resize = opt_params["resize"]
      }
    }
    switch(this.bufferType) {
      case Zlib.RawInflate.BufferType.BLOCK:
        this.op = Zlib.RawInflate.MaxBackwardLength;
        this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.RawInflate.MaxBackwardLength + this.bufferSize + Zlib.RawInflate.MaxCopyLength);
        break;
      case Zlib.RawInflate.BufferType.ADAPTIVE:
        this.op = 0;
        this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(this.bufferSize);
        this.expandBuffer = this.expandBufferAdaptive;
        this.concatBuffer = this.concatBufferDynamic;
        this.decodeHuffman = this.decodeHuffmanAdaptive;
        break;
      default:
        throw new Error("invalid inflate mode");
    }
  };
  Zlib.RawInflate.BufferType = {BLOCK:0, ADAPTIVE:1};
  Zlib.RawInflate.prototype.decompress = function() {
    while(!this.bfinal) {
      this.parseBlock()
    }
    return this.concatBuffer()
  };
  Zlib.RawInflate.MaxBackwardLength = 32768;
  Zlib.RawInflate.MaxCopyLength = 258;
  Zlib.RawInflate.Order = function(table) {
    return USE_TYPEDARRAY ? new Uint16Array(table) : table
  }([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
  Zlib.RawInflate.LengthCodeTable = function(table) {
    return USE_TYPEDARRAY ? new Uint16Array(table) : table
  }([3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258]);
  Zlib.RawInflate.LengthExtraTable = function(table) {
    return USE_TYPEDARRAY ? new Uint8Array(table) : table
  }([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0]);
  Zlib.RawInflate.DistCodeTable = function(table) {
    return USE_TYPEDARRAY ? new Uint16Array(table) : table
  }([1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577]);
  Zlib.RawInflate.DistExtraTable = function(table) {
    return USE_TYPEDARRAY ? new Uint8Array(table) : table
  }([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]);
  Zlib.RawInflate.FixedLiteralLengthTable = function(table) {
    return table
  }(function() {
    var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(288);
    var i, il;
    for(i = 0, il = lengths.length;i < il;++i) {
      lengths[i] = i <= 143 ? 8 : i <= 255 ? 9 : i <= 279 ? 7 : 8
    }
    return buildHuffmanTable(lengths)
  }());
  Zlib.RawInflate.FixedDistanceTable = function(table) {
    return table
  }(function() {
    var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(30);
    var i, il;
    for(i = 0, il = lengths.length;i < il;++i) {
      lengths[i] = 5
    }
    return buildHuffmanTable(lengths)
  }());
  Zlib.RawInflate.prototype.parseBlock = function() {
    var hdr = this.readBits(3);
    if(hdr & 1) {
      this.bfinal = true
    }
    hdr >>>= 1;
    switch(hdr) {
      case 0:
        this.parseUncompressedBlock();
        break;
      case 1:
        this.parseFixedHuffmanBlock();
        break;
      case 2:
        this.parseDynamicHuffmanBlock();
        break;
      default:
        throw new Error("unknown BTYPE: " + hdr);
    }
  };
  Zlib.RawInflate.prototype.readBits = function(length) {
    var bitsbuf = this.bitsbuf;
    var bitsbuflen = this.bitsbuflen;
    var input = this.input;
    var ip = this.ip;
    var octet;
    while(bitsbuflen < length) {
      octet = input[ip++];
      if(octet === void 0) {
        throw new Error("input buffer is broken");
      }
      bitsbuf |= octet << bitsbuflen;
      bitsbuflen += 8
    }
    octet = bitsbuf & (1 << length) - 1;
    bitsbuf >>>= length;
    bitsbuflen -= length;
    this.bitsbuf = bitsbuf;
    this.bitsbuflen = bitsbuflen;
    this.ip = ip;
    return octet
  };
  Zlib.RawInflate.prototype.readCodeByTable = function(table) {
    var bitsbuf = this.bitsbuf;
    var bitsbuflen = this.bitsbuflen;
    var input = this.input;
    var ip = this.ip;
    var codeTable = table[0];
    var maxCodeLength = table[1];
    var octet;
    var codeWithLength;
    var codeLength;
    while(bitsbuflen < maxCodeLength) {
      octet = input[ip++];
      if(octet === void 0) {
        throw new Error("input buffer is broken");
      }
      bitsbuf |= octet << bitsbuflen;
      bitsbuflen += 8
    }
    codeWithLength = codeTable[bitsbuf & (1 << maxCodeLength) - 1];
    codeLength = codeWithLength >>> 16;
    this.bitsbuf = bitsbuf >> codeLength;
    this.bitsbuflen = bitsbuflen - codeLength;
    this.ip = ip;
    return codeWithLength & 65535
  };
  Zlib.RawInflate.prototype.parseUncompressedBlock = function() {
    var input = this.input;
    var ip = this.ip;
    var output = this.output;
    var op = this.op;
    var octet;
    var len;
    var nlen;
    var olength = output.length;
    var preCopy;
    this.bitsbuf = 0;
    this.bitsbuflen = 0;
    octet = input[ip++];
    if(octet === void 0) {
      throw new Error("invalid uncompressed block header: LEN (first byte)");
    }
    len = octet;
    octet = input[ip++];
    if(octet === void 0) {
      throw new Error("invalid uncompressed block header: LEN (second byte)");
    }
    len |= octet << 8;
    octet = input[ip++];
    if(octet === void 0) {
      throw new Error("invalid uncompressed block header: NLEN (first byte)");
    }
    nlen = octet;
    octet = input[ip++];
    if(octet === void 0) {
      throw new Error("invalid uncompressed block header: NLEN (second byte)");
    }
    nlen |= octet << 8;
    if(len === ~nlen) {
      throw new Error("invalid uncompressed block header: length verify");
    }
    if(ip + len > input.length) {
      throw new Error("input buffer is broken");
    }
    switch(this.bufferType) {
      case Zlib.RawInflate.BufferType.BLOCK:
        while(op + len > output.length) {
          preCopy = olength - op;
          len -= preCopy;
          if(USE_TYPEDARRAY) {
            output.set(input.subarray(ip, ip + preCopy), op);
            op += preCopy;
            ip += preCopy
          }else {
            while(preCopy--) {
              output[op++] = input[ip++]
            }
          }
          this.op = op;
          output = this.expandBuffer();
          op = this.op
        }
        break;
      case Zlib.RawInflate.BufferType.ADAPTIVE:
        while(op + len > output.length) {
          output = this.expandBuffer({fixRatio:2})
        }
        break;
      default:
        throw new Error("invalid inflate mode");
    }
    if(USE_TYPEDARRAY) {
      output.set(input.subarray(ip, ip + len), op);
      op += len;
      ip += len
    }else {
      while(len--) {
        output[op++] = input[ip++]
      }
    }
    this.ip = ip;
    this.op = op;
    this.output = output
  };
  Zlib.RawInflate.prototype.parseFixedHuffmanBlock = function() {
    this.decodeHuffman(Zlib.RawInflate.FixedLiteralLengthTable, Zlib.RawInflate.FixedDistanceTable)
  };
  Zlib.RawInflate.prototype.parseDynamicHuffmanBlock = function() {
    var hlit = this.readBits(5) + 257;
    var hdist = this.readBits(5) + 1;
    var hclen = this.readBits(4) + 4;
    var codeLengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.RawInflate.Order.length);
    var codeLengthsTable;
    var litlenLengths;
    var distLengths;
    var i;
    for(i = 0;i < hclen;++i) {
      codeLengths[Zlib.RawInflate.Order[i]] = this.readBits(3)
    }
    codeLengthsTable = buildHuffmanTable(codeLengths);
    function decode(num, table, lengths) {
      var code;
      var prev;
      var repeat;
      var i;
      for(i = 0;i < num;) {
        code = this.readCodeByTable(table);
        switch(code) {
          case 16:
            repeat = 3 + this.readBits(2);
            while(repeat--) {
              lengths[i++] = prev
            }
            break;
          case 17:
            repeat = 3 + this.readBits(3);
            while(repeat--) {
              lengths[i++] = 0
            }
            prev = 0;
            break;
          case 18:
            repeat = 11 + this.readBits(7);
            while(repeat--) {
              lengths[i++] = 0
            }
            prev = 0;
            break;
          default:
            lengths[i++] = code;
            prev = code;
            break
        }
      }
      return lengths
    }
    litlenLengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(hlit);
    distLengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(hdist);
    this.decodeHuffman(buildHuffmanTable(decode.call(this, hlit, codeLengthsTable, litlenLengths)), buildHuffmanTable(decode.call(this, hdist, codeLengthsTable, distLengths)))
  };
  Zlib.RawInflate.prototype.decodeHuffman = function(litlen, dist) {
    var output = this.output;
    var op = this.op;
    this.currentLitlenTable = litlen;
    var olength = output.length - Zlib.RawInflate.MaxCopyLength;
    var code;
    var ti;
    var codeDist;
    var codeLength;
    while((code = this.readCodeByTable(litlen)) !== 256) {
      if(code < 256) {
        if(op >= olength) {
          this.op = op;
          output = this.expandBuffer();
          op = this.op
        }
        output[op++] = code;
        continue
      }
      ti = code - 257;
      codeLength = Zlib.RawInflate.LengthCodeTable[ti];
      if(Zlib.RawInflate.LengthExtraTable[ti] > 0) {
        codeLength += this.readBits(Zlib.RawInflate.LengthExtraTable[ti])
      }
      code = this.readCodeByTable(dist);
      codeDist = Zlib.RawInflate.DistCodeTable[code];
      if(Zlib.RawInflate.DistExtraTable[code] > 0) {
        codeDist += this.readBits(Zlib.RawInflate.DistExtraTable[code])
      }
      if(op >= olength) {
        this.op = op;
        output = this.expandBuffer();
        op = this.op
      }
      while(codeLength--) {
        output[op] = output[op++ - codeDist]
      }
    }
    while(this.bitsbuflen >= 8) {
      this.bitsbuflen -= 8;
      this.ip--
    }
    this.op = op
  };
  Zlib.RawInflate.prototype.decodeHuffmanAdaptive = function(litlen, dist) {
    var output = this.output;
    var op = this.op;
    this.currentLitlenTable = litlen;
    var olength = output.length;
    var code;
    var ti;
    var codeDist;
    var codeLength;
    while((code = this.readCodeByTable(litlen)) !== 256) {
      if(code < 256) {
        if(op >= olength) {
          output = this.expandBuffer();
          olength = output.length
        }
        output[op++] = code;
        continue
      }
      ti = code - 257;
      codeLength = Zlib.RawInflate.LengthCodeTable[ti];
      if(Zlib.RawInflate.LengthExtraTable[ti] > 0) {
        codeLength += this.readBits(Zlib.RawInflate.LengthExtraTable[ti])
      }
      code = this.readCodeByTable(dist);
      codeDist = Zlib.RawInflate.DistCodeTable[code];
      if(Zlib.RawInflate.DistExtraTable[code] > 0) {
        codeDist += this.readBits(Zlib.RawInflate.DistExtraTable[code])
      }
      if(op + codeLength > olength) {
        output = this.expandBuffer();
        olength = output.length
      }
      while(codeLength--) {
        output[op] = output[op++ - codeDist]
      }
    }
    while(this.bitsbuflen >= 8) {
      this.bitsbuflen -= 8;
      this.ip--
    }
    this.op = op
  };
  Zlib.RawInflate.prototype.expandBuffer = function(opt_param) {
    var buffer = new (USE_TYPEDARRAY ? Uint8Array : Array)(this.op - Zlib.RawInflate.MaxBackwardLength);
    var backward = this.op - Zlib.RawInflate.MaxBackwardLength;
    var i;
    var il;
    var output = this.output;
    if(USE_TYPEDARRAY) {
      buffer.set(output.subarray(Zlib.RawInflate.MaxBackwardLength, buffer.length))
    }else {
      for(i = 0, il = buffer.length;i < il;++i) {
        buffer[i] = output[i + Zlib.RawInflate.MaxBackwardLength]
      }
    }
    this.blocks.push(buffer);
    this.totalpos += buffer.length;
    if(USE_TYPEDARRAY) {
      output.set(output.subarray(backward, backward + Zlib.RawInflate.MaxBackwardLength))
    }else {
      for(i = 0;i < Zlib.RawInflate.MaxBackwardLength;++i) {
        output[i] = output[backward + i]
      }
    }
    this.op = Zlib.RawInflate.MaxBackwardLength;
    return output
  };
  Zlib.RawInflate.prototype.expandBufferAdaptive = function(opt_param) {
    var buffer;
    var ratio = this.input.length / this.ip + 1 | 0;
    var maxHuffCode;
    var newSize;
    var maxInflateSize;
    var input = this.input;
    var output = this.output;
    if(opt_param) {
      if(typeof opt_param.fixRatio === "number") {
        ratio = opt_param.fixRatio
      }
      if(typeof opt_param.addRatio === "number") {
        ratio += opt_param.addRatio
      }
    }
    if(ratio < 2) {
      maxHuffCode = (input.length - this.ip) / this.currentLitlenTable[2];
      maxInflateSize = maxHuffCode / 2 * 258 | 0;
      newSize = maxInflateSize < output.length ? output.length + maxInflateSize : output.length << 1
    }else {
      newSize = output.length * ratio
    }
    if(USE_TYPEDARRAY) {
      buffer = new Uint8Array(newSize);
      buffer.set(output)
    }else {
      buffer = output
    }
    this.output = buffer;
    return this.output
  };
  Zlib.RawInflate.prototype.concatBuffer = function() {
    var pos = 0;
    var limit = this.totalpos + (this.op - Zlib.RawInflate.MaxBackwardLength);
    var output = this.output;
    var blocks = this.blocks;
    var block;
    var buffer = new (USE_TYPEDARRAY ? Uint8Array : Array)(limit);
    var i;
    var il;
    var j;
    var jl;
    if(blocks.length === 0) {
      return USE_TYPEDARRAY ? this.output.subarray(Zlib.RawInflate.MaxBackwardLength, this.op) : this.output.slice(Zlib.RawInflate.MaxBackwardLength, this.op)
    }
    for(i = 0, il = blocks.length;i < il;++i) {
      block = blocks[i];
      for(j = 0, jl = block.length;j < jl;++j) {
        buffer[pos++] = block[j]
      }
    }
    for(i = Zlib.RawInflate.MaxBackwardLength, il = this.op;i < il;++i) {
      buffer[pos++] = output[i]
    }
    this.blocks = [];
    this.buffer = buffer;
    return this.buffer
  };
  Zlib.RawInflate.prototype.concatBufferDynamic = function() {
    var buffer;
    var op = this.op;
    if(USE_TYPEDARRAY) {
      if(this.resize) {
        buffer = new Uint8Array(op);
        buffer.set(this.output.subarray(0, op))
      }else {
        buffer = this.output.subarray(0, op)
      }
    }else {
      if(this.output.length > op) {
        this.output.length = op
      }
      buffer = this.output
    }
    this.buffer = buffer;
    return this.buffer
  };
  if(ZLIB_RAW_INFLATE_EXPORT) {
    goog.exportSymbol("Zlib.RawInflate", Zlib.RawInflate);
    goog.exportSymbol("Zlib.RawInflate.prototype.decompress", Zlib.RawInflate.prototype.decompress)
  }
});
goog.provide("Zlib.Heap");
goog.scope(function() {
  Zlib.Heap = function(length) {
    this.buffer = new (USE_TYPEDARRAY ? Uint16Array : Array)(length * 2);
    this.length = 0
  };
  Zlib.Heap.prototype.getParent = function(index) {
    return((index - 2) / 4 | 0) * 2
  };
  Zlib.Heap.prototype.getChild = function(index) {
    return 2 * index + 2
  };
  Zlib.Heap.prototype.push = function(index, value) {
    var current, parent, heap = this.buffer, swap;
    current = this.length;
    heap[this.length++] = value;
    heap[this.length++] = index;
    while(current > 0) {
      parent = this.getParent(current);
      if(heap[current] > heap[parent]) {
        swap = heap[current];
        heap[current] = heap[parent];
        heap[parent] = swap;
        swap = heap[current + 1];
        heap[current + 1] = heap[parent + 1];
        heap[parent + 1] = swap;
        current = parent
      }else {
        break
      }
    }
    return this.length
  };
  Zlib.Heap.prototype.pop = function() {
    var index, value, heap = this.buffer, swap, current, parent;
    value = heap[0];
    index = heap[1];
    this.length -= 2;
    heap[0] = heap[this.length];
    heap[1] = heap[this.length + 1];
    parent = 0;
    while(true) {
      current = this.getChild(parent);
      if(current >= this.length) {
        break
      }
      if(current + 2 < this.length && heap[current + 2] > heap[current]) {
        current += 2
      }
      if(heap[current] > heap[parent]) {
        swap = heap[parent];
        heap[parent] = heap[current];
        heap[current] = swap;
        swap = heap[parent + 1];
        heap[parent + 1] = heap[current + 1];
        heap[current + 1] = swap
      }else {
        break
      }
      parent = current
    }
    return{index:index, value:value, length:this.length}
  }
});
goog.provide("Zlib.BitStream");
goog.scope(function() {
  Zlib.BitStream = function(buffer, bufferPosition) {
    this.index = typeof bufferPosition === "number" ? bufferPosition : 0;
    this.bitindex = 0;
    this.buffer = buffer instanceof (USE_TYPEDARRAY ? Uint8Array : Array) ? buffer : new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.BitStream.DefaultBlockSize);
    if(this.buffer.length * 2 <= this.index) {
      throw new Error("invalid index");
    }else {
      if(this.buffer.length <= this.index) {
        this.expandBuffer()
      }
    }
  };
  Zlib.BitStream.DefaultBlockSize = 32768;
  Zlib.BitStream.prototype.expandBuffer = function() {
    var oldbuf = this.buffer;
    var i;
    var il = oldbuf.length;
    var buffer = new (USE_TYPEDARRAY ? Uint8Array : Array)(il << 1);
    if(USE_TYPEDARRAY) {
      buffer.set(oldbuf)
    }else {
      for(i = 0;i < il;++i) {
        buffer[i] = oldbuf[i]
      }
    }
    return this.buffer = buffer
  };
  Zlib.BitStream.prototype.writeBits = function(number, n, reverse) {
    var buffer = this.buffer;
    var index = this.index;
    var bitindex = this.bitindex;
    var current = buffer[index];
    var i;
    function rev32_(n) {
      return Zlib.BitStream.ReverseTable[n & 255] << 24 | Zlib.BitStream.ReverseTable[n >>> 8 & 255] << 16 | Zlib.BitStream.ReverseTable[n >>> 16 & 255] << 8 | Zlib.BitStream.ReverseTable[n >>> 24 & 255]
    }
    if(reverse && n > 1) {
      number = n > 8 ? rev32_(number) >> 32 - n : Zlib.BitStream.ReverseTable[number] >> 8 - n
    }
    if(n + bitindex < 8) {
      current = current << n | number;
      bitindex += n
    }else {
      for(i = 0;i < n;++i) {
        current = current << 1 | number >> n - i - 1 & 1;
        if(++bitindex === 8) {
          bitindex = 0;
          buffer[index++] = Zlib.BitStream.ReverseTable[current];
          current = 0;
          if(index === buffer.length) {
            buffer = this.expandBuffer()
          }
        }
      }
    }
    buffer[index] = current;
    this.buffer = buffer;
    this.bitindex = bitindex;
    this.index = index
  };
  Zlib.BitStream.prototype.finish = function() {
    var buffer = this.buffer;
    var index = this.index;
    var output;
    if(this.bitindex > 0) {
      buffer[index] <<= 8 - this.bitindex;
      buffer[index] = Zlib.BitStream.ReverseTable[buffer[index]];
      index++
    }
    if(USE_TYPEDARRAY) {
      output = buffer.subarray(0, index)
    }else {
      buffer.length = index;
      output = buffer
    }
    return output
  };
  Zlib.BitStream.ReverseTable = function(table) {
    return table
  }(function() {
    var table = new (USE_TYPEDARRAY ? Uint8Array : Array)(256);
    var i;
    var il;
    for(i = 0;i < 256;++i) {
      table[i] = function(n) {
        var r = n;
        var s = 7;
        for(n >>>= 1;n;n >>>= 1) {
          r <<= 1;
          r |= n & 1;
          --s
        }
        return(r << s & 255) >>> 0
      }(i)
    }
    return table
  }())
});
goog.provide("Zlib.RawDeflate");
var ZLIB_RAWDEFLATE_EXPORT = false;
goog.require("Zlib.BitStream");
goog.require("Zlib.Heap");
goog.scope(function() {
  Zlib.RawDeflate = function(input, opt_params) {
    this.compressionType = Zlib.RawDeflate.CompressionType.DYNAMIC;
    this.lazy = 0;
    this.freqsLitLen;
    this.freqsDist;
    this.input = input;
    this.output;
    this.op = 0;
    if(opt_params) {
      if(opt_params["lazy"]) {
        this.lazy = opt_params["lazy"]
      }
      if(typeof opt_params["compressionType"] === "number") {
        this.compressionType = opt_params["compressionType"]
      }
      if(opt_params["outputBuffer"]) {
        this.output = USE_TYPEDARRAY && opt_params["outputBuffer"] instanceof Array ? new Uint8Array(opt_params["outputBuffer"]) : opt_params["outputBuffer"]
      }
      if(typeof opt_params["outputIndex"] === "number") {
        this.op = opt_params["outputIndex"]
      }
    }
    if(!this.output) {
      this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(32768)
    }
  };
  Zlib.RawDeflate.CompressionType = {NONE:0, FIXED:1, DYNAMIC:2, RESERVED:3};
  Zlib.RawDeflate.Lz77MinLength = 3;
  Zlib.RawDeflate.Lz77MaxLength = 258;
  Zlib.RawDeflate.WindowSize = 32768;
  Zlib.RawDeflate.MaxCodeLength = 16;
  Zlib.RawDeflate.HUFMAX = 286;
  Zlib.RawDeflate.FixedHuffmanTable = function() {
    var table = [], i;
    for(i = 0;i < 288;i++) {
      switch(true) {
        case i <= 143:
          table.push([i + 48, 8]);
          break;
        case i <= 255:
          table.push([i - 144 + 400, 9]);
          break;
        case i <= 279:
          table.push([i - 256 + 0, 7]);
          break;
        case i <= 287:
          table.push([i - 280 + 192, 8]);
          break;
        default:
          throw"invalid literal: " + i;
      }
    }
    return table
  }();
  Zlib.RawDeflate.prototype.compress = function() {
    var blockArray;
    var position;
    var length;
    var input = this.input;
    switch(this.compressionType) {
      case Zlib.RawDeflate.CompressionType.NONE:
        for(position = 0, length = input.length;position < length;) {
          blockArray = USE_TYPEDARRAY ? input.subarray(position, position + 65535) : input.slice(position, position + 65535);
          position += blockArray.length;
          this.makeNocompressBlock(blockArray, position === length)
        }
        break;
      case Zlib.RawDeflate.CompressionType.FIXED:
        this.output = this.makeFixedHuffmanBlock(input, true);
        this.op = this.output.length;
        break;
      case Zlib.RawDeflate.CompressionType.DYNAMIC:
        this.output = this.makeDynamicHuffmanBlock(input, true);
        this.op = this.output.length;
        break;
      default:
        throw"invalid compression type";
    }
    return this.output
  };
  Zlib.RawDeflate.prototype.makeNocompressBlock = function(blockArray, isFinalBlock) {
    var bfinal;
    var btype;
    var len;
    var nlen;
    var i;
    var il;
    var output = this.output;
    var op = this.op;
    if(USE_TYPEDARRAY) {
      output = new Uint8Array(this.output.buffer);
      while(output.length <= op + blockArray.length + 5) {
        output = new Uint8Array(output.length << 1)
      }
      output.set(this.output)
    }
    bfinal = isFinalBlock ? 1 : 0;
    btype = Zlib.RawDeflate.CompressionType.NONE;
    output[op++] = bfinal | btype << 1;
    len = blockArray.length;
    nlen = ~len + 65536 & 65535;
    output[op++] = len & 255;
    output[op++] = len >>> 8 & 255;
    output[op++] = nlen & 255;
    output[op++] = nlen >>> 8 & 255;
    if(USE_TYPEDARRAY) {
      output.set(blockArray, op);
      op += blockArray.length;
      output = output.subarray(0, op)
    }else {
      for(i = 0, il = blockArray.length;i < il;++i) {
        output[op++] = blockArray[i]
      }
      output.length = op
    }
    this.op = op;
    this.output = output;
    return output
  };
  Zlib.RawDeflate.prototype.makeFixedHuffmanBlock = function(blockArray, isFinalBlock) {
    var stream = new Zlib.BitStream(new Uint8Array(this.output.buffer), this.op);
    var bfinal;
    var btype;
    var data;
    bfinal = isFinalBlock ? 1 : 0;
    btype = Zlib.RawDeflate.CompressionType.FIXED;
    stream.writeBits(bfinal, 1, true);
    stream.writeBits(btype, 2, true);
    data = this.lz77(blockArray);
    this.fixedHuffman(data, stream);
    return stream.finish()
  };
  Zlib.RawDeflate.prototype.makeDynamicHuffmanBlock = function(blockArray, isFinalBlock) {
    var stream = new Zlib.BitStream(new Uint8Array(this.output), this.op);
    var bfinal;
    var btype;
    var data;
    var hlit;
    var hdist;
    var hclen;
    var hclenOrder = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
    var litLenLengths;
    var litLenCodes;
    var distLengths;
    var distCodes;
    var treeSymbols;
    var treeLengths;
    var transLengths = new Array(19);
    var treeCodes;
    var code;
    var bitlen;
    var i;
    var il;
    bfinal = isFinalBlock ? 1 : 0;
    btype = Zlib.RawDeflate.CompressionType.DYNAMIC;
    stream.writeBits(bfinal, 1, true);
    stream.writeBits(btype, 2, true);
    data = this.lz77(blockArray);
    litLenLengths = this.getLengths_(this.freqsLitLen, 15);
    litLenCodes = this.getCodesFromLengths_(litLenLengths);
    distLengths = this.getLengths_(this.freqsDist, 7);
    distCodes = this.getCodesFromLengths_(distLengths);
    for(hlit = 286;hlit > 257 && litLenLengths[hlit - 1] === 0;hlit--) {
    }
    for(hdist = 30;hdist > 1 && distLengths[hdist - 1] === 0;hdist--) {
    }
    treeSymbols = this.getTreeSymbols_(hlit, litLenLengths, hdist, distLengths);
    treeLengths = this.getLengths_(treeSymbols.freqs, 7);
    for(i = 0;i < 19;i++) {
      transLengths[i] = treeLengths[hclenOrder[i]]
    }
    for(hclen = 19;hclen > 4 && transLengths[hclen - 1] === 0;hclen--) {
    }
    treeCodes = this.getCodesFromLengths_(treeLengths);
    stream.writeBits(hlit - 257, 5, true);
    stream.writeBits(hdist - 1, 5, true);
    stream.writeBits(hclen - 4, 4, true);
    for(i = 0;i < hclen;i++) {
      stream.writeBits(transLengths[i], 3, true)
    }
    for(i = 0, il = treeSymbols.codes.length;i < il;i++) {
      code = treeSymbols.codes[i];
      stream.writeBits(treeCodes[code], treeLengths[code], true);
      if(code >= 16) {
        i++;
        switch(code) {
          case 16:
            bitlen = 2;
            break;
          case 17:
            bitlen = 3;
            break;
          case 18:
            bitlen = 7;
            break;
          default:
            throw"invalid code: " + code;
        }
        stream.writeBits(treeSymbols.codes[i], bitlen, true)
      }
    }
    this.dynamicHuffman(data, [litLenCodes, litLenLengths], [distCodes, distLengths], stream);
    return stream.finish()
  };
  Zlib.RawDeflate.prototype.dynamicHuffman = function(dataArray, litLen, dist, stream) {
    var index;
    var length;
    var literal;
    var code;
    var litLenCodes;
    var litLenLengths;
    var distCodes;
    var distLengths;
    litLenCodes = litLen[0];
    litLenLengths = litLen[1];
    distCodes = dist[0];
    distLengths = dist[1];
    for(index = 0, length = dataArray.length;index < length;++index) {
      literal = dataArray[index];
      stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);
      if(literal > 256) {
        stream.writeBits(dataArray[++index], dataArray[++index], true);
        code = dataArray[++index];
        stream.writeBits(distCodes[code], distLengths[code], true);
        stream.writeBits(dataArray[++index], dataArray[++index], true)
      }else {
        if(literal === 256) {
          break
        }
      }
    }
    return stream
  };
  Zlib.RawDeflate.prototype.fixedHuffman = function(dataArray, stream) {
    var index;
    var length;
    var literal;
    for(index = 0, length = dataArray.length;index < length;index++) {
      literal = dataArray[index];
      Zlib.BitStream.prototype.writeBits.apply(stream, Zlib.RawDeflate.FixedHuffmanTable[literal]);
      if(literal > 256) {
        stream.writeBits(dataArray[++index], dataArray[++index], true);
        stream.writeBits(dataArray[++index], 5);
        stream.writeBits(dataArray[++index], dataArray[++index], true)
      }else {
        if(literal === 256) {
          break
        }
      }
    }
    return stream
  };
  Zlib.RawDeflate.Lz77Match = function(length, backwardDistance) {
    this.length = length;
    this.backwardDistance = backwardDistance
  };
  Zlib.RawDeflate.Lz77Match.LengthCodeTable = function(table) {
    return USE_TYPEDARRAY ? new Uint32Array(table) : table
  }(function() {
    var table = [];
    var i;
    var c;
    for(i = 3;i <= 258;i++) {
      c = code(i);
      table[i] = c[2] << 24 | c[1] << 16 | c[0]
    }
    function code(length) {
      switch(true) {
        case length === 3:
          return[257, length - 3, 0];
          break;
        case length === 4:
          return[258, length - 4, 0];
          break;
        case length === 5:
          return[259, length - 5, 0];
          break;
        case length === 6:
          return[260, length - 6, 0];
          break;
        case length === 7:
          return[261, length - 7, 0];
          break;
        case length === 8:
          return[262, length - 8, 0];
          break;
        case length === 9:
          return[263, length - 9, 0];
          break;
        case length === 10:
          return[264, length - 10, 0];
          break;
        case length <= 12:
          return[265, length - 11, 1];
          break;
        case length <= 14:
          return[266, length - 13, 1];
          break;
        case length <= 16:
          return[267, length - 15, 1];
          break;
        case length <= 18:
          return[268, length - 17, 1];
          break;
        case length <= 22:
          return[269, length - 19, 2];
          break;
        case length <= 26:
          return[270, length - 23, 2];
          break;
        case length <= 30:
          return[271, length - 27, 2];
          break;
        case length <= 34:
          return[272, length - 31, 2];
          break;
        case length <= 42:
          return[273, length - 35, 3];
          break;
        case length <= 50:
          return[274, length - 43, 3];
          break;
        case length <= 58:
          return[275, length - 51, 3];
          break;
        case length <= 66:
          return[276, length - 59, 3];
          break;
        case length <= 82:
          return[277, length - 67, 4];
          break;
        case length <= 98:
          return[278, length - 83, 4];
          break;
        case length <= 114:
          return[279, length - 99, 4];
          break;
        case length <= 130:
          return[280, length - 115, 4];
          break;
        case length <= 162:
          return[281, length - 131, 5];
          break;
        case length <= 194:
          return[282, length - 163, 5];
          break;
        case length <= 226:
          return[283, length - 195, 5];
          break;
        case length <= 257:
          return[284, length - 227, 5];
          break;
        case length === 258:
          return[285, length - 258, 0];
          break;
        default:
          throw"invalid length: " + length;
      }
    }
    return table
  }());
  Zlib.RawDeflate.Lz77Match.prototype.getDistanceCode_ = function(dist) {
    var r;
    switch(true) {
      case dist === 1:
        r = [0, dist - 1, 0];
        break;
      case dist === 2:
        r = [1, dist - 2, 0];
        break;
      case dist === 3:
        r = [2, dist - 3, 0];
        break;
      case dist === 4:
        r = [3, dist - 4, 0];
        break;
      case dist <= 6:
        r = [4, dist - 5, 1];
        break;
      case dist <= 8:
        r = [5, dist - 7, 1];
        break;
      case dist <= 12:
        r = [6, dist - 9, 2];
        break;
      case dist <= 16:
        r = [7, dist - 13, 2];
        break;
      case dist <= 24:
        r = [8, dist - 17, 3];
        break;
      case dist <= 32:
        r = [9, dist - 25, 3];
        break;
      case dist <= 48:
        r = [10, dist - 33, 4];
        break;
      case dist <= 64:
        r = [11, dist - 49, 4];
        break;
      case dist <= 96:
        r = [12, dist - 65, 5];
        break;
      case dist <= 128:
        r = [13, dist - 97, 5];
        break;
      case dist <= 192:
        r = [14, dist - 129, 6];
        break;
      case dist <= 256:
        r = [15, dist - 193, 6];
        break;
      case dist <= 384:
        r = [16, dist - 257, 7];
        break;
      case dist <= 512:
        r = [17, dist - 385, 7];
        break;
      case dist <= 768:
        r = [18, dist - 513, 8];
        break;
      case dist <= 1024:
        r = [19, dist - 769, 8];
        break;
      case dist <= 1536:
        r = [20, dist - 1025, 9];
        break;
      case dist <= 2048:
        r = [21, dist - 1537, 9];
        break;
      case dist <= 3072:
        r = [22, dist - 2049, 10];
        break;
      case dist <= 4096:
        r = [23, dist - 3073, 10];
        break;
      case dist <= 6144:
        r = [24, dist - 4097, 11];
        break;
      case dist <= 8192:
        r = [25, dist - 6145, 11];
        break;
      case dist <= 12288:
        r = [26, dist - 8193, 12];
        break;
      case dist <= 16384:
        r = [27, dist - 12289, 12];
        break;
      case dist <= 24576:
        r = [28, dist - 16385, 13];
        break;
      case dist <= 32768:
        r = [29, dist - 24577, 13];
        break;
      default:
        throw"invalid distance";
    }
    return r
  };
  Zlib.RawDeflate.Lz77Match.prototype.toLz77Array = function() {
    var length = this.length;
    var dist = this.backwardDistance;
    var codeArray = [];
    var pos = 0;
    var code;
    code = Zlib.RawDeflate.Lz77Match.LengthCodeTable[length];
    codeArray[pos++] = code & 65535;
    codeArray[pos++] = code >> 16 & 255;
    codeArray[pos++] = code >> 24;
    code = this.getDistanceCode_(dist);
    codeArray[pos++] = code[0];
    codeArray[pos++] = code[1];
    codeArray[pos++] = code[2];
    return codeArray
  };
  Zlib.RawDeflate.prototype.lz77 = function(dataArray) {
    var position;
    var length;
    var i;
    var il;
    var matchKey;
    var table = {};
    var windowSize = Zlib.RawDeflate.WindowSize;
    var matchList;
    var longestMatch;
    var prevMatch;
    var lz77buf = USE_TYPEDARRAY ? new Uint16Array(dataArray.length * 2) : new Array;
    var pos = 0;
    var skipLength = 0;
    var freqsLitLen = new (USE_TYPEDARRAY ? Uint32Array : Array)(286);
    var freqsDist = new (USE_TYPEDARRAY ? Uint32Array : Array)(30);
    var lazy = this.lazy;
    var tmp;
    if(!USE_TYPEDARRAY) {
      for(i = 0;i <= 285;) {
        freqsLitLen[i++] = 0
      }
      for(i = 0;i <= 29;) {
        freqsDist[i++] = 0
      }
    }
    freqsLitLen[256] = 1;
    function writeMatch(match, offset) {
      var lz77Array = match.toLz77Array();
      var i;
      var il;
      for(i = 0, il = lz77Array.length;i < il;++i) {
        lz77buf[pos++] = lz77Array[i]
      }
      freqsLitLen[lz77Array[0]]++;
      freqsDist[lz77Array[3]]++;
      skipLength = match.length + offset - 1;
      prevMatch = null
    }
    for(position = 0, length = dataArray.length;position < length;++position) {
      for(matchKey = 0, i = 0, il = Zlib.RawDeflate.Lz77MinLength;i < il;++i) {
        if(position + i === length) {
          break
        }
        matchKey = matchKey << 8 | dataArray[position + i]
      }
      if(table[matchKey] === void 0) {
        table[matchKey] = []
      }
      matchList = table[matchKey];
      if(skipLength-- > 0) {
        matchList.push(position);
        continue
      }
      while(matchList.length > 0 && position - matchList[0] > windowSize) {
        matchList.shift()
      }
      if(position + Zlib.RawDeflate.Lz77MinLength >= length) {
        if(prevMatch) {
          writeMatch(prevMatch, -1)
        }
        for(i = 0, il = length - position;i < il;++i) {
          tmp = dataArray[position + i];
          lz77buf[pos++] = tmp;
          ++freqsLitLen[tmp]
        }
        break
      }
      if(matchList.length > 0) {
        longestMatch = this.searchLongestMatch_(dataArray, position, matchList);
        if(prevMatch) {
          if(prevMatch.length < longestMatch.length) {
            tmp = dataArray[position - 1];
            lz77buf[pos++] = tmp;
            ++freqsLitLen[tmp];
            writeMatch(longestMatch, 0)
          }else {
            writeMatch(prevMatch, -1)
          }
        }else {
          if(longestMatch.length < lazy) {
            prevMatch = longestMatch
          }else {
            writeMatch(longestMatch, 0)
          }
        }
      }else {
        if(prevMatch) {
          writeMatch(prevMatch, -1)
        }else {
          tmp = dataArray[position];
          lz77buf[pos++] = tmp;
          ++freqsLitLen[tmp]
        }
      }
      matchList.push(position)
    }
    lz77buf[pos++] = 256;
    freqsLitLen[256]++;
    this.freqsLitLen = freqsLitLen;
    this.freqsDist = freqsDist;
    return USE_TYPEDARRAY ? lz77buf.subarray(0, pos) : lz77buf
  };
  Zlib.RawDeflate.prototype.searchLongestMatch_ = function(data, position, matchList) {
    var match, currentMatch, matchMax = 0, matchLength, i, j, l, dl = data.length;
    permatch:for(i = 0, l = matchList.length;i < l;i++) {
      match = matchList[l - i - 1];
      matchLength = Zlib.RawDeflate.Lz77MinLength;
      if(matchMax > Zlib.RawDeflate.Lz77MinLength) {
        for(j = matchMax;j > Zlib.RawDeflate.Lz77MinLength;j--) {
          if(data[match + j - 1] !== data[position + j - 1]) {
            continue permatch
          }
        }
        matchLength = matchMax
      }
      while(matchLength < Zlib.RawDeflate.Lz77MaxLength && position + matchLength < dl && data[match + matchLength] === data[position + matchLength]) {
        ++matchLength
      }
      if(matchLength > matchMax) {
        currentMatch = match;
        matchMax = matchLength
      }
      if(matchLength === Zlib.RawDeflate.Lz77MaxLength) {
        break
      }
    }
    return new Zlib.RawDeflate.Lz77Match(matchMax, position - currentMatch)
  };
  Zlib.RawDeflate.prototype.getTreeSymbols_ = function(hlit, litlenLengths, hdist, distLengths) {
    var src = new (USE_TYPEDARRAY ? Uint32Array : Array)(hlit + hdist), i, j, runLength, l, length, result = new (USE_TYPEDARRAY ? Uint32Array : Array)(286 + 30), nResult, rpt, freqs = new (USE_TYPEDARRAY ? Uint8Array : Array)(19);
    j = 0;
    for(i = 0;i < hlit;i++) {
      src[j++] = litlenLengths[i]
    }
    for(i = 0;i < hdist;i++) {
      src[j++] = distLengths[i]
    }
    if(!USE_TYPEDARRAY) {
      for(i = 0, l = freqs.length;i < l;++i) {
        freqs[i] = 0
      }
    }
    nResult = 0;
    for(i = 0, l = src.length;i < l;i += j) {
      for(j = 1;i + j < l && src[i + j] === src[i];++j) {
      }
      runLength = j;
      if(src[i] === 0) {
        if(runLength < 3) {
          while(runLength-- > 0) {
            result[nResult++] = 0;
            freqs[0]++
          }
        }else {
          while(runLength > 0) {
            rpt = runLength < 138 ? runLength : 138;
            if(rpt > runLength - 3 && rpt < runLength) {
              rpt = runLength - 3
            }
            if(rpt <= 10) {
              result[nResult++] = 17;
              result[nResult++] = rpt - 3;
              freqs[17]++
            }else {
              result[nResult++] = 18;
              result[nResult++] = rpt - 11;
              freqs[18]++
            }
            runLength -= rpt
          }
        }
      }else {
        result[nResult++] = src[i];
        freqs[src[i]]++;
        runLength--;
        if(runLength < 3) {
          while(runLength-- > 0) {
            result[nResult++] = src[i];
            freqs[src[i]]++
          }
        }else {
          while(runLength > 0) {
            rpt = runLength < 6 ? runLength : 6;
            if(rpt > runLength - 3 && rpt < runLength) {
              rpt = runLength - 3
            }
            result[nResult++] = 16;
            result[nResult++] = rpt - 3;
            freqs[16]++;
            runLength -= rpt
          }
        }
      }
    }
    return{codes:USE_TYPEDARRAY ? result.subarray(0, nResult) : result.slice(0, nResult), freqs:freqs}
  };
  Zlib.RawDeflate.prototype.getLengths_ = function(freqs, limit) {
    var nSymbols = freqs.length;
    var heap = new Zlib.Heap(2 * Zlib.RawDeflate.HUFMAX);
    var length = new (USE_TYPEDARRAY ? Uint8Array : Array)(nSymbols);
    var nodes;
    var values;
    var codeLength;
    var i;
    var il;
    var freqsZero = [];
    if(!USE_TYPEDARRAY) {
      for(i = 0;i < nSymbols;i++) {
        length[i] = 0
      }
    }
    for(i = 0;i < nSymbols;++i) {
      if(freqs[i] > 0) {
        heap.push(i, freqs[i])
      }
    }
    nodes = new Array(heap.length / 2);
    values = new (USE_TYPEDARRAY ? Uint32Array : Array)(heap.length / 2);
    if(nodes.length === 1) {
      length[heap.pop().index] = 1;
      return length
    }
    for(i = 0, il = heap.length / 2;i < il;++i) {
      nodes[i] = heap.pop();
      values[i] = nodes[i].value
    }
    codeLength = this.reversePackageMerge_(values, values.length, limit);
    for(i = 0, il = nodes.length;i < il;++i) {
      length[nodes[i].index] = codeLength[i]
    }
    return length
  };
  Zlib.RawDeflate.prototype.reversePackageMerge_ = function(freqs, symbols, limit) {
    var minimumCost = new (USE_TYPEDARRAY ? Uint16Array : Array)(limit);
    var flag = new (USE_TYPEDARRAY ? Uint8Array : Array)(limit);
    var codeLength = new (USE_TYPEDARRAY ? Uint8Array : Array)(symbols);
    var value = new Array(limit);
    var type = new Array(limit);
    var currentPosition = new Array(limit);
    var excess = (1 << limit) - symbols;
    var half = 1 << limit - 1;
    var i;
    var j;
    var t;
    var weight;
    var next;
    function takePackage(j) {
      var x = type[j][currentPosition[j]];
      if(x === symbols) {
        takePackage(j + 1);
        takePackage(j + 1)
      }else {
        --codeLength[x]
      }
      ++currentPosition[j]
    }
    minimumCost[limit - 1] = symbols;
    for(j = 0;j < limit;++j) {
      if(excess < half) {
        flag[j] = 0
      }else {
        flag[j] = 1;
        excess -= half
      }
      excess <<= 1;
      minimumCost[limit - 2 - j] = (minimumCost[limit - 1 - j] / 2 | 0) + symbols
    }
    minimumCost[0] = flag[0];
    value[0] = new Array(minimumCost[0]);
    type[0] = new Array(minimumCost[0]);
    for(j = 1;j < limit;++j) {
      if(minimumCost[j] > 2 * minimumCost[j - 1] + flag[j]) {
        minimumCost[j] = 2 * minimumCost[j - 1] + flag[j]
      }
      value[j] = new Array(minimumCost[j]);
      type[j] = new Array(minimumCost[j])
    }
    for(i = 0;i < symbols;++i) {
      codeLength[i] = limit
    }
    for(t = 0;t < minimumCost[limit - 1];++t) {
      value[limit - 1][t] = freqs[t];
      type[limit - 1][t] = t
    }
    for(i = 0;i < limit;++i) {
      currentPosition[i] = 0
    }
    if(flag[limit - 1] === 1) {
      --codeLength[0];
      ++currentPosition[limit - 1]
    }
    for(j = limit - 2;j >= 0;--j) {
      i = 0;
      weight = 0;
      next = currentPosition[j + 1];
      for(t = 0;t < minimumCost[j];t++) {
        weight = value[j + 1][next] + value[j + 1][next + 1];
        if(weight > freqs[i]) {
          value[j][t] = weight;
          type[j][t] = symbols;
          next += 2
        }else {
          value[j][t] = freqs[i];
          type[j][t] = i;
          ++i
        }
      }
      currentPosition[j] = 0;
      if(flag[j] === 1) {
        takePackage(j)
      }
    }
    return codeLength
  };
  Zlib.RawDeflate.prototype.getCodesFromLengths_ = function(lengths) {
    var codes = new (USE_TYPEDARRAY ? Uint16Array : Array)(lengths.length), count = [], startCode = [], code = 0, i, il, j, m;
    for(i = 0, il = lengths.length;i < il;i++) {
      count[lengths[i]] = (count[lengths[i]] | 0) + 1
    }
    for(i = 1, il = Zlib.RawDeflate.MaxCodeLength;i <= il;i++) {
      startCode[i] = code;
      code += count[i] | 0;
      code <<= 1
    }
    for(i = 0, il = lengths.length;i < il;i++) {
      code = startCode[lengths[i]];
      startCode[lengths[i]] += 1;
      codes[i] = 0;
      for(j = 0, m = lengths[i];j < m;j++) {
        codes[i] = codes[i] << 1 | code & 1;
        code >>>= 1
      }
    }
    return codes
  };
  if(ZLIB_RAWDEFLATE_EXPORT) {
    goog.exportSymbol("Zlib.RawDeflate", Zlib.RawDeflate);
    goog.exportSymbol("Zlib.RawDeflate.CompressionType", Zlib.RawDeflate.CompressionType);
    goog.exportSymbol("Zlib.RawDeflate.CompressionType.NONE", Zlib.RawDeflate.CompressionType.NONE);
    goog.exportSymbol("Zlib.RawDeflate.CompressionType.FIXED", Zlib.RawDeflate.CompressionType.FIXED);
    goog.exportSymbol("Zlib.RawDeflate.CompressionType.DYNAMIC", Zlib.RawDeflate.CompressionType.DYNAMIC)
  }
});
goog.provide("Zlib.Gzip");
goog.require("Zlib.CRC32");
goog.require("Zlib.RawDeflate");
var ZLIB_GZIP_EXPORT = false;
goog.scope(function() {
  Zlib.Gzip = function(input, opt_params) {
    this.input = input;
    this.ip = 0;
    this.output;
    this.op = 0;
    this.flags = {};
    this.filename;
    this.comment;
    this.deflateOptions;
    if(opt_params) {
      if(opt_params["flags"]) {
        this.flags = opt_params["flags"]
      }
      if(typeof opt_params["filename"] === "string") {
        this.filename = opt_params["filename"]
      }
      if(typeof opt_params["comment"] === "string") {
        this.comment = opt_params["comment"]
      }
      if(opt_params["deflateOptions"]) {
        this.deflateOptions = opt_params["deflateOptions"]
      }
    }
    if(!this.deflateOptions) {
      this.deflateOptions = {}
    }
  };
  Zlib.Gzip.DefaultBufferSize = 32768;
  Zlib.Gzip.prototype.compress = function() {
    var flg;
    var mtime;
    var crc16;
    var crc32;
    var rawdeflate;
    var c;
    var i;
    var il;
    var output = new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.Gzip.DefaultBufferSize);
    var op = 0;
    var input = this.input;
    var ip = this.ip;
    var filename = this.filename;
    var comment = this.comment;
    output[op++] = 31;
    output[op++] = 139;
    output[op++] = 8;
    flg = 0;
    if(this.flags["fname"]) {
      flg |= Zlib.Gzip.FlagsMask.FNAME
    }
    if(this.flags["fcomment"]) {
      flg |= Zlib.Gzip.FlagsMask.FCOMMENT
    }
    if(this.flags["fhcrc"]) {
      flg |= Zlib.Gzip.FlagsMask.FHCRC
    }
    output[op++] = flg;
    mtime = (Date.now ? Date.now() : +new Date) / 1E3 | 0;
    output[op++] = mtime & 255;
    output[op++] = mtime >>> 8 & 255;
    output[op++] = mtime >>> 16 & 255;
    output[op++] = mtime >>> 24 & 255;
    output[op++] = 0;
    output[op++] = Zlib.Gzip.OperatingSystem.UNKNOWN;
    if(this.flags["fname"] !== void 0) {
      for(i = 0, il = filename.length;i < il;++i) {
        c = filename.charCodeAt(i);
        if(c > 255) {
          output[op++] = c >>> 8 & 255
        }
        output[op++] = c & 255
      }
      output[op++] = 0
    }
    if(this.flags["comment"]) {
      for(i = 0, il = comment.length;i < il;++i) {
        c = comment.charCodeAt(i);
        if(c > 255) {
          output[op++] = c >>> 8 & 255
        }
        output[op++] = c & 255
      }
      output[op++] = 0
    }
    if(this.flags["fhcrc"]) {
      crc16 = Zlib.CRC32.calc(output, 0, op) & 65535;
      output[op++] = crc16 & 255;
      output[op++] = crc16 >>> 8 & 255
    }
    this.deflateOptions["outputBuffer"] = output;
    this.deflateOptions["outputIndex"] = op;
    rawdeflate = new Zlib.RawDeflate(input, this.deflateOptions);
    output = rawdeflate.compress();
    op = rawdeflate.op;
    if(USE_TYPEDARRAY) {
      if(op + 8 > output.buffer.byteLength) {
        this.output = new Uint8Array(op + 8);
        this.output.set(new Uint8Array(output.buffer));
        output = this.output
      }else {
        output = new Uint8Array(output.buffer)
      }
    }
    crc32 = Zlib.CRC32.calc(input);
    output[op++] = crc32 & 255;
    output[op++] = crc32 >>> 8 & 255;
    output[op++] = crc32 >>> 16 & 255;
    output[op++] = crc32 >>> 24 & 255;
    il = input.length;
    output[op++] = il & 255;
    output[op++] = il >>> 8 & 255;
    output[op++] = il >>> 16 & 255;
    output[op++] = il >>> 24 & 255;
    this.ip = ip;
    if(USE_TYPEDARRAY && op < output.length) {
      this.output = output = output.subarray(0, op)
    }
    return output
  };
  Zlib.Gzip.OperatingSystem = {FAT:0, AMIGA:1, VMS:2, UNIX:3, VM_CMS:4, ATARI_TOS:5, HPFS:6, MACINTOSH:7, Z_SYSTEM:8, CP_M:9, TOPS_20:10, NTFS:11, QDOS:12, ACORN_RISCOS:13, UNKNOWN:255};
  Zlib.Gzip.FlagsMask = {FTEXT:1, FHCRC:2, FEXTRA:4, FNAME:8, FCOMMENT:16};
  if(ZLIB_GZIP_EXPORT) {
    goog.exportSymbol("Zlib.Gzip", Zlib.Gzip);
    goog.exportSymbol("Zlib.Gzip.prototype.compress", Zlib.Gzip.prototype.compress)
  }
});
goog.provide("Zlib.GunzipMember");
goog.scope(function() {
  Zlib.GunzipMember = function() {
    this.id1;
    this.id2;
    this.cm;
    this.flg;
    this.mtime;
    this.xfl;
    this.os;
    this.crc16;
    this.xlen;
    this.crc32;
    this.isize
  }
});
goog.provide("Zlib.Gunzip");
goog.require("Zlib.CRC32");
goog.require("Zlib.Gzip");
goog.require("Zlib.RawInflate");
goog.require("Zlib.GunzipMember");
var ZLIB_GUNZIP_EXPORT = false;
goog.scope(function() {
  Zlib.Gunzip = function(input, opt_params) {
    this.input = input;
    this.ip = 0;
    this.member = []
  };
  Zlib.Gunzip.prototype.decompress = function() {
    var il = this.input.length;
    while(this.ip < il) {
      this.decodeMember()
    }
    return this.concatMember()
  };
  Zlib.Gunzip.prototype.decodeMember = function() {
    var member = new Zlib.GunzipMember;
    var isize;
    var rawinflate;
    var inflated;
    var inflen;
    var c;
    var ci;
    var str;
    var mtime;
    var crc32;
    var input = this.input;
    var ip = this.ip;
    member.id1 = input[ip++];
    member.id2 = input[ip++];
    if(member.id1 !== 31 || member.id2 !== 139) {
      throw new Error("invalid file signature:", member.id1, member.id2);
    }
    member.cm = input[ip++];
    switch(member.cm) {
      case 8:
        break;
      default:
        throw new Error("unknown compression method: " + member.cm);
    }
    member.flg = input[ip++];
    mtime = input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24;
    member.mtime = new Date(mtime * 1E3);
    member.xfl = input[ip++];
    member.os = input[ip++];
    if((member.flg & Zlib.Gzip.FlagsMask.FEXTRA) > 0) {
      member.xlen = input[ip++] | input[ip++] << 8;
      ip = this.decodeSubField(ip, member.xlen)
    }
    if((member.flg & Zlib.Gzip.FlagsMask.FNAME) > 0) {
      for(str = [], ci = 0;(c = input[ip++]) > 0;) {
        str[ci++] = String.fromCharCode(c)
      }
      member.name = str.join("")
    }
    if((member.flg & Zlib.Gzip.FlagsMask.FCOMMENT) > 0) {
      for(str = [], ci = 0;(c = input[ip++]) > 0;) {
        str[ci++] = String.fromCharCode(c)
      }
      member.comment = str.join("")
    }
    if((member.flg & Zlib.Gzip.FlagsMask.FHCRC) > 0) {
      member.crc16 = Zlib.CRC32.calc(input, 0, ip) & 65535;
      if(member.crc16 !== (input[ip++] | input[ip++] << 8)) {
        throw new Error("invalid header crc16");
      }
    }
    isize = input[input.length - 4] | input[input.length - 3] << 8 | input[input.length - 2] << 16 | input[input.length - 1] << 24;
    if(input.length - ip - 4 - 4 < isize * 512) {
      inflen = isize
    }
    rawinflate = new Zlib.RawInflate(input, {"index":ip, "bufferSize":inflen});
    member.data = inflated = rawinflate.decompress();
    ip = rawinflate.ip;
    member.crc32 = crc32 = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0;
    if(Zlib.CRC32.calc(inflated) !== crc32) {
      throw new Error("invalid CRC-32 checksum: 0x" + Zlib.CRC32.calc(inflated).toString(16) + " / 0x" + crc32.toString(16));
    }
    member.isize = isize = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0;
    if((inflated.length & 4294967295) !== isize) {
      throw new Error("invalid input size: " + (inflated.length & 4294967295) + " / " + isize);
    }
    this.member.push(member);
    this.ip = ip
  };
  Zlib.Gunzip.prototype.decodeSubField = function(ip, length) {
    return ip + length
  };
  Zlib.Gunzip.prototype.concatMember = function() {
    var member = this.member;
    var i;
    var il;
    var p = 0;
    var size = 0;
    var buffer;
    for(i = 0, il = member.length;i < il;++i) {
      size += member[i].data.length
    }
    if(USE_TYPEDARRAY) {
      buffer = new Uint8Array(size);
      for(i = 0;i < il;++i) {
        buffer.set(member[i].data, p);
        p += member[i].data.length
      }
    }else {
      buffer = [];
      for(i = 0;i < il;++i) {
        buffer[i] = member[i].data
      }
      buffer = Array.prototype.concat.apply([], buffer)
    }
    return buffer
  };
  if(ZLIB_GUNZIP_EXPORT) {
    goog.exportSymbol("Zlib.Gunzip", Zlib.Gunzip);
    goog.exportSymbol("Zlib.Gunzip.prototype.decompress", Zlib.Gunzip.prototype.decompress)
  }
});
goog.provide("X.parserMGZ");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parser");
goog.require("X.triplets");
goog.require("goog.math.Vec3");
goog.require("Zlib.Gunzip");
X.parserMGZ = function() {
  goog.base(this);
  this._classname = "parserMGZ";
  this._littleEndian = false
};
goog.inherits(X.parserMGZ, X.parser);
X.parserMGZ.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  var b_zipped = flag;
  var _data = data;
  if(b_zipped) {
    var inflate = new Zlib.Gunzip(new Uint8Array(_data));
    _data = inflate.decompress();
    _data = _data.buffer
  }
  var MRI = this.parseStream(_data);
  var _dimensions = [MRI.ndim1, MRI.ndim2, MRI.ndim3];
  object._dimensions = _dimensions;
  var _spacing = MRI.v_voxelsize;
  object._spacing = _spacing;
  var min = MRI.min;
  var max = MRI.max;
  object._min = object._windowLow = min;
  object._max = object._windowHigh = max;
  if(object._lowerThreshold == -Infinity) {
    object._lowerThreshold = min
  }
  if(object._upperThreshold == Infinity) {
    object._upperThreshold = max
  }
  var IJKToRAS = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.setRowValues(IJKToRAS, 0, MRI.M_ras[0][0], MRI.M_ras[1][0], MRI.M_ras[2][0], 0);
  goog.vec.Mat4.setRowValues(IJKToRAS, 1, MRI.M_ras[0][1], MRI.M_ras[1][1], MRI.M_ras[2][1], 0);
  goog.vec.Mat4.setRowValues(IJKToRAS, 2, MRI.M_ras[0][2], MRI.M_ras[1][2], MRI.M_ras[2][2], 0);
  goog.vec.Mat4.setRowValues(IJKToRAS, 3, 0, 0, 0, 1);
  var fcx = _dimensions[0] / 2;
  var fcy = _dimensions[1] / 2;
  var fcz = _dimensions[2] / 2;
  var _origin = [0, 0, 0];
  for(var ui = 0;ui < 3;++ui) {
    _origin[ui] = MRI.M_ras[3][ui] - (goog.vec.Mat4.getElement(IJKToRAS, ui, 0) * _spacing[0] * fcx + goog.vec.Mat4.getElement(IJKToRAS, ui, 1) * _spacing[1] * fcy + goog.vec.Mat4.getElement(IJKToRAS, ui, 2) * _spacing[2] * fcz)
  }
  goog.vec.Mat4.setColumnValues(IJKToRAS, 3, _origin[0], _origin[1], _origin[2], 1);
  MRI.IJKToRAS = IJKToRAS;
  MRI.RASToIJK = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.invert(MRI.IJKToRAS, MRI.RASToIJK);
  var tar = goog.vec.Vec4.createFloat32FromValues(0, 0, 0, 1);
  var res = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, tar, res);
  var tar2 = goog.vec.Vec4.createFloat32FromValues(1, 1, 1, 1);
  var res2 = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, tar2, res2);
  var _rasBB = X.parser.computeRASBBox(IJKToRAS, object._dimensions);
  MRI.RASSpacing = [res2[0] - res[0], res2[1] - res[1], res2[2] - res[2]];
  MRI.RASDimensions = [_rasBB[1] - _rasBB[0] + 1, _rasBB[3] - _rasBB[2] + 1, _rasBB[5] - _rasBB[4] + 1];
  MRI.RASOrigin = [_rasBB[0], _rasBB[2], _rasBB[4]];
  object.create_(MRI);
  X.TIMERSTOP(this._classname + ".parse");
  object._image = this.reslice(object);
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
X.parserMGZ.prototype.parseStream = function(data) {
  this._data = data;
  var MRI = {version:0, Tr:0, Te:0, flipangle:0, Ti:0, ndim1:0, ndim2:0, ndim3:0, nframes:0, type:0, dof:0, rasgoodflag:0, MRIreader:null, M_ras:null, v_voxelsize:null, data:null, min:Infinity, max:-Infinity};
  MRI.version = this.scan("uint");
  MRI.ndim1 = this.scan("uint");
  MRI.ndim2 = this.scan("uint");
  MRI.ndim3 = this.scan("uint");
  MRI.nframes = this.scan("uint");
  MRI.type = this.scan("uint");
  MRI.dof = this.scan("uint");
  MRI.rasgoodflag = this.scan("ushort");
  if(MRI.rasgoodflag > 0) {
    MRI.v_voxelsize = this.scan("float", 3);
    var _ras = [];
    _ras.push(this.scan("float", 3));
    _ras.push(this.scan("float", 3));
    _ras.push(this.scan("float", 3));
    _ras.push(this.scan("float", 3));
    MRI.M_ras = _ras
  }
  this.jumpTo(284);
  var volsize = MRI.ndim1 * MRI.ndim2 * MRI.ndim3;
  switch(MRI.type) {
    case 0:
      MRI.data = this.scan("uchar", volsize);
      break;
    case 1:
      MRI.data = this.scan("uint", volsize);
      break;
    case 3:
      MRI.data = this.scan("float", volsize);
      break;
    case 4:
      MRI.data = this.scan("ushort", volsize);
      break;
    default:
      throw new Error("Unsupported MGH/MGZ data type: " + MRI.type);
  }
  var min_max = this.arrayMinMax(MRI.data);
  MRI.min = min_max[0];
  MRI.max = min_max[1];
  if(this._dataPointer + 4 * 4 < this._data.byteLength) {
    MRI.Tr = this.scan("float");
    MRI.flipangle = this.scan("float");
    MRI.Te = this.scan("float");
    MRI.Ti = this.scan("float")
  }
  return MRI
};
goog.exportSymbol("X.parserMGZ", X.parserMGZ);
goog.exportSymbol("X.parserMGZ.prototype.parse", X.parserMGZ.prototype.parse);
goog.provide("X.parserLBL");
goog.require("X.event");
goog.require("X.parser");
goog.require("X.triplets");
X.parserLBL = function() {
  goog.base(this);
  this._classname = "parserLBL"
};
goog.inherits(X.parserLBL, X.parser);
X.parserLBL.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  var ind = object._pointIndices;
  var numberOfIndices = ind.length;
  if(numberOfIndices == 0) {
    throw new Error("No _pointIndices defined on the X.object.");
  }
  this._data = data;
  var _indices = [];
  var _bytes = this.scan("uchar", data.byteLength);
  var _length = _bytes.length;
  var _scanMode = false;
  var _rangeStart = 0;
  var i;
  for(i = 1;i < _length;i++) {
    if(_bytes[i - 1] == 10) {
      _rangeStart = i;
      _scanMode = true
    }else {
      if(_scanMode && _bytes[i] == 32) {
        var _value = parseInt(this.parseChars(_bytes, _rangeStart, i), 10);
        _indices.push(_value);
        _scanMode = false
      }
    }
  }
  var _unorderedLabels;
  if(object._scalars._array) {
    _unorderedLabels = object._scalars._array
  }else {
    _unorderedLabels = new Float32Array(numberOfIndices)
  }
  var _labelsCount = _indices.length;
  for(i = 0;i < _labelsCount;i++) {
    _unorderedLabels[_indices[i]] = 1
  }
  var _orderedLabels = new Float32Array(numberOfIndices * 3);
  var _curvaturePointer = 0;
  for(i = 0;i < numberOfIndices;i++) {
    var currentIndex = ind[i];
    if(currentIndex > numberOfIndices) {
      throw new Error("Could not find scalar for vertex.");
    }
    var currentScalar = _unorderedLabels[currentIndex];
    _orderedLabels[_curvaturePointer++] = currentScalar;
    _orderedLabels[_curvaturePointer++] = currentScalar;
    _orderedLabels[_curvaturePointer++] = currentScalar
  }
  object._scalars._array = _unorderedLabels;
  object._scalars._glArray = _orderedLabels;
  object._scalars._dirty = true;
  X.TIMERSTOP(this._classname + ".parse");
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
goog.exportSymbol("X.parserLBL", X.parserLBL);
goog.exportSymbol("X.parserLBL.prototype.parse", X.parserLBL.prototype.parse);
goog.provide("X.parserCRV");
goog.require("X.event");
goog.require("X.parser");
goog.require("X.triplets");
X.parserCRV = function() {
  goog.base(this);
  this._classname = "parserCRV";
  this._littleEndian = false
};
goog.inherits(X.parserCRV, X.parser);
X.parserCRV.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  var ind = object._pointIndices;
  if(ind.length == 0) {
    throw new Error("No _pointIndices defined on the X.object.");
  }
  this._data = data;
  this.jumpTo(3);
  var numVertices = this.scan("uint");
  var fnum = this.scan("uint");
  var valsPerVertex = this.scan("uint");
  var numPosValues = 0;
  var numNegValues = 0;
  var negSum = 0;
  var posSum = 0;
  var posMean = 0;
  var negMean = 0;
  var posStdDev = 0;
  var negStdDev = 0;
  var sum = 0;
  var mean = 0;
  var stdDev = 0;
  var numValues = 0;
  var minCurv = new Array(2);
  var maxCurv = new Array(2);
  var vertexCurvatures = this.scan("float", numVertices);
  var k;
  for(k = 0;k < numVertices;k++) {
    var curv = vertexCurvatures[k];
    if(k == 0) {
      minCurv[0] = maxCurv[0] = curv
    }
    if(curv >= 0) {
      numPosValues++;
      posSum += curv
    }else {
      numNegValues++;
      negSum += curv
    }
    sum += curv;
    numValues++;
    maxCurv[0] = Math.max(curv, maxCurv[0]);
    minCurv[0] = Math.min(curv, minCurv[0]);
    vertexCurvatures[k] = curv
  }
  if(numPosValues != 0) {
    posMean = posSum / numPosValues
  }
  if(numNegValues != 0) {
    negMean = negSum / numNegValues
  }
  if(numValues != 0) {
    mean = sum / numValues
  }
  posSum = 0;
  negSum = 0;
  sum = 0;
  var i;
  for(i = 0;i < numVertices;i++) {
    var curv = vertexCurvatures[i];
    var diffSq = 0;
    if(curv >= 0) {
      diffSq = Math.pow(curv - posMean, 2);
      posSum += diffSq
    }else {
      diffSq = Math.pow(curv - negMean, 2);
      negSum += diffSq
    }
    diffSq = Math.pow(curv - mean, 2);
    sum += diffSq
  }
  if(numPosValues > 1) {
    posStdDev = Math.sqrt(posSum / (numPosValues - 1))
  }
  if(numNegValues > 1) {
    negStdDev = Math.sqrt(negSum / (numNegValues - 1))
  }
  if(numValues > 1) {
    stdDev = Math.sqrt(sum / (numValues - 1))
  }
  minCurv[1] = negMean - 2.5 * negStdDev;
  maxCurv[1] = posMean + 2.5 * posStdDev;
  var numberOfIndices = ind.length;
  var orderedCurvatures = new Float32Array(numberOfIndices * 3);
  for(i = 0;i < numberOfIndices;i++) {
    var currentIndex = ind[i];
    var currentScalar = vertexCurvatures[currentIndex];
    var _i = i * 3;
    orderedCurvatures[_i] = currentScalar;
    orderedCurvatures[_i + 1] = currentScalar;
    orderedCurvatures[_i + 2] = currentScalar
  }
  object._scalars._min = minCurv[1];
  object._scalars._max = maxCurv[1];
  if(object._scalars._lowerThreshold == -Infinity) {
    object._scalars._lowerThreshold = minCurv[1]
  }
  if(object._scalars._upperThreshold == Infinity) {
    object._scalars._upperThreshold = maxCurv[1]
  }
  object._scalars._array = vertexCurvatures;
  object._scalars._glArray = orderedCurvatures;
  object._scalars._dirty = true;
  X.TIMERSTOP(this._classname + ".parse");
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
goog.exportSymbol("X.parserCRV", X.parserCRV);
goog.exportSymbol("X.parserCRV.prototype.parse", X.parserCRV.prototype.parse);
goog.provide("Zlib.Adler32");
goog.scope(function() {
  Zlib.Adler32 = function(array) {
    if(typeof array === "string") {
      array = Zlib.Util.stringToByteArray(array)
    }
    return Zlib.Adler32.update(1, array)
  };
  Zlib.Adler32.update = function(adler, array) {
    var s1 = adler & 65535;
    var s2 = adler >>> 16 & 65535;
    var len = array.length;
    var tlen;
    var i = 0;
    while(len > 0) {
      tlen = len > Zlib.Adler32.OptimizationParameter ? Zlib.Adler32.OptimizationParameter : len;
      len -= tlen;
      do {
        s1 += array[i++];
        s2 += s1
      }while(--tlen);
      s1 %= 65521;
      s2 %= 65521
    }
    return(s2 << 16 | s1) >>> 0
  };
  Zlib.Adler32.OptimizationParameter = 1024
});
goog.provide("Zlib.Deflate");
var ZLIB_DEFLATE_EXPORT = false;
goog.require("Zlib.Adler32");
goog.require("Zlib.RawDeflate");
goog.scope(function() {
  Zlib.Deflate = function(input, opt_params) {
    this.input = input;
    this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.Deflate.DefaultBufferSize);
    this.compressionType = Zlib.Deflate.CompressionType.DYNAMIC;
    this.rawDeflate;
    var rawDeflateOption = {};
    var prop;
    if(opt_params || !(opt_params = {})) {
      if(typeof opt_params["compressionType"] === "number") {
        this.compressionType = opt_params["compressionType"]
      }
    }
    for(prop in opt_params) {
      rawDeflateOption[prop] = opt_params[prop]
    }
    rawDeflateOption["outputBuffer"] = this.output;
    this.rawDeflate = new Zlib.RawDeflate(this.input, rawDeflateOption)
  };
  Zlib.Deflate.DefaultBufferSize = 32768;
  Zlib.Deflate.CompressionType = Zlib.RawDeflate.CompressionType;
  Zlib.Deflate.compress = function(input, opt_params) {
    return(new Zlib.Deflate(input, opt_params)).compress()
  };
  Zlib.Deflate.prototype.compress = function() {
    var cm;
    var cinfo;
    var cmf;
    var flg;
    var fcheck;
    var fdict;
    var flevel;
    var clevel;
    var adler;
    var error = false;
    var output;
    var pos = 0;
    output = this.output;
    cm = Zlib.CompressionMethod.DEFLATE;
    switch(cm) {
      case Zlib.CompressionMethod.DEFLATE:
        cinfo = Math.LOG2E * Math.log(Zlib.RawDeflate.WindowSize) - 8;
        break;
      default:
        throw new Error("invalid compression method");
    }
    cmf = cinfo << 4 | cm;
    output[pos++] = cmf;
    fdict = 0;
    switch(cm) {
      case Zlib.CompressionMethod.DEFLATE:
        switch(this.compressionType) {
          case Zlib.Deflate.CompressionType.NONE:
            flevel = 0;
            break;
          case Zlib.Deflate.CompressionType.FIXED:
            flevel = 1;
            break;
          case Zlib.Deflate.CompressionType.DYNAMIC:
            flevel = 2;
            break;
          default:
            throw new Error("unsupported compression type");
        }
        break;
      default:
        throw new Error("invalid compression method");
    }
    flg = flevel << 6 | fdict << 5;
    fcheck = 31 - (cmf * 256 + flg) % 31;
    flg |= fcheck;
    output[pos++] = flg;
    adler = Zlib.Adler32(this.input);
    this.rawDeflate.op = pos;
    output = this.rawDeflate.compress();
    pos = output.length;
    if(USE_TYPEDARRAY) {
      output = new Uint8Array(output.buffer);
      if(output.length <= pos + 4) {
        this.output = new Uint8Array(output.length + 4);
        this.output.set(output);
        output = this.output
      }
      output = output.subarray(0, pos + 4)
    }
    output[pos++] = adler >> 24 & 255;
    output[pos++] = adler >> 16 & 255;
    output[pos++] = adler >> 8 & 255;
    output[pos++] = adler & 255;
    return output
  };
  if(ZLIB_DEFLATE_EXPORT) {
    goog.exportSymbol("Zlib.Deflate", Zlib.Deflate);
    goog.exportSymbol("Zlib.Deflate.compress", Zlib.Deflate.compress);
    goog.exportSymbol("Zlib.Deflate.prototype.compress", Zlib.Deflate.prototype.compress);
    goog.exportSymbol("Zlib.Deflate.CompressionType", Zlib.Deflate.CompressionType);
    goog.exportSymbol("Zlib.Deflate.CompressionType.NONE", Zlib.Deflate.CompressionType.NONE);
    goog.exportSymbol("Zlib.Deflate.CompressionType.FIXED", Zlib.Deflate.CompressionType.FIXED);
    goog.exportSymbol("Zlib.Deflate.CompressionType.DYNAMIC", Zlib.Deflate.CompressionType.DYNAMIC)
  }
});
goog.provide("Zlib");
goog.require("Zlib.Deflate");
goog.scope(function() {
  Zlib.CompressionMethod = {DEFLATE:8, RESERVED:15}
});
goog.provide("Zlib.Util");
goog.scope(function() {
  Zlib.Util = {};
  Zlib.Util.convertNetworkByteOrder = function(number, size) {
    var tmp = [], octet, nullchar;
    do {
      octet = number & 255;
      tmp.push(octet);
      number >>>= 8
    }while(number > 0);
    if(typeof size === "number") {
      nullchar = 0;
      while(tmp.length < size) {
        tmp.push(nullchar)
      }
    }
    return tmp.reverse()
  };
  Zlib.Util.slice = function(arraylike, start, length) {
    var result, arraylength = arraylike.length;
    if(arraylike instanceof Array) {
      return arraylike.slice(start, start + length)
    }
    result = [];
    for(var i = 0;i < length;i++) {
      if(start + i >= arraylength) {
        break
      }
      result.push(arraylike[start + i])
    }
    return result
  };
  Zlib.Util.push = function(dst, src) {
    var i = 0, dl = src.length, sl = src.length, pushImpl = !!dst.push;
    if(pushImpl) {
      for(;i < sl;i++) {
        dst.push(src[i])
      }
    }else {
      for(;i < sl;i++) {
        dst[dl + i] = src[i]
      }
    }
    return dst.length
  };
  Zlib.Util.stringToByteArray = function(str) {
    var tmp = str.split("");
    var i, l;
    for(i = 0, l = tmp.length;i < l;i++) {
      tmp[i] = (tmp[i].charCodeAt(0) & 255) >>> 0
    }
    return tmp
  }
});
goog.provide("Zlib.Inflate");
var ZLIB_INFLATE_EXPORT = false;
goog.require("Zlib");
goog.require("Zlib.Adler32");
goog.require("Zlib.RawInflate");
goog.require("Zlib.Util");
goog.scope(function() {
  Zlib.Inflate = function(input, opt_params) {
    var bufferSize;
    var bufferType;
    var cmf;
    var flg;
    this.input = input;
    this.ip = 0;
    this.rawinflate;
    this.verify;
    if(opt_params || !(opt_params = {})) {
      if(opt_params["index"]) {
        this.ip = opt_params["index"]
      }
      if(opt_params["verify"]) {
        this.verify = opt_params["verify"]
      }
    }
    cmf = input[this.ip++];
    flg = input[this.ip++];
    switch(cmf & 15) {
      case Zlib.CompressionMethod.DEFLATE:
        this.method = Zlib.CompressionMethod.DEFLATE;
        break;
      default:
        throw new Error("unsupported compression method");
    }
    if(((cmf << 8) + flg) % 31 !== 0) {
      throw new Error("invalid fcheck flag:" + ((cmf << 8) + flg) % 31);
    }
    if(flg & 32) {
      throw new Error("fdict flag is not supported");
    }
    this.rawinflate = new Zlib.RawInflate(input, {"index":this.ip, "bufferSize":opt_params["bufferSize"], "bufferType":opt_params["bufferType"], "resize":opt_params["resize"]})
  };
  Zlib.Inflate.BufferType = Zlib.RawInflate.BufferType;
  Zlib.Inflate.prototype.decompress = function() {
    var input = this.input;
    var buffer;
    var adler32;
    buffer = this.rawinflate.decompress();
    this.ip = this.rawinflate.ip;
    if(this.verify) {
      adler32 = (input[this.ip++] << 24 | input[this.ip++] << 16 | input[this.ip++] << 8 | input[this.ip++]) >>> 0;
      if(adler32 !== Zlib.Adler32(buffer)) {
        throw new Error("invalid adler-32 checksum");
      }
    }
    return buffer
  };
  if(ZLIB_INFLATE_EXPORT) {
    goog.exportSymbol("Zlib.Inflate", Zlib.Inflate);
    goog.exportSymbol("Zlib.Inflate.BufferType", Zlib.Inflate.BufferType);
    goog.exportProperty(Zlib.Inflate.BufferType, "ADAPTIVE", Zlib.Inflate.BufferType.ADAPTIVE);
    goog.exportProperty(Zlib.Inflate.BufferType, "BLOCK", Zlib.Inflate.BufferType.BLOCK);
    goog.exportSymbol("Zlib.Inflate.prototype.decompress", Zlib.Inflate.prototype.decompress)
  }
});
goog.provide("X.parserRAW");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parser");
goog.require("X.triplets");
goog.require("goog.math.Vec3");
goog.require("Zlib.Inflate");
X.parserRAW = function() {
  goog.base(this);
  this._classname = "parserRAW"
};
goog.inherits(X.parserRAW, X.parser);
X.parserRAW.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  var b_zipped = flag;
  var _data = data;
  if(b_zipped) {
    var inflate = new Zlib.Inflate(new Uint8Array(_data));
    _data = inflate.decompress();
    _data = _data.buffer
  }
  var MRI = {};
  MRI.data = new Uint8Array(_data);
  var min_max = this.arrayMinMax(MRI.data);
  var min = min_max[0];
  var max = min_max[1];
  var _dimensions = object._dimensions;
  MRI.min = object._min = object._windowLow = min;
  MRI.max = object._max = object._windowHigh = max;
  if(object._lowerThreshold == -Infinity) {
    object._lowerThreshold = min
  }
  if(object._upperThreshold == Infinity) {
    object._upperThreshold = max
  }
  var IJKToRAS = goog.vec.Mat4.createFloat32Identity();
  var fcx = _dimensions[0] / 2;
  var fcy = _dimensions[1] / 2;
  var fcz = _dimensions[2] / 2;
  var _origin = [0, 0, 0];
  MRI.IJKToRAS = IJKToRAS;
  MRI.RASToIJK = goog.vec.Mat4.createFloat32Identity();
  var tar = goog.vec.Vec4.createFloat32FromValues(0, 0, 0, 1);
  var res = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, tar, res);
  var tar2 = goog.vec.Vec4.createFloat32FromValues(1, 1, 1, 1);
  var res2 = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, tar2, res2);
  var _rasBB = X.parser.computeRASBBox(IJKToRAS, object._dimensions);
  MRI.RASSpacing = [res2[0] - res[0], res2[1] - res[1], res2[2] - res[2]];
  MRI.RASDimensions = [_rasBB[1] - _rasBB[0] + 1, _rasBB[3] - _rasBB[2] + 1, _rasBB[5] - _rasBB[4] + 1];
  MRI.RASOrigin = [_rasBB[0], _rasBB[2], _rasBB[4]];
  object.create_(MRI);
  X.TIMERSTOP(this._classname + ".parse");
  object._image = this.reslice(object);
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
goog.exportSymbol("X.parserRAW", X.parserRAW);
goog.exportSymbol("X.parserRAW.prototype.parse", X.parserRAW.prototype.parse);
goog.provide("X.parserLUT");
goog.require("X.event");
goog.require("X.parser");
goog.require("X.triplets");
X.parserLUT = function() {
  goog.base(this);
  this._classname = "parserLUT"
};
goog.inherits(X.parserLUT, X.parser);
X.parserLUT.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  var colortable = container;
  this._data = data;
  var _bytes = this.scan("uchar", data.byteLength);
  var _length = _bytes.length;
  var _rangeStart = 0;
  var i;
  for(i = 0;i < _length;i++) {
    if(_bytes[i] == 10) {
      var line = this.parseChars(_bytes, _rangeStart, i);
      _rangeStart = i + 1;
      line = line.replace(/^\s+|\s+$/g, "");
      if(line[0] == "#") {
        continue
      }
      var lineFields = line.split(" ");
      lineFields = lineFields.filter(function(v) {
        return v != ""
      });
      if(lineFields.length != 6) {
        continue
      }
      lineFields[2] = parseInt(lineFields[2], 10) / 255;
      lineFields[3] = parseInt(lineFields[3], 10) / 255;
      lineFields[4] = parseInt(lineFields[4], 10) / 255;
      lineFields[5] = parseInt(lineFields[5], 10) / 255;
      colortable.add(parseInt(lineFields[0], 10), lineFields[1], lineFields[2], lineFields[3], lineFields[4], lineFields[5], 10)
    }
  }
  X.TIMERSTOP(this._classname + ".parse");
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
goog.exportSymbol("X.parserLUT", X.parserLUT);
goog.exportSymbol("X.parserLUT.prototype.parse", X.parserLUT.prototype.parse);
goog.provide("goog.vec.Mat3");
goog.require("goog.vec");
goog.require("goog.vec.Vec3");
goog.vec.Mat3.Float32;
goog.vec.Mat3.Float64;
goog.vec.Mat3.Number;
goog.vec.Mat3.AnyType;
goog.vec.Mat3.Type;
goog.vec.Mat3.Mat3Like;
goog.vec.Mat3.createFloat32 = function() {
  return new Float32Array(9)
};
goog.vec.Mat3.createFloat64 = function() {
  return new Float64Array(9)
};
goog.vec.Mat3.createNumber = function() {
  var a = new Array(9);
  goog.vec.Mat3.setFromValues(a, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return a
};
goog.vec.Mat3.create = function() {
  return goog.vec.Mat3.createFloat32()
};
goog.vec.Mat3.createFloat32Identity = function() {
  var mat = goog.vec.Mat3.createFloat32();
  mat[0] = mat[4] = mat[8] = 1;
  return mat
};
goog.vec.Mat3.createFloat64Identity = function() {
  var mat = goog.vec.Mat3.createFloat64();
  mat[0] = mat[4] = mat[8] = 1;
  return mat
};
goog.vec.Mat3.createNumberIdentity = function() {
  var a = new Array(9);
  goog.vec.Mat3.setFromValues(a, 1, 0, 0, 0, 1, 0, 0, 0, 1);
  return a
};
goog.vec.Mat3.createIdentity = function() {
  return goog.vec.Mat3.createFloat32Identity()
};
goog.vec.Mat3.createFloat32FromArray = function(matrix) {
  var newMatrix = goog.vec.Mat3.createFloat32();
  goog.vec.Mat3.setFromArray(newMatrix, matrix);
  return newMatrix
};
goog.vec.Mat3.createFloat32FromValues = function(v00, v10, v20, v01, v11, v21, v02, v12, v22) {
  var newMatrix = goog.vec.Mat3.createFloat32();
  goog.vec.Mat3.setFromValues(newMatrix, v00, v10, v20, v01, v11, v21, v02, v12, v22);
  return newMatrix
};
goog.vec.Mat3.cloneFloat32 = goog.vec.Mat3.createFloat32FromArray;
goog.vec.Mat3.createFloat64FromArray = function(matrix) {
  var newMatrix = goog.vec.Mat3.createFloat64();
  goog.vec.Mat3.setFromArray(newMatrix, matrix);
  return newMatrix
};
goog.vec.Mat3.createFloat64FromValues = function(v00, v10, v20, v01, v11, v21, v02, v12, v22) {
  var newMatrix = goog.vec.Mat3.createFloat64();
  goog.vec.Mat3.setFromValues(newMatrix, v00, v10, v20, v01, v11, v21, v02, v12, v22);
  return newMatrix
};
goog.vec.Mat3.cloneFloat64 = goog.vec.Mat3.createFloat64FromArray;
goog.vec.Mat3.createFromArray = function(matrix) {
  var newMatrix = goog.vec.Mat3.createFloat32();
  goog.vec.Mat3.setFromArray(newMatrix, matrix);
  return newMatrix
};
goog.vec.Mat3.createFromValues = function(v00, v10, v20, v01, v11, v21, v02, v12, v22) {
  var newMatrix = goog.vec.Mat3.create();
  goog.vec.Mat3.setFromValues(newMatrix, v00, v10, v20, v01, v11, v21, v02, v12, v22);
  return newMatrix
};
goog.vec.Mat3.clone = goog.vec.Mat3.createFromArray;
goog.vec.Mat3.getElement = function(mat, row, column) {
  return mat[row + column * 3]
};
goog.vec.Mat3.setElement = function(mat, row, column, value) {
  mat[row + column * 3] = value;
  return mat
};
goog.vec.Mat3.setFromValues = function(mat, v00, v10, v20, v01, v11, v21, v02, v12, v22) {
  mat[0] = v00;
  mat[1] = v10;
  mat[2] = v20;
  mat[3] = v01;
  mat[4] = v11;
  mat[5] = v21;
  mat[6] = v02;
  mat[7] = v12;
  mat[8] = v22;
  return mat
};
goog.vec.Mat3.setFromArray = function(mat, values) {
  mat[0] = values[0];
  mat[1] = values[1];
  mat[2] = values[2];
  mat[3] = values[3];
  mat[4] = values[4];
  mat[5] = values[5];
  mat[6] = values[6];
  mat[7] = values[7];
  mat[8] = values[8];
  return mat
};
goog.vec.Mat3.setFromRowMajorArray = function(mat, values) {
  mat[0] = values[0];
  mat[1] = values[3];
  mat[2] = values[6];
  mat[3] = values[1];
  mat[4] = values[4];
  mat[5] = values[7];
  mat[6] = values[2];
  mat[7] = values[5];
  mat[8] = values[8];
  return mat
};
goog.vec.Mat3.setDiagonalValues = function(mat, v00, v11, v22) {
  mat[0] = v00;
  mat[4] = v11;
  mat[8] = v22;
  return mat
};
goog.vec.Mat3.setDiagonal = function(mat, vec) {
  mat[0] = vec[0];
  mat[4] = vec[1];
  mat[8] = vec[2];
  return mat
};
goog.vec.Mat3.setColumnValues = function(mat, column, v0, v1, v2) {
  var i = column * 3;
  mat[i] = v0;
  mat[i + 1] = v1;
  mat[i + 2] = v2;
  return mat
};
goog.vec.Mat3.setColumn = function(mat, column, vec) {
  var i = column * 3;
  mat[i] = vec[0];
  mat[i + 1] = vec[1];
  mat[i + 2] = vec[2];
  return mat
};
goog.vec.Mat3.getColumn = function(mat, column, vec) {
  var i = column * 3;
  vec[0] = mat[i];
  vec[1] = mat[i + 1];
  vec[2] = mat[i + 2];
  return vec
};
goog.vec.Mat3.setColumns = function(mat, vec0, vec1, vec2) {
  goog.vec.Mat3.setColumn(mat, 0, vec0);
  goog.vec.Mat3.setColumn(mat, 1, vec1);
  goog.vec.Mat3.setColumn(mat, 2, vec2);
  return mat
};
goog.vec.Mat3.getColumns = function(mat, vec0, vec1, vec2) {
  goog.vec.Mat3.getColumn(mat, 0, vec0);
  goog.vec.Mat3.getColumn(mat, 1, vec1);
  goog.vec.Mat3.getColumn(mat, 2, vec2)
};
goog.vec.Mat3.setRowValues = function(mat, row, v0, v1, v2) {
  mat[row] = v0;
  mat[row + 3] = v1;
  mat[row + 6] = v2;
  return mat
};
goog.vec.Mat3.setRow = function(mat, row, vec) {
  mat[row] = vec[0];
  mat[row + 3] = vec[1];
  mat[row + 6] = vec[2];
  return mat
};
goog.vec.Mat3.getRow = function(mat, row, vec) {
  vec[0] = mat[row];
  vec[1] = mat[row + 3];
  vec[2] = mat[row + 6];
  return vec
};
goog.vec.Mat3.setRows = function(mat, vec0, vec1, vec2) {
  goog.vec.Mat3.setRow(mat, 0, vec0);
  goog.vec.Mat3.setRow(mat, 1, vec1);
  goog.vec.Mat3.setRow(mat, 2, vec2);
  return mat
};
goog.vec.Mat3.getRows = function(mat, vec0, vec1, vec2) {
  goog.vec.Mat3.getRow(mat, 0, vec0);
  goog.vec.Mat3.getRow(mat, 1, vec1);
  goog.vec.Mat3.getRow(mat, 2, vec2)
};
goog.vec.Mat3.makeZero = function(mat) {
  mat[0] = 0;
  mat[1] = 0;
  mat[2] = 0;
  mat[3] = 0;
  mat[4] = 0;
  mat[5] = 0;
  mat[6] = 0;
  mat[7] = 0;
  mat[8] = 0;
  return mat
};
goog.vec.Mat3.makeIdentity = function(mat) {
  mat[0] = 1;
  mat[1] = 0;
  mat[2] = 0;
  mat[3] = 0;
  mat[4] = 1;
  mat[5] = 0;
  mat[6] = 0;
  mat[7] = 0;
  mat[8] = 1;
  return mat
};
goog.vec.Mat3.addMat = function(mat0, mat1, resultMat) {
  resultMat[0] = mat0[0] + mat1[0];
  resultMat[1] = mat0[1] + mat1[1];
  resultMat[2] = mat0[2] + mat1[2];
  resultMat[3] = mat0[3] + mat1[3];
  resultMat[4] = mat0[4] + mat1[4];
  resultMat[5] = mat0[5] + mat1[5];
  resultMat[6] = mat0[6] + mat1[6];
  resultMat[7] = mat0[7] + mat1[7];
  resultMat[8] = mat0[8] + mat1[8];
  return resultMat
};
goog.vec.Mat3.subMat = function(mat0, mat1, resultMat) {
  resultMat[0] = mat0[0] - mat1[0];
  resultMat[1] = mat0[1] - mat1[1];
  resultMat[2] = mat0[2] - mat1[2];
  resultMat[3] = mat0[3] - mat1[3];
  resultMat[4] = mat0[4] - mat1[4];
  resultMat[5] = mat0[5] - mat1[5];
  resultMat[6] = mat0[6] - mat1[6];
  resultMat[7] = mat0[7] - mat1[7];
  resultMat[8] = mat0[8] - mat1[8];
  return resultMat
};
goog.vec.Mat3.multScalar = function(mat, scalar, resultMat) {
  resultMat[0] = mat[0] * scalar;
  resultMat[1] = mat[1] * scalar;
  resultMat[2] = mat[2] * scalar;
  resultMat[3] = mat[3] * scalar;
  resultMat[4] = mat[4] * scalar;
  resultMat[5] = mat[5] * scalar;
  resultMat[6] = mat[6] * scalar;
  resultMat[7] = mat[7] * scalar;
  resultMat[8] = mat[8] * scalar;
  return resultMat
};
goog.vec.Mat3.multMat = function(mat0, mat1, resultMat) {
  var a00 = mat0[0], a10 = mat0[1], a20 = mat0[2];
  var a01 = mat0[3], a11 = mat0[4], a21 = mat0[5];
  var a02 = mat0[6], a12 = mat0[7], a22 = mat0[8];
  var b00 = mat1[0], b10 = mat1[1], b20 = mat1[2];
  var b01 = mat1[3], b11 = mat1[4], b21 = mat1[5];
  var b02 = mat1[6], b12 = mat1[7], b22 = mat1[8];
  resultMat[0] = a00 * b00 + a01 * b10 + a02 * b20;
  resultMat[1] = a10 * b00 + a11 * b10 + a12 * b20;
  resultMat[2] = a20 * b00 + a21 * b10 + a22 * b20;
  resultMat[3] = a00 * b01 + a01 * b11 + a02 * b21;
  resultMat[4] = a10 * b01 + a11 * b11 + a12 * b21;
  resultMat[5] = a20 * b01 + a21 * b11 + a22 * b21;
  resultMat[6] = a00 * b02 + a01 * b12 + a02 * b22;
  resultMat[7] = a10 * b02 + a11 * b12 + a12 * b22;
  resultMat[8] = a20 * b02 + a21 * b12 + a22 * b22;
  return resultMat
};
goog.vec.Mat3.transpose = function(mat, resultMat) {
  if(resultMat == mat) {
    var a10 = mat[1], a20 = mat[2], a21 = mat[5];
    resultMat[1] = mat[3];
    resultMat[2] = mat[6];
    resultMat[3] = a10;
    resultMat[5] = mat[7];
    resultMat[6] = a20;
    resultMat[7] = a21
  }else {
    resultMat[0] = mat[0];
    resultMat[1] = mat[3];
    resultMat[2] = mat[6];
    resultMat[3] = mat[1];
    resultMat[4] = mat[4];
    resultMat[5] = mat[7];
    resultMat[6] = mat[2];
    resultMat[7] = mat[5];
    resultMat[8] = mat[8]
  }
  return resultMat
};
goog.vec.Mat3.invert = function(mat0, resultMat) {
  var a00 = mat0[0], a10 = mat0[1], a20 = mat0[2];
  var a01 = mat0[3], a11 = mat0[4], a21 = mat0[5];
  var a02 = mat0[6], a12 = mat0[7], a22 = mat0[8];
  var t00 = a11 * a22 - a12 * a21;
  var t10 = a12 * a20 - a10 * a22;
  var t20 = a10 * a21 - a11 * a20;
  var det = a00 * t00 + a01 * t10 + a02 * t20;
  if(det == 0) {
    return false
  }
  var idet = 1 / det;
  resultMat[0] = t00 * idet;
  resultMat[3] = (a02 * a21 - a01 * a22) * idet;
  resultMat[6] = (a01 * a12 - a02 * a11) * idet;
  resultMat[1] = t10 * idet;
  resultMat[4] = (a00 * a22 - a02 * a20) * idet;
  resultMat[7] = (a02 * a10 - a00 * a12) * idet;
  resultMat[2] = t20 * idet;
  resultMat[5] = (a01 * a20 - a00 * a21) * idet;
  resultMat[8] = (a00 * a11 - a01 * a10) * idet;
  return true
};
goog.vec.Mat3.equals = function(mat0, mat1) {
  return mat0.length == mat1.length && mat0[0] == mat1[0] && mat0[1] == mat1[1] && mat0[2] == mat1[2] && mat0[3] == mat1[3] && mat0[4] == mat1[4] && mat0[5] == mat1[5] && mat0[6] == mat1[6] && mat0[7] == mat1[7] && mat0[8] == mat1[8]
};
goog.vec.Mat3.multVec3 = function(mat, vec, resultVec) {
  var x = vec[0], y = vec[1], z = vec[2];
  resultVec[0] = x * mat[0] + y * mat[3] + z * mat[6];
  resultVec[1] = x * mat[1] + y * mat[4] + z * mat[7];
  resultVec[2] = x * mat[2] + y * mat[5] + z * mat[8];
  return resultVec
};
goog.vec.Mat3.makeTranslate = function(mat, x, y) {
  goog.vec.Mat3.makeIdentity(mat);
  return goog.vec.Mat3.setColumnValues(mat, 2, x, y, 1)
};
goog.vec.Mat3.makeScale = function(mat, x, y, z) {
  goog.vec.Mat3.makeIdentity(mat);
  return goog.vec.Mat3.setDiagonalValues(mat, x, y, z)
};
goog.vec.Mat3.makeRotate = function(mat, angle, ax, ay, az) {
  var c = Math.cos(angle);
  var d = 1 - c;
  var s = Math.sin(angle);
  return goog.vec.Mat3.setFromValues(mat, ax * ax * d + c, ax * ay * d + az * s, ax * az * d - ay * s, ax * ay * d - az * s, ay * ay * d + c, ay * az * d + ax * s, ax * az * d + ay * s, ay * az * d - ax * s, az * az * d + c)
};
goog.vec.Mat3.makeRotateX = function(mat, angle) {
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  return goog.vec.Mat3.setFromValues(mat, 1, 0, 0, 0, c, s, 0, -s, c)
};
goog.vec.Mat3.makeRotateY = function(mat, angle) {
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  return goog.vec.Mat3.setFromValues(mat, c, 0, -s, 0, 1, 0, s, 0, c)
};
goog.vec.Mat3.makeRotateZ = function(mat, angle) {
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  return goog.vec.Mat3.setFromValues(mat, c, s, 0, -s, c, 0, 0, 0, 1)
};
goog.vec.Mat3.rotate = function(mat, angle, x, y, z) {
  var m00 = mat[0], m10 = mat[1], m20 = mat[2];
  var m01 = mat[3], m11 = mat[4], m21 = mat[5];
  var m02 = mat[6], m12 = mat[7], m22 = mat[8];
  var cosAngle = Math.cos(angle);
  var sinAngle = Math.sin(angle);
  var diffCosAngle = 1 - cosAngle;
  var r00 = x * x * diffCosAngle + cosAngle;
  var r10 = x * y * diffCosAngle + z * sinAngle;
  var r20 = x * z * diffCosAngle - y * sinAngle;
  var r01 = x * y * diffCosAngle - z * sinAngle;
  var r11 = y * y * diffCosAngle + cosAngle;
  var r21 = y * z * diffCosAngle + x * sinAngle;
  var r02 = x * z * diffCosAngle + y * sinAngle;
  var r12 = y * z * diffCosAngle - x * sinAngle;
  var r22 = z * z * diffCosAngle + cosAngle;
  return goog.vec.Mat3.setFromValues(mat, m00 * r00 + m01 * r10 + m02 * r20, m10 * r00 + m11 * r10 + m12 * r20, m20 * r00 + m21 * r10 + m22 * r20, m00 * r01 + m01 * r11 + m02 * r21, m10 * r01 + m11 * r11 + m12 * r21, m20 * r01 + m21 * r11 + m22 * r21, m00 * r02 + m01 * r12 + m02 * r22, m10 * r02 + m11 * r12 + m12 * r22, m20 * r02 + m21 * r12 + m22 * r22)
};
goog.vec.Mat3.rotateX = function(mat, angle) {
  var m01 = mat[3], m11 = mat[4], m21 = mat[5];
  var m02 = mat[6], m12 = mat[7], m22 = mat[8];
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  mat[3] = m01 * c + m02 * s;
  mat[4] = m11 * c + m12 * s;
  mat[5] = m21 * c + m22 * s;
  mat[6] = m01 * -s + m02 * c;
  mat[7] = m11 * -s + m12 * c;
  mat[8] = m21 * -s + m22 * c;
  return mat
};
goog.vec.Mat3.rotateY = function(mat, angle) {
  var m00 = mat[0], m10 = mat[1], m20 = mat[2];
  var m02 = mat[6], m12 = mat[7], m22 = mat[8];
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  mat[0] = m00 * c + m02 * -s;
  mat[1] = m10 * c + m12 * -s;
  mat[2] = m20 * c + m22 * -s;
  mat[6] = m00 * s + m02 * c;
  mat[7] = m10 * s + m12 * c;
  mat[8] = m20 * s + m22 * c;
  return mat
};
goog.vec.Mat3.rotateZ = function(mat, angle) {
  var m00 = mat[0], m10 = mat[1], m20 = mat[2];
  var m01 = mat[3], m11 = mat[4], m21 = mat[5];
  var c = Math.cos(angle);
  var s = Math.sin(angle);
  mat[0] = m00 * c + m01 * s;
  mat[1] = m10 * c + m11 * s;
  mat[2] = m20 * c + m21 * s;
  mat[3] = m00 * -s + m01 * c;
  mat[4] = m10 * -s + m11 * c;
  mat[5] = m20 * -s + m21 * c;
  return mat
};
goog.vec.Mat3.makeEulerZXZ = function(mat, theta1, theta2, theta3) {
  var c1 = Math.cos(theta1);
  var s1 = Math.sin(theta1);
  var c2 = Math.cos(theta2);
  var s2 = Math.sin(theta2);
  var c3 = Math.cos(theta3);
  var s3 = Math.sin(theta3);
  mat[0] = c1 * c3 - c2 * s1 * s3;
  mat[1] = c2 * c1 * s3 + c3 * s1;
  mat[2] = s3 * s2;
  mat[3] = -c1 * s3 - c3 * c2 * s1;
  mat[4] = c1 * c2 * c3 - s1 * s3;
  mat[5] = c3 * s2;
  mat[6] = s2 * s1;
  mat[7] = -c1 * s2;
  mat[8] = c2;
  return mat
};
goog.vec.Mat3.toEulerZXZ = function(mat, euler, opt_theta2IsNegative) {
  var sinTheta2 = Math.sqrt(mat[2] * mat[2] + mat[5] * mat[5]);
  var signTheta2 = opt_theta2IsNegative ? -1 : 1;
  if(sinTheta2 > goog.vec.EPSILON) {
    euler[2] = Math.atan2(mat[2] * signTheta2, mat[5] * signTheta2);
    euler[1] = Math.atan2(sinTheta2 * signTheta2, mat[8]);
    euler[0] = Math.atan2(mat[6] * signTheta2, -mat[7] * signTheta2)
  }else {
    euler[0] = 0;
    euler[1] = Math.atan2(sinTheta2 * signTheta2, mat[8]);
    euler[2] = Math.atan2(mat[1], mat[0])
  }
  euler[0] = (euler[0] + Math.PI * 2) % (Math.PI * 2);
  euler[2] = (euler[2] + Math.PI * 2) % (Math.PI * 2);
  euler[1] = (euler[1] * signTheta2 + Math.PI * 2) % (Math.PI * 2) * signTheta2;
  return euler
};
goog.provide("X.parserMRC");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parser");
goog.require("X.triplets");
goog.require("goog.vec.Mat3");
goog.require("goog.vec.Mat4");
goog.require("Zlib.Gunzip");
X.parserMRC = function() {
  goog.base(this);
  this._classname = "parserMRC"
};
goog.inherits(X.parserMRC, X.parser);
X.parserMRC.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  var _data = data;
  var MRI = this.parseStream(_data);
  var min = MRI.min;
  var max = MRI.max;
  var _dimensions = [MRI.nx, MRI.ny, MRI.nz];
  object._dimensions = _dimensions;
  var spacingX = MRI.xlen / MRI.mx;
  var spacingY = MRI.ylen / MRI.my;
  var spacingZ = MRI.zlen / MRI.mz;
  object._spacing = [spacingX, spacingY, spacingZ];
  object._min = object._windowLow = min;
  object._max = object._windowHigh = max;
  if(object._lowerThreshold == -Infinity) {
    object._lowerThreshold = min
  }
  if(object._upperThreshold == Infinity) {
    object._upperThreshold = max
  }
  var IJKToRAS = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.setRowValues(IJKToRAS, 3, 0, 0, 0, 1);
  goog.vec.Mat4.setRowValues(IJKToRAS, 0, -1, 0, 0, MRI.nx);
  goog.vec.Mat4.setRowValues(IJKToRAS, 1, 0, 0, -1, MRI.ny);
  goog.vec.Mat4.setRowValues(IJKToRAS, 2, 0, -1, 0, MRI.nz);
  MRI.IJKToRAS = IJKToRAS;
  MRI.RASToIJK = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.invert(MRI.IJKToRAS, MRI.RASToIJK);
  var tar = goog.vec.Vec4.createFloat32FromValues(0, 0, 0, 1);
  var res = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, tar, res);
  var tar2 = goog.vec.Vec4.createFloat32FromValues(1, 1, 1, 1);
  var res2 = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, tar2, res2);
  var _dims = [MRI.nx, MRI.ny, MRI.nz];
  var _rasBB = X.parser.computeRASBBox(IJKToRAS, _dims);
  MRI.RASSpacing = [res2[0] - res[0], res2[1] - res[1], res2[2] - res[2]];
  MRI.RASDimensions = [_rasBB[1] + _rasBB[0] + 1, _rasBB[3] - _rasBB[2] + 1, _rasBB[5] - _rasBB[4] + 1];
  MRI.RASOrigin = [_rasBB[0], _rasBB[2], _rasBB[4]];
  object._dimensions = _dims;
  object.create_(MRI);
  object._image = this.reslice(object);
  X.TIMERSTOP(this._classname + ".parse");
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
X.parserMRC.prototype.parseStream = function(data) {
  this._data = data;
  var MRI = {nx:0, ny:0, nz:0, mode:0, nxstart:0, nystart:0, nzstart:0, mx:0, my:0, mz:0, xlen:0, ylen:0, zlen:0, alpha:0, beta:0, gamma:0, mapc:0, mapr:0, maps:0, amin:0, amax:0, amean:0, ispg:0, next:0, creatid:0, extra:null, nint:0, nreal:0, extra:null, imodStamp:0, imodFlags:0, idtype:0, lens:0, nd1:0, nd2:0, vd1:0, vd2:0, tiltangles:null, xorg:0, yorg:0, zorg:0, cmap:0, stamp:0, rms:0, nlabl:0, data:null, min:Infinity, max:-Infinity, mean:0, space:null, spaceorientation:null, rasspaceorientation:null, 
  orientation:null, normcosine:null};
  this.jumpTo(parseInt(0, 10));
  MRI.nx = this.scan("sint");
  MRI.ny = this.scan("sint");
  MRI.nz = this.scan("sint");
  MRI.mode = this.scan("sint");
  var volsize = MRI.nx * MRI.ny * MRI.nz;
  this.jumpTo(parseInt(1024, 10));
  switch(MRI.mode) {
    case 0:
      MRI.data = this.scan("schar", volsize);
      break;
    case 1:
      MRI.data = this.scan("sshort", volsize);
      break;
    case 2:
      MRI.data = this.scan("float", volsize);
      break;
    case 3:
      MRI.data = this.scan("uint", volsize);
      break;
    case 4:
      MRI.data = this.scan("double", volsize);
      break;
    case 6:
      MRI.data = this.scan("ushort", volsize);
      break;
    case 16:
      MRI.data = this.scan("uchar", volsize);
      break;
    default:
      throw new Error("Unsupported MRC data type: " + MRI.mode);
  }
  this.jumpTo(parseInt(28, 10));
  MRI.mx = this.scan("sint");
  MRI.my = this.scan("sint");
  MRI.mz = this.scan("sint");
  MRI.xlen = this.scan("float");
  MRI.ylen = this.scan("float");
  MRI.zlen = this.scan("float");
  MRI.alpha = this.scan("float");
  MRI.beta = this.scan("float");
  MRI.gamma = this.scan("float");
  MRI.mapc = this.scan("sint");
  MRI.mapr = this.scan("sint");
  MRI.maps = this.scan("sint");
  MRI.amin = this.scan("float");
  MRI.amax = this.scan("float");
  MRI.amean = this.scan("float");
  MRI.ispeg = this.scan("sint");
  MRI.next = this.scan("sint");
  MRI.creatid = this.scan("short");
  MRI.nint = this.scan("short");
  MRI.nreal = this.scan("short");
  MRI.imodStamp = this.scan("sint");
  MRI.imodFLags = this.scan("sint");
  MRI.idtype = this.scan("short");
  MRI.lens = this.scan("short");
  MRI.nd1 = this.scan("short");
  MRI.nd2 = this.scan("short");
  MRI.vd1 = this.scan("short");
  MRI.vd2 = this.scan("short");
  MRI.tiltangles = this.scan("float", 6);
  this.jumpTo(parseInt(196, 10));
  MRI.xorg = this.scan("float");
  MRI.yorg = this.scan("float");
  MRI.zorg = this.scan("float");
  this.jumpTo(parseInt(216, 10));
  MRI.rms = this.scan("float");
  MRI.nlabl = this.scan("sint");
  MRI.lables = this.scan("schar", 10);
  if(MRI.next != 0) {
    this.jumpTo(parseInt(MRI.next + 1024, 10));
    switch(MRI.mode) {
      case 0:
        MRI.data = this.scan("schar", volsize);
        break;
      case 1:
        MRI.data = this.scan("sshort", volsize);
        break;
      case 2:
        MRI.data = this.scan("float", volsize);
        break;
      case 3:
        MRI.data = this.scan("uint", volsize);
        break;
      case 4:
        MRI.data = this.scan("double", volsize);
        break;
      case 6:
        MRI.data = this.scan("ushort", volsize);
        break;
      case 16:
        MRI.data = this.scan("uchar", volsize);
        break;
      default:
        throw new Error("Unsupported MRC data type: " + MRI.mode);
    }
  }
  if(MRI.amean - (MRI.amax - MRI.amean) < 0) {
    MRI.min = MRI.amin;
    MRI.max = MRI.amean + (MRI.amean - MRI.amin)
  }else {
    MRI.min = MRI.amean - (MRI.amax - MRI.amean);
    MRI.max = MRI.amax
  }
  return MRI
};
goog.exportSymbol("X.parserMRC", X.parserMRC);
goog.exportSymbol("X.parserMRC.prototype.parse", X.parserMRC.prototype.parse);
goog.provide("X.parserNRRD");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parser");
goog.require("X.triplets");
goog.require("goog.math.Vec3");
goog.require("goog.vec.Vec4");
goog.require("Zlib.Gunzip");
X.parserNRRD = function() {
  goog.base(this);
  this._classname = "parserNRRD"
};
goog.inherits(X.parserNRRD, X.parser);
X.parserNRRD.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  this._data = data;
  var _bytes = this.scan("uchar", data.byteLength);
  var _length = _bytes.length;
  var _header = null;
  var _data_start = 0;
  var i;
  for(i = 1;i < _length;i++) {
    if(_bytes[i - 1] == 10 && _bytes[i] == 10) {
      _header = this.parseChars(_bytes, 0, i - 2);
      _data_start = i + 1;
      break
    }
  }
  this.parseHeader(_header);
  var _data = _bytes.subarray(_data_start);
  if(this.encoding == "gzip" || this.encoding == "gz") {
    var inflate = new Zlib.Gunzip(new Uint8Array(_data));
    _data = inflate.decompress()
  }
  _data = _data.buffer;
  var MRI = {data:null, min:Infinity, max:-Infinity};
  MRI.data = new this.__array(_data);
  var min_max = this.arrayMinMax(MRI.data);
  var min = MRI.min = min_max[0];
  var max = MRI.max = min_max[1];
  object._min = object._windowLow = min;
  object._max = object._windowHigh = max;
  object._dimensions = [this.sizes[0], this.sizes[1], this.sizes[2]];
  var spacingX = (new goog.math.Vec3(this.vectors[0][0], this.vectors[0][1], this.vectors[0][2])).magnitude();
  var spacingY = (new goog.math.Vec3(this.vectors[1][0], this.vectors[1][1], this.vectors[1][2])).magnitude();
  var spacingZ = (new goog.math.Vec3(this.vectors[2][0], this.vectors[2][1], this.vectors[2][2])).magnitude();
  object._spacing = [spacingX, spacingY, spacingZ];
  if(object._lowerThreshold == -Infinity) {
    object._lowerThreshold = min
  }
  if(object._upperThreshold == Infinity) {
    object._upperThreshold = max
  }
  var _spaceX = 1;
  var _spaceY = 1;
  var _spaceZ = 1;
  if(this.space == "left-posterior-superior") {
    _spaceX = -1;
    _spaceY = -1
  }
  var IJKToRAS = goog.vec.Mat4.createFloat32Identity();
  goog.vec.Mat4.setRowValues(IJKToRAS, 0, _spaceX * this.vectors[0][0], _spaceX * this.vectors[1][0], _spaceX * this.vectors[2][0], _spaceX * this.space_origin[0]);
  goog.vec.Mat4.setRowValues(IJKToRAS, 1, _spaceY * this.vectors[0][1], _spaceY * this.vectors[1][1], _spaceY * this.vectors[2][1], _spaceY * this.space_origin[1]);
  goog.vec.Mat4.setRowValues(IJKToRAS, 2, _spaceZ * this.vectors[0][2], _spaceZ * this.vectors[1][2], _spaceZ * this.vectors[2][2], _spaceZ * this.space_origin[2]);
  goog.vec.Mat4.setRowValues(IJKToRAS, 3, 0, 0, 0, 1);
  MRI.IJKToRAS = IJKToRAS;
  MRI.RASToIJK = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.invert(MRI.IJKToRAS, MRI.RASToIJK);
  var tar = goog.vec.Vec4.createFloat32FromValues(0, 0, 0, 1);
  var res = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, tar, res);
  var tar2 = goog.vec.Vec4.createFloat32FromValues(1, 1, 1, 1);
  var res2 = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, tar2, res2);
  var _rasBB = X.parser.computeRASBBox(IJKToRAS, object._dimensions);
  MRI.RASSpacing = [res2[0] - res[0], res2[1] - res[1], res2[2] - res[2]];
  MRI.RASDimensions = [_rasBB[1] - _rasBB[0] + 1, _rasBB[3] - _rasBB[2] + 1, _rasBB[5] - _rasBB[4] + 1];
  MRI.RASOrigin = [_rasBB[0], _rasBB[2], _rasBB[4]];
  object.create_(MRI);
  X.TIMERSTOP(this._classname + ".parse");
  object._image = this.reslice(object);
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
X.parserNRRD.prototype.parseHeader = function(header) {
  var data, field, fn, i, l, lines, m, _i, _len, _results;
  lines = header.split(/\r?\n/);
  for(_i = 0, _len = lines.length;_i < _len;_i++) {
    l = lines[_i];
    if(l.match(/NRRD\d+/)) {
      this.isNrrd = true
    }else {
      if(l.match(/^#/)) {
      }else {
        if(m = l.match(/(.*):(.*)/)) {
          field = m[1].trim();
          data = m[2].trim();
          fn = this.fieldFunctions[field];
          if(fn) {
            fn.call(this, data)
          }else {
            this[field] = data
          }
        }
      }
    }
  }
  if(!this.isNrrd) {
    throw new Error("Not an NRRD file");
  }
  if(this.encoding !== "raw" && this.encoding !== "gzip" && this.encoding !== "gz") {
    throw new Error("Only raw or gz/gzip encoding is allowed");
  }
  if(!this.vectors) {
    this.vectors = [new goog.math.Vec3(1, 0, 0), new goog.math.Vec3(0, 1, 0), new goog.math.Vec3(0, 0, 1)];
    if(this.spacings) {
      _results = [];
      for(i = 0;i <= 2;i++) {
        _results.push(!isNaN(this.spacings[i]) ? this.vectors[i].scale(this.spacings[i]) : void 0)
      }
      return _results
    }
  }
};
X.parserNRRD.prototype.fieldFunctions = {"type":function(data) {
  switch(data) {
    case "uchar":
    ;
    case "unsigned char":
    ;
    case "uint8":
    ;
    case "uint8_t":
      this.__array = Uint8Array;
      break;
    case "signed char":
    ;
    case "int8":
    ;
    case "int8_t":
      this.__array = Int8Array;
      break;
    case "short":
    ;
    case "short int":
    ;
    case "signed short":
    ;
    case "signed short int":
    ;
    case "int16":
    ;
    case "int16_t":
      this.__array = Int16Array;
      break;
    case "ushort":
    ;
    case "unsigned short":
    ;
    case "unsigned short int":
    ;
    case "uint16":
    ;
    case "uint16_t":
      this.__array = Uint16Array;
      break;
    case "int":
    ;
    case "signed int":
    ;
    case "int32":
    ;
    case "int32_t":
      this.__array = Int32Array;
      break;
    case "uint":
    ;
    case "unsigned int":
    ;
    case "uint32":
    ;
    case "uint32_t":
      this.__array = Uint32Array;
      break;
    case "float":
      this.__array = Float32Array;
      break;
    case "double":
      this.__array = Float64Array;
      break;
    default:
      throw new Error("Unsupported NRRD data type: " + data);
  }
  return this.type = data
}, "endian":function(data) {
  return this.endian = data
}, "encoding":function(data) {
  return this.encoding = data
}, "dimension":function(data) {
  return this.dim = parseInt(data, 10)
}, "sizes":function(data) {
  var i;
  return this.sizes = function() {
    var _i, _len, _ref, _results;
    _ref = data.split(/\s+/);
    _results = [];
    for(_i = 0, _len = _ref.length;_i < _len;_i++) {
      i = _ref[_i];
      _results.push(parseInt(i, 10))
    }
    return _results
  }()
}, "space":function(data) {
  return this.space = data
}, "space origin":function(data) {
  return this.space_origin = data.split("(")[1].split(")")[0].split(",")
}, "space directions":function(data) {
  var f, parts, v;
  parts = data.match(/\(.*?\)/g);
  return this.vectors = function() {
    var _i, _len, _results;
    _results = [];
    for(_i = 0, _len = parts.length;_i < _len;_i++) {
      v = parts[_i];
      _results.push(function() {
        var _j, _len2, _ref, _results2;
        _ref = v.slice(1, -1).split(/,/);
        _results2 = [];
        for(_j = 0, _len2 = _ref.length;_j < _len2;_j++) {
          f = _ref[_j];
          _results2.push(parseFloat(f))
        }
        return _results2
      }())
    }
    return _results
  }()
}, "spacings":function(data) {
  var f, parts;
  parts = data.split(/\s+/);
  return this.spacings = function() {
    var _i, _len, _results;
    _results = [];
    for(_i = 0, _len = parts.length;_i < _len;_i++) {
      f = parts[_i];
      _results.push(parseFloat(f))
    }
    return _results
  }()
}};
goog.exportSymbol("X.parserNRRD", X.parserNRRD);
goog.exportSymbol("X.parserNRRD.prototype.parse", X.parserNRRD.prototype.parse);
goog.provide("X.parserSTL");
goog.require("X.event");
goog.require("X.parser");
goog.require("X.triplets");
X.parserSTL = function() {
  goog.base(this);
  this._classname = "parserSTL"
};
goog.inherits(X.parserSTL, X.parser);
X.parserSTL.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  this._data = data;
  var p = object._points;
  var n = object._normals;
  var _ascii_tag = this.parseChars(this.scan("uchar", 5));
  if(_ascii_tag == "solid") {
    object._points = p = new X.triplets(data.byteLength);
    object._normals = n = new X.triplets(data.byteLength);
    this.parseASCII(p, n, this.scan("uchar", data.byteLength - 5))
  }else {
    this.jumpTo(80);
    var _triangleCount = this.scan("uint");
    object._points = p = new X.triplets(_triangleCount * 9);
    object._normals = n = new X.triplets(_triangleCount * 9);
    this.parseBIN(p, n, _triangleCount)
  }
  X.TIMERSTOP(this._classname + ".parse");
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
X.parserSTL.prototype.parseASCII = function(p, n, data) {
  var _length = data.length;
  var _normalsMode = false;
  var _vertexMode = false;
  var _rangeStart = 0;
  var i;
  for(i = 0;i < _length;i++) {
    if(data[i] == 10) {
      if(_normalsMode || _vertexMode) {
        var _substring = this.parseChars(data, _rangeStart, i);
        var _numbers = _substring.split(" ");
        var x = parseFloat(_numbers[0]);
        var y = parseFloat(_numbers[1]);
        var z = parseFloat(_numbers[2]);
        if(_normalsMode) {
          n.add(x, y, z);
          n.add(x, y, z);
          n.add(x, y, z)
        }else {
          p.add(x, y, z)
        }
        _normalsMode = false;
        _vertexMode = false
      }
    }else {
      if(data[i - 1] == 32) {
        if(data[i] == 102) {
          i += 13;
          _rangeStart = i;
          _normalsMode = true
        }else {
          if(data[i] == 118) {
            i += 7;
            _rangeStart = i;
            _vertexMode = true
          }
        }
      }
    }
  }
};
X.parserSTL.prototype.parseBIN = function(p, n, triangleCount) {
  var i = 0;
  for(i = 0;i < triangleCount;i++) {
    var _bytes = this.scan("float", 12);
    var _normalX = _bytes[0];
    var _normalY = _bytes[1];
    var _normalZ = _bytes[2];
    n.add(_normalX, _normalY, _normalZ);
    n.add(_normalX, _normalY, _normalZ);
    n.add(_normalX, _normalY, _normalZ);
    p.add(_bytes[3], _bytes[4], _bytes[5]);
    p.add(_bytes[6], _bytes[7], _bytes[8]);
    p.add(_bytes[9], _bytes[10], _bytes[11]);
    this._dataPointer += 2
  }
};
goog.exportSymbol("X.parserSTL", X.parserSTL);
goog.exportSymbol("X.parserSTL.prototype.parse", X.parserSTL.prototype.parse);
goog.provide("X.parserNII");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parser");
goog.require("X.triplets");
goog.require("goog.vec.Mat3");
goog.require("goog.vec.Mat4");
goog.require("Zlib.Gunzip");
X.parserNII = function() {
  goog.base(this);
  this._classname = "parserNII"
};
goog.inherits(X.parserNII, X.parser);
X.parserNII.prototype.parse = function(container, object, data, flag) {
  var _data = data;
  var _compressionCheck = -1;
  if(typeof DataView == "undefined") {
    _compressionCheck = (new Int32Array(data, 0, 1))[0]
  }else {
    var dataview = new DataView(data, 0);
    _compressionCheck = dataview.getInt32(0, true)
  }
  if(_compressionCheck != 348) {
    var inflate = new Zlib.Gunzip(new Uint8Array(_data));
    _data = inflate.decompress();
    _data = _data.buffer
  }
  var MRI = this.parseStream(_data);
  var min = MRI.min;
  var max = MRI.max;
  object._min = object._windowLow = min;
  object._max = object._windowHigh = max;
  if(object._lowerThreshold == -Infinity) {
    object._lowerThreshold = min
  }
  if(object._upperThreshold == Infinity) {
    object._upperThreshold = max
  }
  var IJKToRAS = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.setRowValues(IJKToRAS, 3, 0, 0, 0, 1);
  if(MRI.qform_code > 0) {
    var a = 0, b = MRI.quatern_b, c = MRI.quatern_c, d = MRI.quatern_d;
    var xd = 1, yd = 1, zd = 1;
    var qx = MRI.qoffset_x, qy = MRI.qoffset_y, qz = MRI.qoffset_z;
    a = 1 - (b * b + c * c + d * d);
    if(a < 1E-7) {
      a = 1 / Math.sqrt(b * b + c * c + d * d);
      b *= a;
      c *= a;
      d *= a;
      a = 0
    }else {
      a = Math.sqrt(a)
    }
    if(MRI.pixdim[1] > 0) {
      xd = MRI.pixdim[1]
    }
    if(MRI.pixdim[2] > 0) {
      yd = MRI.pixdim[2]
    }
    if(MRI.pixdim[2] > 0) {
      zd = MRI.pixdim[3]
    }
    if(MRI.pixdim[0] < 0) {
      zd = -zd
    }
    goog.vec.Mat4.setRowValues(IJKToRAS, 0, (a * a + b * b - c * c - d * d) * xd, 2 * (b * c - a * d) * yd, 2 * (b * d + a * c) * zd, qx);
    goog.vec.Mat4.setRowValues(IJKToRAS, 1, 2 * (b * c + a * d) * xd, (a * a + c * c - b * b - d * d) * yd, 2 * (c * d - a * b) * zd, qy);
    goog.vec.Mat4.setRowValues(IJKToRAS, 2, 2 * (b * d - a * c) * xd, 2 * (c * d + a * b) * yd, (a * a + d * d - c * c - b * b) * zd, qz)
  }else {
    if(MRI.sform_code > 0) {
      var sx = MRI.srow_x, sy = MRI.srow_y, sz = MRI.srow_z;
      goog.vec.Mat4.setRowValues(IJKToRAS, 0, sx[0], sx[1], sx[2], sx[3]);
      goog.vec.Mat4.setRowValues(IJKToRAS, 1, sy[0], sy[1], sy[2], sy[3]);
      goog.vec.Mat4.setRowValues(IJKToRAS, 2, sz[0], sz[1], sz[2], sz[3])
    }else {
      if(MRI.qform_code == 0) {
        goog.vec.Mat4.setRowValues(IJKToRAS, 0, MRI.pixdim[1], 0, 0, 0);
        goog.vec.Mat4.setRowValues(IJKToRAS, 1, 0, MRI.pixdim[2], 0, 0);
        goog.vec.Mat4.setRowValues(IJKToRAS, 2, 0, 0, MRI.pixdim[3], 0)
      }else {
        window.console.log("UNKNOWN METHOD IN PARSER NII")
      }
    }
  }
  MRI.IJKToRAS = IJKToRAS;
  MRI.RASToIJK = goog.vec.Mat4.createFloat32();
  goog.vec.Mat4.invert(MRI.IJKToRAS, MRI.RASToIJK);
  var tar = goog.vec.Vec4.createFloat32FromValues(0, 0, 0, 1);
  var res = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, tar, res);
  var tar2 = goog.vec.Vec4.createFloat32FromValues(1, 1, 1, 1);
  var res2 = goog.vec.Vec4.createFloat32();
  goog.vec.Mat4.multVec4(IJKToRAS, tar2, res2);
  var _dims = [MRI.dim[1], MRI.dim[2], MRI.dim[3]];
  var _rasBB = X.parser.computeRASBBox(IJKToRAS, _dims);
  MRI.RASSpacing = [res2[0] - res[0], res2[1] - res[1], res2[2] - res[2]];
  MRI.RASDimensions = [_rasBB[1] - _rasBB[0] + 1, _rasBB[3] - _rasBB[2] + 1, _rasBB[5] - _rasBB[4] + 1];
  MRI.RASOrigin = [_rasBB[0], _rasBB[2], _rasBB[4]];
  object._dimensions = _dims;
  object.create_(MRI);
  object._image = this.reslice(object);
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
X.parserNII.prototype.parseStream = function(data) {
  this._data = data;
  var MRI = {sizeof_hdr:0, data_type:null, db_name:null, extents:0, session_error:0, regular:0, dim_info:null, dim:null, intent_p1:0, intent_p2:0, intent_p3:0, intent_code:0, datatype:0, bitpix:0, slice_start:0, pixdim:null, vox_offset:0, scl_slope:0, scl_inter:0, slice_end:0, slice_code:null, xyzt_units:null, cal_max:0, cal_min:0, slice_duration:0, toffset:0, glmax:0, glmin:0, descrip:null, aux_file:null, qform_code:0, sform_code:0, quatern_b:0, quatern_c:0, quatern_d:0, qoffset_x:0, qoffset_y:0, 
  qoffset_z:0, srow_x:null, srow_y:null, srow_z:null, intent_name:null, magic:null, data:null, min:Infinity, max:-Infinity};
  MRI.sizeof_hdr = this.scan("uint");
  MRI.data_type = this.scan("uchar", 10);
  MRI.db_name = this.scan("uchar", 18);
  MRI.extents = this.scan("uint");
  MRI.session_error = this.scan("ushort");
  MRI.regular = this.scan("uchar");
  MRI.dim_info = this.scan("uchar");
  MRI.dim = this.scan("ushort", 8);
  MRI.intent_p1 = this.scan("float");
  MRI.intent_p2 = this.scan("float");
  MRI.intent_p3 = this.scan("float");
  MRI.intent_code = this.scan("ushort");
  MRI.datatype = this.scan("ushort");
  MRI.bitpix = this.scan("ushort");
  MRI.slice_start = this.scan("ushort");
  MRI.pixdim = this.scan("float", 8);
  MRI.vox_offset = this.scan("float");
  MRI.scl_slope = this.scan("float");
  MRI.scl_inter = this.scan("float");
  MRI.slice_end = this.scan("ushort");
  MRI.slice_code = this.scan("uchar");
  MRI.xyzt_units = this.scan("uchar");
  MRI.cal_max = this.scan("float");
  MRI.cal_min = this.scan("float");
  MRI.slice_duration = this.scan("float");
  MRI.toffset = this.scan("float");
  MRI.glmax = this.scan("uint", 1);
  MRI.glmin = this.scan("uint", 1);
  MRI.descrip = this.scan("uchar", 80);
  MRI.aux_file = this.scan("uchar", 24);
  MRI.qform_code = this.scan("ushort");
  MRI.sform_code = this.scan("ushort");
  MRI.quatern_b = this.scan("float");
  MRI.quatern_c = this.scan("float");
  MRI.quatern_d = this.scan("float");
  MRI.qoffset_x = this.scan("float");
  MRI.qoffset_y = this.scan("float");
  MRI.qoffset_z = this.scan("float");
  MRI.srow_x = this.scan("float", 4);
  MRI.srow_y = this.scan("float", 4);
  MRI.srow_z = this.scan("float", 4);
  MRI.intent_name = this.scan("uchar", 16);
  MRI.magic = this.scan("uchar", 4);
  this.jumpTo(parseInt(MRI.vox_offset, 10));
  var volsize = MRI.dim[1] * MRI.dim[2] * MRI.dim[3];
  switch(MRI.datatype) {
    case 2:
      MRI.data = this.scan("uchar", volsize);
      break;
    case 4:
      MRI.data = this.scan("sshort", volsize);
      break;
    case 8:
      MRI.data = this.scan("sint", volsize);
      break;
    case 16:
      MRI.data = this.scan("float", volsize);
      break;
    case 32:
      MRI.data = this.scan("complex", volsize);
      break;
    case 64:
      MRI.data = this.scan("double", volsize);
      break;
    case 256:
      MRI.data = this.scan("schar", volsize);
      break;
    case 512:
      MRI.data = this.scan("ushort", volsize);
      break;
    case 768:
      MRI.data = this.scan("uint", volsize);
      break;
    default:
      throw new Error("Unsupported NII data type: " + MRI.datatype);
  }
  var min_max = this.arrayMinMax(MRI.data);
  MRI.min = min_max[0];
  MRI.max = min_max[1];
  return MRI
};
goog.exportSymbol("X.parserNII", X.parserNII);
goog.exportSymbol("X.parserNII.prototype.parse", X.parserNII.prototype.parse);
goog.provide("X.parserTRK");
goog.require("X.event");
goog.require("X.parser");
goog.require("X.triplets");
goog.require("goog.math.Vec3");
X.parserTRK = function() {
  goog.base(this);
  this._classname = "parserTRK"
};
goog.inherits(X.parserTRK, X.parser);
X.parserTRK.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  var p = object._points;
  var n = object._normals;
  var c = object._colors;
  this._data = data;
  var header = {"id_string":this.scan("uchar", 6), "dim":this.scan("ushort", 3), "voxel_size":this.scan("float", 3), "origin":this.scan("float", 3), "n_scalars":this.scan("ushort"), "scalar_name":this.scan("uchar", 200), "n_properties":this.scan("ushort"), "property_name":this.scan("uchar", 200), "vox_to_ras":this.scan("float", 16), "reserved":this.scan("uchar", 444), "voxel_order":this.scan("uchar", 4), "pad2":this.scan("uchar", 4), "image_orientation_patient":this.scan("float", 6), "pad1":this.scan("uchar", 
  2), "invert_x":this.scan("uchar"), "invert_y":this.scan("uchar"), "invert_z":this.scan("uchar"), "swap_xy":this.scan("uchar"), "swap_yz":this.scan("uchar"), "swap_zx":this.scan("uchar"), "n_count":this.scan("uint"), "version":this.scan("uint"), "hdr_size":this.scan("uint")};
  var numberOfFibers = header.n_count;
  var numberOfScalars = header.n_scalars;
  var fibers = [];
  var lengths = [];
  var minLength = Infinity;
  var maxLength = -Infinity;
  var minX = null;
  var maxX = null;
  var minY = null;
  var maxY = null;
  var minZ = null;
  var maxZ = null;
  var _numPoints = this.scan("uint", (this._data.byteLength - 1E3) / 4);
  this.jumpTo(header.hdr_size);
  var _points = this.scan("float", (this._data.byteLength - 1E3) / 4);
  var offset = 0;
  var _totalPoints = 0;
  var i;
  for(i = 0;i < numberOfFibers;i++) {
    var numPoints = _numPoints[offset];
    var currentPoints = new X.triplets(numPoints * 3);
    var length = 0;
    for(var j = 0;j < numPoints;j++) {
      var x = _points[offset + j * 3 + j * numberOfScalars + 1];
      var y = _points[offset + j * 3 + j * numberOfScalars + 2];
      var z = _points[offset + j * 3 + j * numberOfScalars + 3];
      x = x / header.voxel_size[0];
      y = y / header.voxel_size[1];
      z = z / header.voxel_size[2];
      currentPoints.add(x, y, z);
      if(j > 0) {
        var oldPoint = currentPoints.get(j - 1);
        length += Math.sqrt(Math.pow(x - oldPoint[0], 2) + Math.pow(y - oldPoint[1], 2) + Math.pow(z - oldPoint[2], 2))
      }
      if(j < numPoints - 1) {
        _totalPoints += 6
      }
    }
    offset += numPoints * 3 + numPoints * numberOfScalars + 1;
    var cMinX = currentPoints._minA;
    var cMaxX = currentPoints._maxA;
    var cMinY = currentPoints._minB;
    var cMaxY = currentPoints._maxB;
    var cMinZ = currentPoints._minC;
    var cMaxZ = currentPoints._maxC;
    if(!minX || cMinX < minX) {
      minX = cMinX
    }
    if(!maxX || cMaxX > maxX) {
      maxX = cMaxX
    }
    if(!minY || cMinY < minY) {
      minY = cMinY
    }
    if(!maxY || cMaxY > maxY) {
      maxY = cMaxY
    }
    if(!minZ || cMinZ < minZ) {
      minZ = cMinZ
    }
    if(!maxZ || cMaxZ > maxZ) {
      maxZ = cMaxZ
    }
    fibers.push(currentPoints);
    lengths.push(length)
  }
  var centerX = (minX + maxX) / 2;
  var centerY = (minY + maxY) / 2;
  var centerZ = (minZ + maxZ) / 2;
  var scalarArray = new Float32Array(_totalPoints);
  object._points = p = new X.triplets(_totalPoints);
  object._normals = n = new X.triplets(_totalPoints);
  object._colors = c = new X.triplets(_totalPoints);
  var _scalarIndex = 0;
  for(i = 0;i < numberOfFibers;i++) {
    var points = fibers[i];
    var numberOfPoints = points.count;
    var length = lengths[i];
    minLength = Math.min(minLength, length);
    maxLength = Math.max(maxLength, length);
    for(var j = 0;j < numberOfPoints - 1;j++) {
      var currentPoint = points.get(j);
      var nextPoint = points.get(j + 1);
      p.add(currentPoint[0], currentPoint[1], currentPoint[2]);
      p.add(nextPoint[0], nextPoint[1], nextPoint[2]);
      var nCurrentPointX = currentPoint[0] - centerX;
      var nCurrentPointY = currentPoint[1] - centerY;
      var nCurrentPointZ = currentPoint[2] - centerZ;
      var nCurrentPointLength = Math.sqrt(nCurrentPointX * nCurrentPointX + nCurrentPointY * nCurrentPointY + nCurrentPointZ * nCurrentPointZ);
      var nNextPointX = nextPoint[0] - centerX;
      var nNextPointY = nextPoint[1] - centerY;
      var nNextPointZ = nextPoint[2] - centerZ;
      var nNextPointLength = Math.sqrt(nNextPointX * nNextPointX + nNextPointY * nNextPointY + nNextPointZ * nNextPointZ);
      n.add(nCurrentPointX / nCurrentPointLength, nCurrentPointY / nCurrentPointLength, nCurrentPointZ / nCurrentPointLength);
      n.add(nNextPointX / nNextPointLength, nNextPointY / nNextPointLength, nNextPointZ / nNextPointLength);
      var start = currentPoint;
      var end = nextPoint;
      var diff = [Math.abs(end[0] - start[0]), Math.abs(end[1] - start[1]), Math.abs(end[2] - start[2])];
      var distance = Math.sqrt(diff[0] * diff[0] + diff[1] * diff[1] + diff[2] * diff[2]);
      diff[0] /= distance;
      diff[1] /= distance;
      diff[2] /= distance;
      c.add(diff[0], diff[1], diff[2]);
      c.add(diff[0], diff[1], diff[2]);
      scalarArray[_scalarIndex++] = length;
      scalarArray[_scalarIndex++] = length;
      scalarArray[_scalarIndex++] = length;
      scalarArray[_scalarIndex++] = length;
      scalarArray[_scalarIndex++] = length;
      scalarArray[_scalarIndex++] = length
    }
  }
  object._type = X.displayable.types.LINES;
  var scalars = new X.scalars;
  scalars._min = minLength;
  scalars._max = maxLength;
  scalars._lowerThreshold = minLength;
  scalars._upperThreshold = maxLength;
  scalars._glArray = scalarArray;
  scalars._replaceMode = false;
  scalars._dirty = true;
  object._scalars = scalars;
  var vox_to_ras_defined = false;
  for(i = 0;i < 16;i++) {
    if(header.vox_to_ras[i] != 0) {
      vox_to_ras_defined = true;
      break
    }
  }
  if(vox_to_ras_defined == false) {
    header.vox_to_ras[0] = header.vox_to_ras[5] = header.vox_to_ras[10] = header.vox_to_ras[15] = 1
  }
  X.TIMERSTOP(this._classname + ".parse");
  X.matrix.transpose(header.vox_to_ras, object._transform._matrix);
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
goog.exportSymbol("X.parserTRK", X.parserTRK);
goog.exportSymbol("X.parserTRK.prototype.parse", X.parserTRK.prototype.parse);
goog.provide("X.parserOBJ");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parser");
goog.require("X.triplets");
X.parserOBJ = function() {
  goog.base(this);
  this._classname = "parserOBJ"
};
goog.inherits(X.parserOBJ, X.parser);
X.parserOBJ.prototype.parse = function(container, object, data, flag) {
  X.TIMER(this._classname + ".parse");
  this._data = data;
  var _length = data.byteLength;
  var byteData = this.scan("uchar", _length);
  var _pts = [];
  object._points = new X.triplets(_length);
  object._normals = new X.triplets(_length);
  var p = object._points;
  var n = object._normals;
  var _rangeStart = 0;
  var i;
  for(i = 0;i < _length;++i) {
    if(byteData[i] == 10) {
      var _substring = this.parseChars(byteData, _rangeStart, i);
      var _d = _substring.replace(/\s{2,}/g, " ").split(" ");
      if(_d[0] == "v") {
        var x = parseFloat(_d[1]);
        var y = parseFloat(_d[2]);
        var z = parseFloat(_d[3]);
        _pts.push([x, y, z])
      }else {
        if(_d[0] == "f") {
          var p1 = _pts[parseInt(_d[1], 10) - 1];
          var p2 = _pts[parseInt(_d[2], 10) - 1];
          var p3 = _pts[parseInt(_d[3], 10) - 1];
          p.add(p1[0], p1[1], p1[2]);
          p.add(p2[0], p2[1], p2[2]);
          p.add(p3[0], p3[1], p3[2]);
          var v1 = new goog.math.Vec3(p1[0], p1[1], p1[2]);
          var v2 = new goog.math.Vec3(p2[0], p2[1], p2[2]);
          var v3 = new goog.math.Vec3(p3[0], p3[1], p3[2]);
          var norm = goog.math.Vec3.cross(v2.subtract(v1), v3.subtract(v1));
          norm.normalize();
          n.add(norm.x, norm.y, norm.z);
          n.add(norm.x, norm.y, norm.z);
          n.add(norm.x, norm.y, norm.z)
        }
      }
      _rangeStart = i + 1
    }
  }
  X.TIMERSTOP(this._classname + ".parse");
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = object;
  modifiedEvent._container = container;
  this.dispatchEvent(modifiedEvent)
};
goog.exportSymbol("X.parserOBJ", X.parserOBJ);
goog.exportSymbol("X.parserOBJ.prototype.parse", X.parserOBJ.prototype.parse);
goog.provide("X.loader");
goog.require("X.base");
goog.require("X.event");
goog.require("X.object");
goog.require("X.parserCRV");
goog.require("X.parserDCM");
goog.require("X.parserFSM");
goog.require("X.parserIMAGE");
goog.require("X.parserLBL");
goog.require("X.parserLUT");
goog.require("X.parserMGZ");
goog.require("X.parserNII");
goog.require("X.parserMRC");
goog.require("X.parserNRRD");
goog.require("X.parserOBJ");
goog.require("X.parserOFF");
goog.require("X.parserRAW");
goog.require("X.parserSTL");
goog.require("X.parserTRK");
goog.require("X.parserVTK");
goog.require("goog.structs.Map");
X.loader = function() {
  goog.base(this);
  this._classname = "loader";
  this._jobs = new goog.structs.Map;
  this._progress = 0
};
goog.inherits(X.loader, X.base);
X.loader.prototype.completed = function() {
  return!this._jobs.containsValue(false)
};
X.loader.prototype.addProgress = function(value) {
  this._progress += value / this._jobs.getCount() / 3;
  this._progress = Math.min(1, this._progress);
  var progressEvent = new X.event.ProgressEvent;
  progressEvent._value = this._progress;
  this.dispatchEvent(progressEvent)
};
X.loader.prototype.checkFileFormat = function(container) {
  var filepath = container._file._path;
  var extension = filepath.split(".").pop().toUpperCase();
  if(extension == filepath.toUpperCase()) {
    extension = ""
  }
  if(!(extension in X.loader.extensions)) {
    throw new Error("The " + extension + " file format is not supported.");
  }
  return[filepath, extension, X.loader.extensions[extension][0], X.loader.extensions[extension][1], X.loader.extensions[extension][2]]
};
X.loader.prototype.load = function(container, object) {
  if(!container || !object) {
    throw new Error("No container or object to load.");
  }
  if(this._jobs.containsKey(container._id) && !this._jobs.get(container._id)) {
    return
  }
  this._jobs.set(container._id, false);
  var _checkresult = this.checkFileFormat(container);
  var filepath = _checkresult[0];
  if(container._filedata != null) {
    this.parse(null, container, object);
    return
  }
  var request = new XMLHttpRequest;
  goog.events.listen(request, "abort", this.failed.bind(this, request, container, object));
  goog.events.listen(request, "error", this.failed.bind(this, request, container, object));
  goog.events.listen(request, "load", this.parse.bind(this, request, container, object));
  request.open("GET", filepath, true);
  request.responseType = "arraybuffer";
  request.send(null)
};
X.loader.prototype.parse = function(request, container, object) {
  this.addProgress(1);
  setTimeout(function() {
    var _checkresult = this.checkFileFormat(container);
    var parser = _checkresult[2];
    var flags = _checkresult[3];
    var _parser = new parser;
    goog.events.listenOnce(_parser, X.event.events.MODIFIED, this.complete.bind(this));
    var _data = container._filedata;
    if(_data == null) {
      _data = request.response;
      container._filedata = _data
    }
    _parser.parse(container, object, _data, flags)
  }.bind(this), 100)
};
X.loader.prototype.complete = function(event) {
  this.addProgress(1);
  setTimeout(function() {
    var container = event._container;
    var object = event._object;
    container._file._dirty = false;
    container._dirty = true;
    object.modified();
    this._jobs.set(container._id, true)
  }.bind(this), 100)
};
X.loader.prototype.failed = function(request, container, object) {
  throw new Error("Loading failed: ", container, object);
};
X.loader.extensions = {"OBJ":[X.parserOBJ, null], "OFF":[X.parserOFF, null], "STL":[X.parserSTL, null], "VTK":[X.parserVTK, null], "TRK":[X.parserTRK, null], "MRC":[X.parserMRC, null], "ST":[X.parserMRC, null], "FSM":[X.parserFSM, null], "INFLATED":[X.parserFSM, null], "SMOOTHWM":[X.parserFSM, null], "SPHERE":[X.parserFSM, null], "PIAL":[X.parserFSM, null], "ORIG":[X.parserFSM, null], "NRRD":[X.parserNRRD, null], "NII":[X.parserNII, null], "GZ":[X.parserNII, null], "DCM":[X.parserDCM, null], "DICOM":[X.parserDCM, 
null], "":[X.parserDCM, null], "CRV":[X.parserCRV, null], "LABEL":[X.parserLBL, null], "MGH":[X.parserMGZ, false], "MGZ":[X.parserMGZ, true], "RAW":[X.parserRAW, false], "RZ":[X.parserRAW, true], "TXT":[X.parserLUT, null], "LUT":[X.parserLUT, null], "PNG":[X.parserIMAGE, "png"], "JPG":[X.parserIMAGE, "jpeg"], "JPEG":[X.parserIMAGE, "jpeg"], "GIF":[X.parserIMAGE, "gif"]};
goog.provide("CSG.cylinder");
goog.require("CSG");
goog.require("csgVector");
goog.require("csgPolygon");
goog.require("csgVertex");
CSG.cylinder = function(options) {
  goog.base(this);
  options = options || {};
  var s = new csgVector(options.start || [0, -1, 0]);
  var e = new csgVector(options.end || [0, 1, 0]);
  var ray = e.minus(s);
  var r = options.radius || 1;
  var slices = options.slices || 16;
  var axisZ = ray.unit(), isY = Math.abs(axisZ.y()) > 0.5;
  var axisX = (new csgVector(isY, !isY, 0)).cross(axisZ).unit();
  var axisY = axisX.cross(axisZ).unit();
  var start = new csgVertex(s, axisZ.negated());
  var end = new csgVertex(e, axisZ.unit());
  var polygons = [];
  function point(stack, slice, normalBlend) {
    var angle = slice * Math.PI * 2;
    var out = axisX.times(Math.cos(angle)).plus(axisY.times(Math.sin(angle)));
    var pos = s.plus(ray.times(stack)).plus(out.times(r));
    var normal = out.times(1 - Math.abs(normalBlend)).plus(axisZ.times(normalBlend));
    return new csgVertex(pos, normal)
  }
  for(var i = 0;i < slices;i++) {
    var t0 = i / slices, t1 = (i + 1) / slices;
    polygons.push(new csgPolygon([start, point(0, t0, -1), point(0, t1, -1)]));
    polygons.push(new csgPolygon([point(0, t1, 0), point(0, t0, 0), point(1, t0, 0), point(1, t1, 0)]));
    polygons.push(new csgPolygon([end, point(1, t1, 1), point(1, t0, 1)]))
  }
  return CSG.fromPolygons(polygons)
};
goog.inherits(CSG.cylinder, CSG);
goog.provide("X.cylinder");
goog.require("CSG.cylinder");
goog.require("X.base");
goog.require("X.constructable");
goog.require("X.object");
X.cylinder = function() {
  goog.base(this);
  this._classname = "cylinder";
  this._start = [-10, -10, -10];
  this._end = [10, 10, 10];
  this._radius = 10;
  this._slices = 32;
  inject(this, new X.constructable)
};
goog.inherits(X.cylinder, X.object);
X.cylinder.prototype.__defineGetter__("start", function() {
  return this._start
});
X.cylinder.prototype.__defineSetter__("start", function(start) {
  if(!goog.isDefAndNotNull(start) || !goog.isArray(start) || start.length != 3) {
    throw new Error("Invalid start");
  }
  this._start = start
});
X.cylinder.prototype.__defineGetter__("end", function() {
  return this._end
});
X.cylinder.prototype.__defineSetter__("end", function(end) {
  if(!goog.isDefAndNotNull(end) || !goog.isArray(end) || end.length != 3) {
    throw new Error("Invalid end");
  }
  this._end = end
});
X.cylinder.prototype.__defineGetter__("radius", function() {
  return this._radius
});
X.cylinder.prototype.__defineSetter__("radius", function(radius) {
  if(!goog.isNumber(radius)) {
    throw new Error("Invalid radius.");
  }
  this._radius = radius
});
X.cylinder.prototype.modified = function() {
  this.fromCSG(new CSG.cylinder({start:this._start, end:this._end, radius:this._radius, slices:this._slices}));
  goog.base(this, "modified")
};
goog.exportSymbol("X.cylinder", X.cylinder);
goog.exportSymbol("X.cylinder.prototype.modified", X.cylinder.prototype.modified);
goog.provide("CSG.sphere");
goog.require("CSG");
goog.require("csgVector");
goog.require("csgPolygon");
goog.require("csgVertex");
CSG.sphere = function(options) {
  goog.base(this);
  options = options || {};
  var c = new csgVector(options.center || [0, 0, 0]);
  var r = options.radius || 1;
  var slices = options.slices || 16;
  var stacks = options.stacks || 8;
  var polygons = [], vertices = [];
  function vertex(theta, phi) {
    theta *= Math.PI * 2;
    phi *= Math.PI;
    var dir = new csgVector(Math.cos(theta) * Math.sin(phi), Math.cos(phi), Math.sin(theta) * Math.sin(phi));
    vertices.push(new csgVertex(c.plus(dir.times(r)), dir))
  }
  for(var i = 0;i < slices;i++) {
    for(var j = 0;j < stacks;j++) {
      vertices = [];
      vertex(i / slices, j / stacks);
      if(j > 0) {
        vertex((i + 1) / slices, j / stacks)
      }
      if(j < stacks - 1) {
        vertex((i + 1) / slices, (j + 1) / stacks)
      }
      vertex(i / slices, (j + 1) / stacks);
      polygons.push(new csgPolygon(vertices))
    }
  }
  return CSG.fromPolygons(polygons)
};
goog.inherits(CSG.sphere, CSG);
goog.provide("X.sphere");
goog.require("CSG.sphere");
goog.require("X.base");
goog.require("X.constructable");
goog.require("X.object");
X.sphere = function() {
  goog.base(this);
  this._classname = "sphere";
  this._center = [0, 0, 0];
  this._radius = 5;
  this._slices = 32;
  this._stacks = 16;
  inject(this, new X.constructable)
};
goog.inherits(X.sphere, X.object);
X.sphere.prototype.__defineGetter__("center", function() {
  return this._center
});
X.sphere.prototype.__defineSetter__("center", function(center) {
  if(!goog.isDefAndNotNull(center) || !goog.isArray(center) || center.length != 3) {
    throw new Error("Invalid center");
  }
  this._center = center
});
X.sphere.prototype.__defineGetter__("radius", function() {
  return this._radius
});
X.sphere.prototype.__defineSetter__("radius", function(radius) {
  if(!goog.isNumber(radius)) {
    throw new Error("Invalid radius.");
  }
  this._radius = radius
});
X.sphere.prototype.modified = function() {
  this.fromCSG(new CSG.sphere({center:this._center, radius:this._radius, slices:this._slices, stacks:this._stacks}));
  goog.base(this, "modified")
};
goog.exportSymbol("X.sphere", X.sphere);
goog.exportSymbol("X.sphere.prototype.modified", X.sphere.prototype.modified);
goog.provide("X.labelmap");
goog.require("X.volume");
X.labelmap = function(volume) {
  goog.base(this);
  this._classname = "labelmap";
  this._volume = volume;
  this._showOnlyColor = new Float32Array([-255, -255, -255, -255])
};
goog.inherits(X.labelmap, X.volume);
X.labelmap.prototype.modified = function() {
  var modifiedEvent = new X.event.ModifiedEvent;
  modifiedEvent._object = this;
  this.dispatchEvent(modifiedEvent);
  this._volume.modified()
};
X.labelmap.prototype.__defineSetter__("showOnly", function(label) {
  var _color = [-1, -1, -1, -1];
  if(goog.isDefAndNotNull(label)) {
    if(goog.isArray(label) && label.length == 4) {
      _color = label
    }else {
      if(!this._colortable) {
        throw new Error("No colortable assigned.");
      }
      _color = this._colortable._map.get(label).slice(1, 5)
    }
  }
  this._showOnlyColor = new Float32Array([Math.floor(_color[0] * 255), Math.floor(_color[1] * 255), Math.floor(_color[2] * 255), Math.floor(_color[3] * 255)])
});
goog.exportSymbol("X.labelmap", X.labelmap);
goog.provide("CSG.cube");
goog.require("CSG");
goog.require("csgVector");
goog.require("csgPolygon");
goog.require("csgVertex");
CSG.cube = function(options) {
  goog.base(this);
  options = options || {};
  var c = new csgVector(options.center || [0, 0, 0]);
  var r = !options.radius ? [1, 1, 1] : options.radius.length ? options.radius : [options.radius, options.radius, options.radius];
  return CSG.fromPolygons([[[0, 4, 6, 2], [-1, 0, 0]], [[1, 3, 7, 5], [+1, 0, 0]], [[0, 1, 5, 4], [0, -1, 0]], [[2, 6, 7, 3], [0, +1, 0]], [[0, 2, 3, 1], [0, 0, -1]], [[4, 5, 7, 6], [0, 0, +1]]].map(function(info) {
    return new csgPolygon(info[0].map(function(i) {
      var pos = new csgVector(c.x() + r[0] * (2 * !!(i & 1) - 1), c.y() + r[1] * (2 * !!(i & 2) - 1), c.z() + r[2] * (2 * !!(i & 4) - 1));
      return new csgVertex(pos, new csgVector(info[1]))
    }))
  }))
};
goog.inherits(CSG.cube, CSG);
goog.provide("X.cube");
goog.require("CSG.cube");
goog.require("X.base");
goog.require("X.constructable");
goog.require("X.object");
X.cube = function() {
  goog.base(this);
  this._classname = "cube";
  this._center = [0, 0, 0];
  this._lengthX = 20;
  this._lengthY = 20;
  this._lengthZ = 20;
  this._textureCoordinateMap = [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0];
  inject(this, new X.constructable)
};
goog.inherits(X.cube, X.object);
X.cube.prototype.__defineGetter__("center", function() {
  return this._center
});
X.cube.prototype.__defineSetter__("center", function(center) {
  if(!goog.isDefAndNotNull(center) || !goog.isArray(center) || center.length != 3) {
    throw new Error("Invalid center");
  }
  this._center = center
});
X.cube.prototype.__defineGetter__("lengthX", function() {
  return this._lengthX
});
X.cube.prototype.__defineSetter__("lengthX", function(lengthX) {
  if(!goog.isNumber(lengthX)) {
    throw new Error("Invalid lengthX.");
  }
  this._lengthX = lengthX
});
X.cube.prototype.__defineGetter__("lengthY", function() {
  return this._lengthY
});
X.cube.prototype.__defineSetter__("lengthY", function(lengthY) {
  if(!goog.isNumber(lengthY)) {
    throw new Error("Invalid lengthY.");
  }
  this._lengthY = lengthY
});
X.cube.prototype.__defineGetter__("lengthZ", function() {
  return this._lengthZ
});
X.cube.prototype.__defineSetter__("lengthZ", function(lengthZ) {
  if(!goog.isNumber(lengthZ)) {
    throw new Error("Invalid lengthZ.");
  }
  this._lengthZ = lengthZ
});
X.cube.prototype.modified = function() {
  this.fromCSG(new CSG.cube({center:this._center, radius:[this._lengthX / 2, this._lengthY / 2, this._lengthZ / 2]}));
  goog.base(this, "modified")
};
goog.exportSymbol("X.cube", X.cube);
goog.exportSymbol("X.cube.prototype.modified", X.cube.prototype.modified);
goog.provide("X.interactor3D");
goog.require("X.interactor");
X.interactor3D = function(element) {
  goog.base(this, element);
  this._classname = "interactor3D";
  this._clear_all = false
};
goog.inherits(X.interactor3D, X.interactor);
X.interactor3D.prototype.onMouseWheel_ = function(event) {
  goog.base(this, "onMouseWheel_", event);
  var e = new X.event.ZoomEvent;
  if(!goog.isDefAndNotNull(event.deltaY)) {
    event.deltaY = 0
  }
  e._in = event.deltaY < 0;
  e._fast = true;
  this.dispatchEvent(e)
};
goog.provide("X.array");
goog.require("X.base");
X.array = function(comparator) {
  goog.base(this);
  this._classname = "array";
  this._array = [];
  this._comparator = comparator
};
goog.inherits(X.array, X.base);
X.array.compare = function(arr1, arr2, offset1, offset2, _length) {
  for(var i = 0;i < _length;i++) {
    if(arr1[i + offset1] !== arr2[i + offset2]) {
      return false
    }
  }
  return true
};
X.array.prototype.add = function(object) {
  this._array.push(object);
  return true
};
X.array.prototype.remove = function(object) {
  var _index = this._array.indexOf(object);
  if(_index > -1) {
    this._array.splice(_index, 1)
  }
  return true
};
X.array.prototype.clear = function() {
  this._array.length = 0
};
X.array.prototype.swap_ = function(index1, index2) {
  var tmp = this._array[index1];
  this._array[index1] = this._array[index2];
  this._array[index2] = tmp
};
X.array.prototype.insert_ = function(begin, end, v) {
  while(begin + 1 < end && this._comparator(this._array[begin + 1], v) < 0) {
    this.swap_(begin, begin + 1);
    ++begin
  }
  this._array[begin] = v
};
X.array.prototype.merge_inplace_ = function(begin, begin_right, end) {
  for(;begin < begin_right;++begin) {
    if(this._comparator(this._array[begin], this._array[begin_right]) > 0) {
      var v = this._array[begin];
      this._array[begin] = this._array[begin_right];
      this.insert_(begin_right, end, v)
    }
  }
};
X.array.prototype.msort_ = function(begin, end) {
  var size = end - begin;
  if(size < 2) {
    return
  }
  var begin_right = begin + Math.floor(size / 2);
  this.msort_(begin, begin_right);
  this.msort_(begin_right, end);
  this.merge_inplace_(begin, begin_right, end)
};
X.array.prototype.sort = function() {
  this.msort_(0, this._array.length)
};
X.array.prototype.values = function() {
  return this._array
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = []
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_ || this, this);
  return this
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key)
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_ || this, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return":" + (this.nextId_++).toString(36)
};
goog.ui.IdGenerator.instance = goog.ui.IdGenerator.getInstance();
goog.provide("goog.ui.Component");
goog.provide("goog.ui.Component.Error");
goog.provide("goog.ui.Component.EventType");
goog.provide("goog.ui.Component.State");
goog.require("goog.array");
goog.require("goog.array.ArrayLike");
goog.require("goog.dom");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.object");
goog.require("goog.style");
goog.require("goog.ui.IdGenerator");
goog.ui.Component = function(opt_domHelper) {
  goog.events.EventTarget.call(this);
  this.dom_ = opt_domHelper || goog.dom.getDomHelper();
  this.rightToLeft_ = goog.ui.Component.defaultRightToLeft_
};
goog.inherits(goog.ui.Component, goog.events.EventTarget);
goog.ui.Component.prototype.idGenerator_ = goog.ui.IdGenerator.getInstance();
goog.ui.Component.defaultRightToLeft_ = null;
goog.ui.Component.EventType = {BEFORE_SHOW:"beforeshow", SHOW:"show", HIDE:"hide", DISABLE:"disable", ENABLE:"enable", HIGHLIGHT:"highlight", UNHIGHLIGHT:"unhighlight", ACTIVATE:"activate", DEACTIVATE:"deactivate", SELECT:"select", UNSELECT:"unselect", CHECK:"check", UNCHECK:"uncheck", FOCUS:"focus", BLUR:"blur", OPEN:"open", CLOSE:"close", ENTER:"enter", LEAVE:"leave", ACTION:"action", CHANGE:"change"};
goog.ui.Component.Error = {NOT_SUPPORTED:"Method not supported", DECORATE_INVALID:"Invalid element to decorate", ALREADY_RENDERED:"Component already rendered", PARENT_UNABLE_TO_BE_SET:"Unable to set parent component", CHILD_INDEX_OUT_OF_BOUNDS:"Child component index out of bounds", NOT_OUR_CHILD:"Child is not in parent component", NOT_IN_DOCUMENT:"Operation not supported while component is not in document", STATE_INVALID:"Invalid component state"};
goog.ui.Component.State = {ALL:255, DISABLED:1, HOVER:2, ACTIVE:4, SELECTED:8, CHECKED:16, FOCUSED:32, OPENED:64};
goog.ui.Component.getStateTransitionEvent = function(state, isEntering) {
  switch(state) {
    case goog.ui.Component.State.DISABLED:
      return isEntering ? goog.ui.Component.EventType.DISABLE : goog.ui.Component.EventType.ENABLE;
    case goog.ui.Component.State.HOVER:
      return isEntering ? goog.ui.Component.EventType.HIGHLIGHT : goog.ui.Component.EventType.UNHIGHLIGHT;
    case goog.ui.Component.State.ACTIVE:
      return isEntering ? goog.ui.Component.EventType.ACTIVATE : goog.ui.Component.EventType.DEACTIVATE;
    case goog.ui.Component.State.SELECTED:
      return isEntering ? goog.ui.Component.EventType.SELECT : goog.ui.Component.EventType.UNSELECT;
    case goog.ui.Component.State.CHECKED:
      return isEntering ? goog.ui.Component.EventType.CHECK : goog.ui.Component.EventType.UNCHECK;
    case goog.ui.Component.State.FOCUSED:
      return isEntering ? goog.ui.Component.EventType.FOCUS : goog.ui.Component.EventType.BLUR;
    case goog.ui.Component.State.OPENED:
      return isEntering ? goog.ui.Component.EventType.OPEN : goog.ui.Component.EventType.CLOSE;
    default:
  }
  throw Error(goog.ui.Component.Error.STATE_INVALID);
};
goog.ui.Component.setDefaultRightToLeft = function(rightToLeft) {
  goog.ui.Component.defaultRightToLeft_ = rightToLeft
};
goog.ui.Component.prototype.id_ = null;
goog.ui.Component.prototype.dom_;
goog.ui.Component.prototype.inDocument_ = false;
goog.ui.Component.prototype.element_ = null;
goog.ui.Component.prototype.googUiComponentHandler_;
goog.ui.Component.prototype.rightToLeft_ = null;
goog.ui.Component.prototype.model_ = null;
goog.ui.Component.prototype.parent_ = null;
goog.ui.Component.prototype.children_ = null;
goog.ui.Component.prototype.childIndex_ = null;
goog.ui.Component.prototype.wasDecorated_ = false;
goog.ui.Component.prototype.getId = function() {
  return this.id_ || (this.id_ = this.idGenerator_.getNextUniqueId())
};
goog.ui.Component.prototype.setId = function(id) {
  if(this.parent_ && this.parent_.childIndex_) {
    goog.object.remove(this.parent_.childIndex_, this.id_);
    goog.object.add(this.parent_.childIndex_, id, this)
  }
  this.id_ = id
};
goog.ui.Component.prototype.getElement = function() {
  return this.element_
};
goog.ui.Component.prototype.getElementStrict = function() {
  var el = this.element_;
  goog.asserts.assert(el, "Can not call getElementStrict before rendering/decorating.");
  return el
};
goog.ui.Component.prototype.setElementInternal = function(element) {
  this.element_ = element
};
goog.ui.Component.prototype.getElementsByClass = function(className) {
  return this.element_ ? this.dom_.getElementsByClass(className, this.element_) : []
};
goog.ui.Component.prototype.getElementByClass = function(className) {
  return this.element_ ? this.dom_.getElementByClass(className, this.element_) : null
};
goog.ui.Component.prototype.getHandler = function() {
  return this.googUiComponentHandler_ || (this.googUiComponentHandler_ = new goog.events.EventHandler(this))
};
goog.ui.Component.prototype.setParent = function(parent) {
  if(this == parent) {
    throw Error(goog.ui.Component.Error.PARENT_UNABLE_TO_BE_SET);
  }
  if(parent && this.parent_ && this.id_ && this.parent_.getChild(this.id_) && this.parent_ != parent) {
    throw Error(goog.ui.Component.Error.PARENT_UNABLE_TO_BE_SET);
  }
  this.parent_ = parent;
  goog.ui.Component.superClass_.setParentEventTarget.call(this, parent)
};
goog.ui.Component.prototype.getParent = function() {
  return this.parent_
};
goog.ui.Component.prototype.setParentEventTarget = function(parent) {
  if(this.parent_ && this.parent_ != parent) {
    throw Error(goog.ui.Component.Error.NOT_SUPPORTED);
  }
  goog.ui.Component.superClass_.setParentEventTarget.call(this, parent)
};
goog.ui.Component.prototype.getDomHelper = function() {
  return this.dom_
};
goog.ui.Component.prototype.isInDocument = function() {
  return this.inDocument_
};
goog.ui.Component.prototype.createDom = function() {
  this.element_ = this.dom_.createElement("div")
};
goog.ui.Component.prototype.render = function(opt_parentElement) {
  this.render_(opt_parentElement)
};
goog.ui.Component.prototype.renderBefore = function(sibling) {
  this.render_(sibling.parentNode, sibling)
};
goog.ui.Component.prototype.render_ = function(opt_parentElement, opt_beforeNode) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(!this.element_) {
    this.createDom()
  }
  if(opt_parentElement) {
    opt_parentElement.insertBefore(this.element_, opt_beforeNode || null)
  }else {
    this.dom_.getDocument().body.appendChild(this.element_)
  }
  if(!this.parent_ || this.parent_.isInDocument()) {
    this.enterDocument()
  }
};
goog.ui.Component.prototype.decorate = function(element) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }else {
    if(element && this.canDecorate(element)) {
      this.wasDecorated_ = true;
      if(!this.dom_ || this.dom_.getDocument() != goog.dom.getOwnerDocument(element)) {
        this.dom_ = goog.dom.getDomHelper(element)
      }
      this.decorateInternal(element);
      this.enterDocument()
    }else {
      throw Error(goog.ui.Component.Error.DECORATE_INVALID);
    }
  }
};
goog.ui.Component.prototype.canDecorate = function(element) {
  return true
};
goog.ui.Component.prototype.wasDecorated = function() {
  return this.wasDecorated_
};
goog.ui.Component.prototype.decorateInternal = function(element) {
  this.element_ = element
};
goog.ui.Component.prototype.enterDocument = function() {
  this.inDocument_ = true;
  this.forEachChild(function(child) {
    if(!child.isInDocument() && child.getElement()) {
      child.enterDocument()
    }
  })
};
goog.ui.Component.prototype.exitDocument = function() {
  this.forEachChild(function(child) {
    if(child.isInDocument()) {
      child.exitDocument()
    }
  });
  if(this.googUiComponentHandler_) {
    this.googUiComponentHandler_.removeAll()
  }
  this.inDocument_ = false
};
goog.ui.Component.prototype.disposeInternal = function() {
  if(this.inDocument_) {
    this.exitDocument()
  }
  if(this.googUiComponentHandler_) {
    this.googUiComponentHandler_.dispose();
    delete this.googUiComponentHandler_
  }
  this.forEachChild(function(child) {
    child.dispose()
  });
  if(!this.wasDecorated_ && this.element_) {
    goog.dom.removeNode(this.element_)
  }
  this.children_ = null;
  this.childIndex_ = null;
  this.element_ = null;
  this.model_ = null;
  this.parent_ = null;
  goog.ui.Component.superClass_.disposeInternal.call(this)
};
goog.ui.Component.prototype.makeId = function(idFragment) {
  return this.getId() + "." + idFragment
};
goog.ui.Component.prototype.makeIds = function(object) {
  var ids = {};
  for(var key in object) {
    ids[key] = this.makeId(object[key])
  }
  return ids
};
goog.ui.Component.prototype.getModel = function() {
  return this.model_
};
goog.ui.Component.prototype.setModel = function(obj) {
  this.model_ = obj
};
goog.ui.Component.prototype.getFragmentFromId = function(id) {
  return id.substring(this.getId().length + 1)
};
goog.ui.Component.prototype.getElementByFragment = function(idFragment) {
  if(!this.inDocument_) {
    throw Error(goog.ui.Component.Error.NOT_IN_DOCUMENT);
  }
  return this.dom_.getElement(this.makeId(idFragment))
};
goog.ui.Component.prototype.addChild = function(child, opt_render) {
  this.addChildAt(child, this.getChildCount(), opt_render)
};
goog.ui.Component.prototype.addChildAt = function(child, index, opt_render) {
  if(child.inDocument_ && (opt_render || !this.inDocument_)) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(index < 0 || index > this.getChildCount()) {
    throw Error(goog.ui.Component.Error.CHILD_INDEX_OUT_OF_BOUNDS);
  }
  if(!this.childIndex_ || !this.children_) {
    this.childIndex_ = {};
    this.children_ = []
  }
  if(child.getParent() == this) {
    goog.object.set(this.childIndex_, child.getId(), child);
    goog.array.remove(this.children_, child)
  }else {
    goog.object.add(this.childIndex_, child.getId(), child)
  }
  child.setParent(this);
  goog.array.insertAt(this.children_, child, index);
  if(child.inDocument_ && this.inDocument_ && child.getParent() == this) {
    var contentElement = this.getContentElement();
    contentElement.insertBefore(child.getElement(), contentElement.childNodes[index] || null)
  }else {
    if(opt_render) {
      if(!this.element_) {
        this.createDom()
      }
      var sibling = this.getChildAt(index + 1);
      child.render_(this.getContentElement(), sibling ? sibling.element_ : null)
    }else {
      if(this.inDocument_ && !child.inDocument_ && child.element_ && child.element_.parentNode && child.element_.parentNode.nodeType == goog.dom.NodeType.ELEMENT) {
        child.enterDocument()
      }
    }
  }
};
goog.ui.Component.prototype.getContentElement = function() {
  return this.element_
};
goog.ui.Component.prototype.isRightToLeft = function() {
  if(this.rightToLeft_ == null) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.inDocument_ ? this.element_ : this.dom_.getDocument().body)
  }
  return this.rightToLeft_
};
goog.ui.Component.prototype.setRightToLeft = function(rightToLeft) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  this.rightToLeft_ = rightToLeft
};
goog.ui.Component.prototype.hasChildren = function() {
  return!!this.children_ && this.children_.length != 0
};
goog.ui.Component.prototype.getChildCount = function() {
  return this.children_ ? this.children_.length : 0
};
goog.ui.Component.prototype.getChildIds = function() {
  var ids = [];
  this.forEachChild(function(child) {
    ids.push(child.getId())
  });
  return ids
};
goog.ui.Component.prototype.getChild = function(id) {
  return this.childIndex_ && id ? goog.object.get(this.childIndex_, id) || null : null
};
goog.ui.Component.prototype.getChildAt = function(index) {
  return this.children_ ? this.children_[index] || null : null
};
goog.ui.Component.prototype.forEachChild = function(f, opt_obj) {
  if(this.children_) {
    goog.array.forEach(this.children_, f, opt_obj)
  }
};
goog.ui.Component.prototype.indexOfChild = function(child) {
  return this.children_ && child ? goog.array.indexOf(this.children_, child) : -1
};
goog.ui.Component.prototype.removeChild = function(child, opt_unrender) {
  if(child) {
    var id = goog.isString(child) ? child : child.getId();
    child = this.getChild(id);
    if(id && child) {
      goog.object.remove(this.childIndex_, id);
      goog.array.remove(this.children_, child);
      if(opt_unrender) {
        child.exitDocument();
        if(child.element_) {
          goog.dom.removeNode(child.element_)
        }
      }
      child.setParent(null)
    }
  }
  if(!child) {
    throw Error(goog.ui.Component.Error.NOT_OUR_CHILD);
  }
  return child
};
goog.ui.Component.prototype.removeChildAt = function(index, opt_unrender) {
  return this.removeChild(this.getChildAt(index), opt_unrender)
};
goog.ui.Component.prototype.removeChildren = function(opt_unrender) {
  var removedChildren = [];
  while(this.hasChildren()) {
    removedChildren.push(this.removeChildAt(0, opt_unrender))
  }
  return removedChildren
};
goog.provide("goog.a11y.aria.Role");
goog.a11y.aria.Role = {ALERT:"alert", ALERTDIALOG:"alertdialog", APPLICATION:"application", ARTICLE:"article", BANNER:"banner", BUTTON:"button", CHECKBOX:"checkbox", COLUMNHEADER:"columnheader", COMBOBOX:"combobox", COMPLEMENTARY:"complementary", CONTENTINFO:"contentinfo", DEFINITION:"definition", DIALOG:"dialog", DIRECTORY:"directory", DOCUMENT:"document", FORM:"form", GRID:"grid", GRIDCELL:"gridcell", GROUP:"group", HEADING:"heading", IMG:"img", LINK:"link", LIST:"list", LISTBOX:"listbox", LISTITEM:"listitem", 
LOG:"log", MAIN:"main", MARQUEE:"marquee", MATH:"math", MENU:"menu", MENUBAR:"menubar", MENU_ITEM:"menuitem", MENU_ITEM_CHECKBOX:"menuitemcheckbox", MENU_ITEM_RADIO:"menuitemradio", NAVIGATION:"navigation", NOTE:"note", OPTION:"option", PRESENTATION:"presentation", PROGRESSBAR:"progressbar", RADIO:"radio", RADIOGROUP:"radiogroup", REGION:"region", ROW:"row", ROWGROUP:"rowgroup", ROWHEADER:"rowheader", SCROLLBAR:"scrollbar", SEARCH:"search", SEPARATOR:"separator", SLIDER:"slider", SPINBUTTON:"spinbutton", 
STATUS:"status", TAB:"tab", TAB_LIST:"tablist", TAB_PANEL:"tabpanel", TEXTBOX:"textbox", TIMER:"timer", TOOLBAR:"toolbar", TOOLTIP:"tooltip", TREE:"tree", TREEGRID:"treegrid", TREEITEM:"treeitem"};
goog.provide("goog.a11y.aria.LivePriority");
goog.provide("goog.a11y.aria.State");
goog.a11y.aria.State = {ACTIVEDESCENDANT:"activedescendant", ATOMIC:"atomic", AUTOCOMPLETE:"autocomplete", BUSY:"busy", CHECKED:"checked", CONTROLS:"controls", DESCRIBEDBY:"describedby", DISABLED:"disabled", DROPEFFECT:"dropeffect", EXPANDED:"expanded", FLOWTO:"flowto", GRABBED:"grabbed", HASPOPUP:"haspopup", HIDDEN:"hidden", INVALID:"invalid", LABEL:"label", LABELLEDBY:"labelledby", LEVEL:"level", LIVE:"live", MULTILINE:"multiline", MULTISELECTABLE:"multiselectable", ORIENTATION:"orientation", OWNS:"owns", 
POSINSET:"posinset", PRESSED:"pressed", READONLY:"readonly", RELEVANT:"relevant", REQUIRED:"required", SELECTED:"selected", SETSIZE:"setsize", SORT:"sort", VALUEMAX:"valuemax", VALUEMIN:"valuemin", VALUENOW:"valuenow", VALUETEXT:"valuetext"};
goog.a11y.aria.LivePriority = {OFF:"off", POLITE:"polite", ASSERTIVE:"assertive"};
goog.provide("goog.a11y.aria");
goog.require("goog.a11y.aria.Role");
goog.require("goog.a11y.aria.State");
goog.require("goog.dom");
goog.a11y.aria.setRole = function(element, roleName) {
  element.setAttribute("role", roleName)
};
goog.a11y.aria.getRole = function(element) {
  return element.getAttribute("role") || ""
};
goog.a11y.aria.setState = function(element, state, value) {
  element.setAttribute("aria-" + state, value)
};
goog.a11y.aria.getState = function(element, stateName) {
  var attrb = element.getAttribute("aria-" + stateName);
  if(attrb === true || attrb === false) {
    return attrb ? "true" : "false"
  }else {
    if(!attrb) {
      return""
    }else {
      return String(attrb)
    }
  }
};
goog.a11y.aria.getActiveDescendant = function(element) {
  var id = goog.a11y.aria.getState(element, goog.a11y.aria.State.ACTIVEDESCENDANT);
  return goog.dom.getOwnerDocument(element).getElementById(id)
};
goog.a11y.aria.setActiveDescendant = function(element, activeElement) {
  goog.a11y.aria.setState(element, goog.a11y.aria.State.ACTIVEDESCENDANT, activeElement ? activeElement.id : "")
};
goog.a11y.aria.getLabel = function(element) {
  return goog.a11y.aria.getState(element, goog.a11y.aria.State.LABEL)
};
goog.a11y.aria.setLabel = function(element, label) {
  goog.a11y.aria.setState(element, goog.a11y.aria.State.LABEL, label)
};
goog.provide("goog.ui.RangeModel");
goog.require("goog.events.EventTarget");
goog.require("goog.ui.Component.EventType");
goog.ui.RangeModel = function() {
  goog.events.EventTarget.call(this)
};
goog.inherits(goog.ui.RangeModel, goog.events.EventTarget);
goog.ui.RangeModel.prototype.value_ = 0;
goog.ui.RangeModel.prototype.minimum_ = 0;
goog.ui.RangeModel.prototype.maximum_ = 100;
goog.ui.RangeModel.prototype.extent_ = 0;
goog.ui.RangeModel.prototype.step_ = 1;
goog.ui.RangeModel.prototype.isChanging_ = false;
goog.ui.RangeModel.prototype.mute_ = false;
goog.ui.RangeModel.prototype.setMute = function(muteValue) {
  this.mute_ = muteValue
};
goog.ui.RangeModel.prototype.setValue = function(value) {
  value = this.roundToStepWithMin(value);
  if(this.value_ != value) {
    if(value + this.extent_ > this.maximum_) {
      this.value_ = this.maximum_ - this.extent_
    }else {
      if(value < this.minimum_) {
        this.value_ = this.minimum_
      }else {
        this.value_ = value
      }
    }
    if(!this.isChanging_ && !this.mute_) {
      this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
    }
  }
};
goog.ui.RangeModel.prototype.getValue = function() {
  return this.roundToStepWithMin(this.value_)
};
goog.ui.RangeModel.prototype.setExtent = function(extent) {
  extent = this.roundToStepWithMin(extent);
  if(this.extent_ != extent) {
    if(extent < 0) {
      this.extent_ = 0
    }else {
      if(this.value_ + extent > this.maximum_) {
        this.extent_ = this.maximum_ - this.value_
      }else {
        this.extent_ = extent
      }
    }
    if(!this.isChanging_ && !this.mute_) {
      this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
    }
  }
};
goog.ui.RangeModel.prototype.getExtent = function() {
  return this.roundToStep(this.extent_)
};
goog.ui.RangeModel.prototype.setMinimum = function(minimum) {
  if(this.minimum_ != minimum) {
    var oldIsChanging = this.isChanging_;
    this.isChanging_ = true;
    this.minimum_ = minimum;
    if(minimum + this.extent_ > this.maximum_) {
      this.extent_ = this.maximum_ - this.minimum_
    }
    if(minimum > this.value_) {
      this.setValue(minimum)
    }
    if(minimum > this.maximum_) {
      this.extent_ = 0;
      this.setMaximum(minimum);
      this.setValue(minimum)
    }
    this.isChanging_ = oldIsChanging;
    if(!this.isChanging_ && !this.mute_) {
      this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
    }
  }
};
goog.ui.RangeModel.prototype.getMinimum = function() {
  return this.roundToStepWithMin(this.minimum_)
};
goog.ui.RangeModel.prototype.setMaximum = function(maximum) {
  maximum = this.roundToStepWithMin(maximum);
  if(this.maximum_ != maximum) {
    var oldIsChanging = this.isChanging_;
    this.isChanging_ = true;
    this.maximum_ = maximum;
    if(maximum < this.value_ + this.extent_) {
      this.setValue(maximum - this.extent_)
    }
    if(maximum < this.minimum_) {
      this.extent_ = 0;
      this.setMinimum(maximum);
      this.setValue(this.maximum_)
    }
    if(maximum < this.minimum_ + this.extent_) {
      this.extent_ = this.maximum_ - this.minimum_
    }
    this.isChanging_ = oldIsChanging;
    if(!this.isChanging_ && !this.mute_) {
      this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
    }
  }
};
goog.ui.RangeModel.prototype.getMaximum = function() {
  return this.roundToStepWithMin(this.maximum_)
};
goog.ui.RangeModel.prototype.getStep = function() {
  return this.step_
};
goog.ui.RangeModel.prototype.setStep = function(step) {
  if(this.step_ != step) {
    this.step_ = step;
    var oldIsChanging = this.isChanging_;
    this.isChanging_ = true;
    this.setMaximum(this.getMaximum());
    this.setExtent(this.getExtent());
    this.setValue(this.getValue());
    this.isChanging_ = oldIsChanging;
    if(!this.isChanging_ && !this.mute_) {
      this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
    }
  }
};
goog.ui.RangeModel.prototype.roundToStepWithMin = function(value) {
  if(this.step_ == null) {
    return value
  }
  return this.minimum_ + Math.round((value - this.minimum_) / this.step_) * this.step_
};
goog.ui.RangeModel.prototype.roundToStep = function(value) {
  if(this.step_ == null) {
    return value
  }
  return Math.round(value / this.step_) * this.step_
};
goog.provide("goog.ui.ProgressBar");
goog.provide("goog.ui.ProgressBar.Orientation");
goog.require("goog.a11y.aria");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("goog.ui.Component");
goog.require("goog.ui.RangeModel");
goog.require("goog.userAgent");
goog.ui.ProgressBar = function(opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.rangeModel_ = new goog.ui.RangeModel;
  goog.events.listen(this.rangeModel_, goog.ui.Component.EventType.CHANGE, this.handleChange_, false, this)
};
goog.inherits(goog.ui.ProgressBar, goog.ui.Component);
goog.ui.ProgressBar.Orientation = {VERTICAL:"vertical", HORIZONTAL:"horizontal"};
goog.ui.ProgressBar.ORIENTATION_TO_CSS_NAME_ = {};
goog.ui.ProgressBar.ORIENTATION_TO_CSS_NAME_[goog.ui.ProgressBar.Orientation.VERTICAL] = goog.getCssName("progress-bar-vertical");
goog.ui.ProgressBar.ORIENTATION_TO_CSS_NAME_[goog.ui.ProgressBar.Orientation.HORIZONTAL] = goog.getCssName("progress-bar-horizontal");
goog.ui.ProgressBar.prototype.createDom = function() {
  this.thumbElement_ = this.createThumb_();
  var cs = goog.ui.ProgressBar.ORIENTATION_TO_CSS_NAME_[this.orientation_];
  this.setElementInternal(this.getDomHelper().createDom("div", cs, this.thumbElement_));
  this.setValueState_();
  this.setMinimumState_();
  this.setMaximumState_()
};
goog.ui.ProgressBar.prototype.enterDocument = function() {
  goog.ui.ProgressBar.superClass_.enterDocument.call(this);
  this.attachEvents_();
  this.updateUi_();
  var element = this.getElement();
  goog.asserts.assert(element, "The progress bar DOM element cannot be null.");
  goog.a11y.aria.setRole(element, "progressbar");
  goog.a11y.aria.setState(element, "live", "polite")
};
goog.ui.ProgressBar.prototype.exitDocument = function() {
  goog.ui.ProgressBar.superClass_.exitDocument.call(this);
  this.detachEvents_()
};
goog.ui.ProgressBar.prototype.createThumb_ = function() {
  return this.getDomHelper().createDom("div", goog.getCssName("progress-bar-thumb"))
};
goog.ui.ProgressBar.prototype.attachEvents_ = function() {
  if(goog.userAgent.IE && goog.userAgent.VERSION < 7) {
    goog.events.listen(this.getElement(), goog.events.EventType.RESIZE, this.updateUi_, false, this)
  }
};
goog.ui.ProgressBar.prototype.detachEvents_ = function() {
  if(goog.userAgent.IE && goog.userAgent.VERSION < 7) {
    goog.events.unlisten(this.getElement(), goog.events.EventType.RESIZE, this.updateUi_, false, this)
  }
};
goog.ui.ProgressBar.prototype.decorateInternal = function(element) {
  goog.ui.ProgressBar.superClass_.decorateInternal.call(this, element);
  goog.dom.classes.add(this.getElement(), goog.ui.ProgressBar.ORIENTATION_TO_CSS_NAME_[this.orientation_]);
  var thumb = goog.dom.getElementsByTagNameAndClass(null, goog.getCssName("progress-bar-thumb"), this.getElement())[0];
  if(!thumb) {
    thumb = this.createThumb_();
    this.getElement().appendChild(thumb)
  }
  this.thumbElement_ = thumb
};
goog.ui.ProgressBar.prototype.getValue = function() {
  return this.rangeModel_.getValue()
};
goog.ui.ProgressBar.prototype.setValue = function(v) {
  this.rangeModel_.setValue(v);
  if(this.getElement()) {
    this.setValueState_()
  }
};
goog.ui.ProgressBar.prototype.setValueState_ = function() {
  var element = this.getElement();
  goog.asserts.assert(element, "The progress bar DOM element cannot be null.");
  goog.a11y.aria.setState(element, "valuenow", this.getValue())
};
goog.ui.ProgressBar.prototype.getMinimum = function() {
  return this.rangeModel_.getMinimum()
};
goog.ui.ProgressBar.prototype.setMinimum = function(v) {
  this.rangeModel_.setMinimum(v);
  if(this.getElement()) {
    this.setMinimumState_()
  }
};
goog.ui.ProgressBar.prototype.setMinimumState_ = function() {
  var element = this.getElement();
  goog.asserts.assert(element, "The progress bar DOM element cannot be null.");
  goog.a11y.aria.setState(element, "valuemin", this.getMinimum())
};
goog.ui.ProgressBar.prototype.getMaximum = function() {
  return this.rangeModel_.getMaximum()
};
goog.ui.ProgressBar.prototype.setMaximum = function(v) {
  this.rangeModel_.setMaximum(v);
  if(this.getElement()) {
    this.setMaximumState_()
  }
};
goog.ui.ProgressBar.prototype.setMaximumState_ = function() {
  var element = this.getElement();
  goog.asserts.assert(element, "The progress bar DOM element cannot be null.");
  goog.a11y.aria.setState(element, "valuemax", this.getMaximum())
};
goog.ui.ProgressBar.prototype.orientation_ = goog.ui.ProgressBar.Orientation.HORIZONTAL;
goog.ui.ProgressBar.prototype.handleChange_ = function(e) {
  this.updateUi_();
  this.dispatchEvent(goog.ui.Component.EventType.CHANGE)
};
goog.ui.ProgressBar.prototype.updateUi_ = function() {
  if(this.thumbElement_) {
    var min = this.getMinimum();
    var max = this.getMaximum();
    var val = this.getValue();
    var ratio = (val - min) / (max - min);
    var size = Math.round(ratio * 100);
    if(this.orientation_ == goog.ui.ProgressBar.Orientation.VERTICAL) {
      if(goog.userAgent.IE && goog.userAgent.VERSION < 7) {
        this.thumbElement_.style.top = 0;
        this.thumbElement_.style.height = "100%";
        var h = this.thumbElement_.offsetHeight;
        var bottom = Math.round(ratio * h);
        this.thumbElement_.style.top = h - bottom + "px";
        this.thumbElement_.style.height = bottom + "px"
      }else {
        this.thumbElement_.style.top = 100 - size + "%";
        this.thumbElement_.style.height = size + "%"
      }
    }else {
      this.thumbElement_.style.width = size + "%"
    }
  }
};
goog.ui.ProgressBar.prototype.initializeUi_ = function() {
  var tStyle = this.thumbElement_.style;
  if(this.orientation_ == goog.ui.ProgressBar.Orientation.VERTICAL) {
    tStyle.left = 0;
    tStyle.width = "100%"
  }else {
    tStyle.top = tStyle.left = 0;
    tStyle.height = "100%"
  }
};
goog.ui.ProgressBar.prototype.setOrientation = function(orient) {
  if(this.orientation_ != orient) {
    var oldCss = goog.ui.ProgressBar.ORIENTATION_TO_CSS_NAME_[this.orientation_];
    var newCss = goog.ui.ProgressBar.ORIENTATION_TO_CSS_NAME_[orient];
    this.orientation_ = orient;
    if(this.getElement()) {
      goog.dom.classes.swap(this.getElement(), oldCss, newCss);
      this.initializeUi_();
      this.updateUi_()
    }
  }
};
goog.ui.ProgressBar.prototype.getOrientation = function() {
  return this.orientation_
};
goog.ui.ProgressBar.prototype.disposeInternal = function() {
  this.detachEvents_();
  goog.ui.ProgressBar.superClass_.disposeInternal.call(this);
  this.thumbElement_ = null;
  this.rangeModel_.dispose()
};
goog.ui.ProgressBar.prototype.getStep = function() {
  return this.rangeModel_.getStep()
};
goog.ui.ProgressBar.prototype.setStep = function(step) {
  this.rangeModel_.setStep(step)
};
goog.provide("X.progressbar");
goog.require("X.base");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.ui.ProgressBar");
X.progressbar = function(parent, initialvalue) {
  if(!goog.isDefAndNotNull(parent)) {
    throw new Error("No valid parent element.");
  }
  if(!goog.isDefAndNotNull(initialvalue)) {
    throw new Error("Invalid initial value.");
  }
  goog.base(this);
  this._classname = "progressbar";
  this._parent = parent;
  this._parent_position_original = "";
  this._style = null;
  this._doneProgressBar = null;
  this._css = [];
  var css1 = ".progress-bar-horizontal {\n";
  css1 += "  position: relative;\n";
  css1 += "  border: 1px solid #949dad;\n";
  css1 += "  background: white;\n";
  css1 += "  padding: 1px;\n";
  css1 += "  overflow: hidden;\n";
  css1 += "  margin: 2px;\n";
  css1 += "  width: 100px;\n";
  css1 += "  height: 5px;\n";
  css1 += "}";
  var css2 = ".progress-bar-thumb {\n";
  css2 += "  position: relative;\n";
  css2 += "  background: #F62217;\n";
  css2 += "  overflow: hidden;\n";
  css2 += "  width: 0%;\n";
  css2 += "  height: 100%;\n";
  css2 += "}";
  var css3 = ".progress-bar-thumb-done {\n";
  css3 += "  background: #57E964;\n";
  css3 += "}";
  this._css = [css1, css2, css3];
  this.setValue(initialvalue);
  this.init_()
};
goog.inherits(X.progressbar, goog.ui.ProgressBar);
X.progressbar.prototype.init_ = function() {
  var position = goog.style.getComputedStyle(this._parent, "position");
  if(position == "static" || position == "") {
    this._parent_position_original = this._parent.style.position;
    this._parent.style.position = "relative"
  }
  var head = goog.dom.getDocument().getElementsByTagName("head")[0];
  var style = goog.dom.createDom("style");
  style.type = "text/css";
  style.media = "screen";
  var css = goog.dom.createTextNode(this._css[0]);
  var css2 = goog.dom.createTextNode(this._css[1]);
  var css3 = goog.dom.createTextNode(this._css[2]);
  goog.dom.appendChild(head, style);
  goog.dom.appendChild(style, css);
  goog.dom.appendChild(style, css2);
  goog.dom.appendChild(style, css3);
  this._style = style;
  this.render(this._parent);
  var pbElement = this.getElement();
  pbElement.style.position = "absolute";
  pbElement.style.top = (this._parent.clientHeight - 5) / 2 + "px";
  pbElement.style.left = (this._parent.clientWidth - 100) / 2 + "px";
  pbElement.classList.add("xtk-progress-bar")
};
X.progressbar.prototype.done = function() {
  var top = this.getElement().style.top;
  var left = this.getElement().style.left;
  goog.dom.removeNode(this.getElement());
  var pb = new X.progressbar(this._parent, 100);
  var pbElement = pb.getElement();
  pbElement.style.position = "absolute";
  pbElement.style.top = top;
  pbElement.style.left = left;
  pbElement.classList.add("xtk-progress-bar");
  var pbBar = goog.dom.getFirstElementChild(pbElement);
  pbBar.classList.add("progress-bar-thumb-done");
  this._doneProgressBar = pb
};
X.progressbar.prototype.kill = function() {
  if(this._style) {
    goog.dom.removeNode(this._style)
  }
  if(this.getElement()) {
    goog.dom.removeNode(this.getElement())
  }
  if(this._doneProgressBar) {
    goog.dom.removeNode(this._doneProgressBar.getElement())
  }
  this._style = null;
  this._doneProgressBar = null;
  if(this._parent_position_original) {
    this._parent.style.position = this._parent_position_original
  }
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("X.renderer");
goog.require("X.array");
goog.require("X.base");
goog.require("X.camera");
goog.require("X.camera2D");
goog.require("X.camera3D");
goog.require("X.cube");
goog.require("X.cylinder");
goog.require("X.event");
goog.require("X.interactor");
goog.require("X.interactor2D");
goog.require("X.interactor3D");
goog.require("X.labelmap");
goog.require("X.loader");
goog.require("X.object");
goog.require("X.progressbar");
goog.require("X.sphere");
goog.require("X.volume");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("goog.Timer");
X.renderer = function() {
  goog.base(this);
  this._classname = "renderer";
  this._container = window.document.body;
  this._width = this._container.clientWidth;
  this._height = this._container.clientHeight;
  this._canvas = null;
  this._camera = null;
  this._interactor = null;
  this._objects = new X.array(X.object.OPACITY_COMPARATOR);
  this._topLevelObjects = new Array;
  this._loader = null;
  this._locked = false;
  this._loadingCompleted = false;
  this._onShowtime = false;
  this._progressBar = null;
  this._progressBar2 = null;
  this._context = null;
  this._config = {"PROGRESSBAR_ENABLED":true, "INTERMEDIATE_RENDERING":false, "SLICENAVIGATORS":true};
  this._AnimationFrameID = -1;
  window.console.log("XTK release 10 -- 2014-08-22 10:29:23 -- http://www.goXTK.com -- @goXTK")
};
goog.inherits(X.renderer, X.base);
X.renderer.prototype.onComputing = function(event) {
  window.cancelAnimationFrame(this._AnimationFrameID);
  if(this._config["PROGRESSBAR_ENABLED"]) {
    this._progressBar2 = new X.progressbar(this._container, 3)
  }
};
X.renderer.prototype.onComputingEnd = function(event) {
  if(this._config["PROGRESSBAR_ENABLED"]) {
    if(this._progressBar2) {
      this._progressBar2.done();
      this.__readyCheckTimer2 = goog.Timer.callOnce(function() {
        this.__readyCheckTimer2 = null;
        if(this._progressBar2) {
          this._progressBar2.kill();
          this._progressBar2 = null
        }
        this._onShowtime = true;
        this._loadingCompleted = true;
        this.render()
      }.bind(this), 700);
      return
    }
  }
};
X.renderer.prototype.onComputingProgress = function(event) {
  if(this._progressBar2) {
    var _progress = event._value;
    this._progressBar2.setValue(_progress * 100)
  }
};
X.renderer.prototype.onProgress = function(event) {
  if(this._progressBar) {
    var _progress = event._value;
    this._progressBar.setValue(_progress * 100)
  }
};
X.renderer.prototype.onModified = function(event) {
  if(goog.isDefAndNotNull(event) && event instanceof X.event.ModifiedEvent) {
    if(!event._object) {
      return
    }
    this.update_(event._object)
  }
};
X.renderer.prototype.onRemove = function(event) {
  if(goog.isDefAndNotNull(event) && event instanceof X.event.RemoveEvent) {
    if(!event._object) {
      return
    }
    this.remove(event._object)
  }
};
X.renderer.prototype.onHover_ = function(event) {
  if(!goog.isDefAndNotNull(event) || !(event instanceof X.event.HoverEvent)) {
    throw new Error("Invalid hover event.");
  }
};
X.renderer.prototype.onResize_ = function() {
  var container = goog.dom.getElement(this._container);
  this._width = container.clientWidth;
  this._height = container.clientHeight;
  var canvas = goog.dom.getElement(this._canvas);
  canvas.width = this._width;
  canvas.height = this._height;
  if(this._classname == "renderer3D") {
    this._context.viewport(0, 0, this._width, this._height);
    this._camera._perspective = X.matrix.makePerspective(X.matrix.identity(), this._camera._fieldOfView, this._canvas.width / this._canvas.height, 1, 1E4)
  }
};
X.renderer.prototype.onScroll_ = function(event) {
  if(!goog.isDefAndNotNull(event) || !(event instanceof X.event.ScrollEvent)) {
    throw new Error("Invalid scroll event.");
  }
};
X.renderer.prototype.__defineGetter__("config", function() {
  return this._config
});
X.renderer.prototype.__defineGetter__("interactor", function() {
  return this._interactor
});
X.renderer.prototype.__defineGetter__("camera", function() {
  return this._camera
});
X.renderer.prototype.__defineGetter__("loadingCompleted", function() {
  return this._loadingCompleted
});
X.renderer.prototype.__defineGetter__("container", function() {
  return this._container
});
X.renderer.prototype.__defineSetter__("container", function(container) {
  if(!goog.isDefAndNotNull(container)) {
    throw new Error("An ID to a valid container (<div>..) is required.");
  }
  var _container = container;
  if(goog.isString(_container)) {
    _container = goog.dom.getElement(container)
  }
  if(!goog.dom.isElement(_container)) {
    throw new Error("Could not find the given container.");
  }
  this._container = _container
});
X.renderer.prototype.resetViewAndRender = function() {
  this._camera.reset()
};
X.renderer.prototype.showProgressBar_ = function() {
  if(this._config["PROGRESSBAR_ENABLED"]) {
    if(!this._progressBar) {
      this._progressBar = new X.progressbar(this._container, 3)
    }
  }
};
X.renderer.prototype.hideProgressBar_ = function() {
  if(this._config["PROGRESSBAR_ENABLED"]) {
    if(this._progressBar && !this.__readyCheckTimer2) {
      this._progressBar.done();
      this.__readyCheckTimer2 = goog.Timer.callOnce(function() {
        this.__readyCheckTimer2 = null;
        if(this._progressBar) {
          this._progressBar.kill();
          this._progressBar = null
        }
        this.render()
      }.bind(this), 700);
      return
    }
  }
};
X.renderer.prototype.init = function(_contextName) {
  var _canvas = goog.dom.createDom("canvas");
  goog.dom.appendChild(this._container, _canvas);
  this._width = this._container.clientWidth;
  this._height = this._container.clientHeight;
  _canvas.width = this._width;
  _canvas.height = this._height;
  try {
    var _context = _canvas.getContext(_contextName);
    if(!_context) {
      throw new Error;
    }
  }catch(e) {
    var _style = "color:red;font-family:sans-serif;";
    var _msg = "Sorry, " + _contextName + ' context is <strong>not supported</strong> on this machine! See <a href="http://crash.goXTK.com" target="_blank">http://crash.goXTK.com</a> for requirements..';
    this._container.innerHTML = '<h3 style="' + _style + '">Oooops..</h3><p style="' + _style + '">' + _msg + "</p>";
    throw new Error(_msg);
  }
  this._loader = new X.loader;
  goog.events.listen(this._loader, X.event.events.PROGRESS, this.onProgress.bind(this));
  this._canvas = _canvas;
  this._context = _context;
  var _interactor = new X.interactor3D(this._canvas);
  if(_contextName == "2d") {
    _interactor = new X.interactor2D(this._canvas)
  }
  _interactor.init();
  goog.events.listen(_interactor, X.event.events.RESETVIEW, this.resetViewAndRender.bind(this));
  goog.events.listen(_interactor, X.event.events.HOVER, this.onHover_.bind(this));
  goog.events.listen(_interactor, X.event.events.SCROLL, this.onScroll_.bind(this));
  this._interactor = _interactor;
  var _camera = new X.camera3D(this._width, this._height);
  if(_contextName == "2d") {
    _camera = new X.camera2D(this._width, this._height)
  }
  _camera.observe(this._interactor);
  this._camera = _camera;
  goog.events.listen(window, goog.events.EventType.RESIZE, this.onResize_, false, this)
};
X.renderer.prototype.add = function(object) {
  if(object instanceof X.cube || object instanceof X.sphere || object instanceof X.cylinder) {
    object.modified()
  }
  this._topLevelObjects.push(object);
  this.update_(object)
};
X.renderer.prototype.remove = function(object) {
  if(!this._canvas || !this._context) {
    throw new Error("The renderer was not initialized properly.");
  }
  if(!goog.isDefAndNotNull(object)) {
  }else {
    goog.events.removeAll(object)
  }
  return false
};
X.renderer.prototype.update_ = function(object) {
  if(!this._canvas || !this._context) {
    throw new Error("The renderer was not initialized properly.");
  }
  if(!goog.isDefAndNotNull(object)) {
  }else {
    if(!goog.events.hasListener(object, X.event.events.MODIFIED)) {
      goog.events.listen(object, X.event.events.MODIFIED, this.onModified.bind(this))
    }
    if(!goog.events.hasListener(object, X.event.events.REMOVE)) {
      goog.events.listen(object, X.event.events.REMOVE, this.onRemove.bind(this))
    }
    if(!goog.events.hasListener(object, X.event.events.COMPUTING)) {
      goog.events.listen(object, X.event.events.COMPUTING, this.onComputing.bind(this))
    }
    if(!goog.events.hasListener(object, X.event.events.COMPUTING_PROGRESS)) {
      goog.events.listen(object, X.event.events.COMPUTING_PROGRESS, this.onComputingProgress.bind(this))
    }
    if(!goog.events.hasListener(object, X.event.events.COMPUTING_END)) {
      goog.events.listen(object, X.event.events.COMPUTING_END, this.onComputingEnd.bind(this))
    }
  }
};
X.renderer.prototype.get = function(id) {
  if(!goog.isDefAndNotNull(id)) {
    throw new Error("Invalid object id.");
  }
  var _objects = this._objects.values();
  var _numberOfObjects = _objects.length;
  var _k = 0;
  for(_k = 0;_k < _numberOfObjects;_k++) {
    if(_objects[_k]._id == id) {
      return _objects[_k]
    }
  }
  return null
};
X.renderer.prototype.printScene = function() {
  var _numberOfTopLevelObjects = this._topLevelObjects.length;
  var _y;
  for(_y = 0;_y < _numberOfTopLevelObjects;_y++) {
    var _topLevelObject = this._topLevelObjects[_y];
    this.generateTree_(_topLevelObject, 0)
  }
};
X.renderer.prototype.generateTree_ = function(object, level) {
  var _output = "";
  var _l = 0;
  for(_l = 0;_l < level;_l++) {
    _output += ">"
  }
  _output += object._id;
  window.console.log(_output);
  if(object._children.length > 0) {
    var _children = object._children;
    var _numberOfChildren = _children.length;
    var _c = 0;
    for(_c = 0;_c < _numberOfChildren;_c++) {
      this.generateTree_(_children[_c], level + 1)
    }
  }
};
X.renderer.prototype.render = function() {
  if(!this._canvas || !this._context) {
    throw new Error("The renderer was not initialized properly.");
  }
  if(goog.isDefAndNotNull(this._readyCheckTimer)) {
    return
  }
  if(!this._loader.completed()) {
    this.showProgressBar_();
    this._loadingCompleted = false;
    this._onShowtime = false;
    this._readyCheckTimer = goog.Timer.callOnce(function() {
      this._readyCheckTimer = null;
      this.render()
    }.bind(this), 100);
    if(!this._config["INTERMEDIATE_RENDERING"]) {
      return
    }
  }else {
    if(!this._loadingCompleted && !this._onShowtime) {
      this._onShowtime = true;
      eval("this.onShowtime()");
      this._loadingCompleted = true
    }
    if(this._progressBar) {
      this.hideProgressBar_();
      return
    }
  }
  this._AnimationFrameID = window.requestAnimationFrame(this.render.bind(this));
  eval("this.onRender()");
  this.render_(false, true)
};
X.renderer.prototype.onShowtime = function() {
};
X.renderer.prototype.onRender = function() {
};
X.renderer.prototype.render_ = function(picking, invoked) {
};
X.renderer.prototype.destroy = function() {
  window.cancelAnimationFrame(this._AnimationFrameID);
  if(this._loader) {
    delete this._loader;
    this._loader = null
  }
  if(this._progressBar) {
    this._progressBar.kill();
    delete this._progressBar;
    this._progressBar = null
  }
  this._objects.clear();
  delete this._objects;
  this._topLevelObjects.length = 0;
  delete this._topLevelObjects;
  delete this._loader;
  this._loader = null;
  delete this._camera;
  this._camera = null;
  delete this._interactor;
  this._interactor = null;
  delete this._context;
  this._context = null;
  goog.dom.removeNode(this._canvas);
  delete this._canvas;
  this._canvas = null
};
goog.provide("goog.style.bidi");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.style.bidi.getScrollLeft = function(element) {
  var isRtl = goog.style.isRightToLeft(element);
  if(isRtl && goog.userAgent.GECKO) {
    return-element.scrollLeft
  }else {
    if(isRtl && !(goog.userAgent.IE && goog.userAgent.isVersionOrHigher("8"))) {
      var overflowX = goog.style.getComputedOverflowX(element);
      if(overflowX == "visible") {
        return element.scrollLeft
      }else {
        return element.scrollWidth - element.clientWidth - element.scrollLeft
      }
    }
  }
  return element.scrollLeft
};
goog.style.bidi.getOffsetStart = function(element) {
  var offsetLeftForReal = element.offsetLeft;
  var bestParent = element.offsetParent;
  if(!bestParent && goog.style.getComputedPosition(element) == "fixed") {
    bestParent = goog.dom.getOwnerDocument(element).documentElement
  }
  if(!bestParent) {
    return offsetLeftForReal
  }
  if(goog.userAgent.GECKO) {
    var borderWidths = goog.style.getBorderBox(bestParent);
    offsetLeftForReal += borderWidths.left
  }else {
    if(goog.userAgent.isDocumentMode(8)) {
      var borderWidths = goog.style.getBorderBox(bestParent);
      offsetLeftForReal -= borderWidths.left
    }
  }
  if(goog.style.isRightToLeft(bestParent)) {
    var elementRightOffset = offsetLeftForReal + element.offsetWidth;
    return bestParent.clientWidth - elementRightOffset
  }
  return offsetLeftForReal
};
goog.style.bidi.setScrollOffset = function(element, offsetStart) {
  offsetStart = Math.max(offsetStart, 0);
  if(!goog.style.isRightToLeft(element)) {
    element.scrollLeft = offsetStart
  }else {
    if(goog.userAgent.GECKO) {
      element.scrollLeft = -offsetStart
    }else {
      if(!(goog.userAgent.IE && goog.userAgent.isVersionOrHigher("8"))) {
        element.scrollLeft = element.scrollWidth - offsetStart - element.clientWidth
      }else {
        element.scrollLeft = offsetStart
      }
    }
  }
};
goog.style.bidi.setPosition = function(elem, left, top, isRtl) {
  if(!goog.isNull(top)) {
    elem.style.top = top + "px"
  }
  if(isRtl) {
    elem.style.right = left + "px";
    elem.style.left = ""
  }else {
    elem.style.left = left + "px";
    elem.style.right = ""
  }
};
goog.provide("goog.positioning");
goog.provide("goog.positioning.Corner");
goog.provide("goog.positioning.CornerBit");
goog.provide("goog.positioning.Overflow");
goog.provide("goog.positioning.OverflowStatus");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.positioning.Corner = {TOP_LEFT:0, TOP_RIGHT:2, BOTTOM_LEFT:1, BOTTOM_RIGHT:3, TOP_START:4, TOP_END:6, BOTTOM_START:5, BOTTOM_END:7};
goog.positioning.CornerBit = {BOTTOM:1, RIGHT:2, FLIP_RTL:4};
goog.positioning.Overflow = {IGNORE:0, ADJUST_X:1, FAIL_X:2, ADJUST_Y:4, FAIL_Y:8, RESIZE_WIDTH:16, RESIZE_HEIGHT:32, ADJUST_X_EXCEPT_OFFSCREEN:64 | 1, ADJUST_Y_EXCEPT_OFFSCREEN:128 | 4};
goog.positioning.OverflowStatus = {NONE:0, ADJUSTED_X:1, ADJUSTED_Y:2, WIDTH_ADJUSTED:4, HEIGHT_ADJUSTED:8, FAILED_LEFT:16, FAILED_RIGHT:32, FAILED_TOP:64, FAILED_BOTTOM:128, FAILED_OUTSIDE_VIEWPORT:256};
goog.positioning.OverflowStatus.FAILED = goog.positioning.OverflowStatus.FAILED_LEFT | goog.positioning.OverflowStatus.FAILED_RIGHT | goog.positioning.OverflowStatus.FAILED_TOP | goog.positioning.OverflowStatus.FAILED_BOTTOM | goog.positioning.OverflowStatus.FAILED_OUTSIDE_VIEWPORT;
goog.positioning.OverflowStatus.FAILED_HORIZONTAL = goog.positioning.OverflowStatus.FAILED_LEFT | goog.positioning.OverflowStatus.FAILED_RIGHT;
goog.positioning.OverflowStatus.FAILED_VERTICAL = goog.positioning.OverflowStatus.FAILED_TOP | goog.positioning.OverflowStatus.FAILED_BOTTOM;
goog.positioning.positionAtAnchor = function(anchorElement, anchorElementCorner, movableElement, movableElementCorner, opt_offset, opt_margin, opt_overflow, opt_preferredSize, opt_viewport) {
  goog.asserts.assert(movableElement);
  var movableParentTopLeft = goog.positioning.getOffsetParentPageOffset(movableElement);
  var anchorRect = goog.positioning.getVisiblePart_(anchorElement);
  goog.style.translateRectForAnotherFrame(anchorRect, goog.dom.getDomHelper(anchorElement), goog.dom.getDomHelper(movableElement));
  var corner = goog.positioning.getEffectiveCorner(anchorElement, anchorElementCorner);
  var absolutePos = new goog.math.Coordinate(corner & goog.positioning.CornerBit.RIGHT ? anchorRect.left + anchorRect.width : anchorRect.left, corner & goog.positioning.CornerBit.BOTTOM ? anchorRect.top + anchorRect.height : anchorRect.top);
  absolutePos = goog.math.Coordinate.difference(absolutePos, movableParentTopLeft);
  if(opt_offset) {
    absolutePos.x += (corner & goog.positioning.CornerBit.RIGHT ? -1 : 1) * opt_offset.x;
    absolutePos.y += (corner & goog.positioning.CornerBit.BOTTOM ? -1 : 1) * opt_offset.y
  }
  var viewport;
  if(opt_overflow) {
    if(opt_viewport) {
      viewport = opt_viewport
    }else {
      viewport = goog.style.getVisibleRectForElement(movableElement);
      if(viewport) {
        viewport.top -= movableParentTopLeft.y;
        viewport.right -= movableParentTopLeft.x;
        viewport.bottom -= movableParentTopLeft.y;
        viewport.left -= movableParentTopLeft.x
      }
    }
  }
  return goog.positioning.positionAtCoordinate(absolutePos, movableElement, movableElementCorner, opt_margin, viewport, opt_overflow, opt_preferredSize)
};
goog.positioning.getOffsetParentPageOffset = function(movableElement) {
  var movableParentTopLeft;
  var parent = movableElement.offsetParent;
  if(parent) {
    var isBody = parent.tagName == goog.dom.TagName.HTML || parent.tagName == goog.dom.TagName.BODY;
    if(!isBody || goog.style.getComputedPosition(parent) != "static") {
      movableParentTopLeft = goog.style.getPageOffset(parent);
      if(!isBody) {
        movableParentTopLeft = goog.math.Coordinate.difference(movableParentTopLeft, new goog.math.Coordinate(goog.style.bidi.getScrollLeft(parent), parent.scrollTop))
      }
    }
  }
  return movableParentTopLeft || new goog.math.Coordinate
};
goog.positioning.getVisiblePart_ = function(el) {
  var rect = goog.style.getBounds(el);
  var visibleBox = goog.style.getVisibleRectForElement(el);
  if(visibleBox) {
    rect.intersection(goog.math.Rect.createFromBox(visibleBox))
  }
  return rect
};
goog.positioning.positionAtCoordinate = function(absolutePos, movableElement, movableElementCorner, opt_margin, opt_viewport, opt_overflow, opt_preferredSize) {
  absolutePos = absolutePos.clone();
  var status = goog.positioning.OverflowStatus.NONE;
  var corner = goog.positioning.getEffectiveCorner(movableElement, movableElementCorner);
  var elementSize = goog.style.getSize(movableElement);
  var size = opt_preferredSize ? opt_preferredSize.clone() : elementSize.clone();
  if(opt_margin || corner != goog.positioning.Corner.TOP_LEFT) {
    if(corner & goog.positioning.CornerBit.RIGHT) {
      absolutePos.x -= size.width + (opt_margin ? opt_margin.right : 0)
    }else {
      if(opt_margin) {
        absolutePos.x += opt_margin.left
      }
    }
    if(corner & goog.positioning.CornerBit.BOTTOM) {
      absolutePos.y -= size.height + (opt_margin ? opt_margin.bottom : 0)
    }else {
      if(opt_margin) {
        absolutePos.y += opt_margin.top
      }
    }
  }
  if(opt_overflow) {
    status = opt_viewport ? goog.positioning.adjustForViewport_(absolutePos, size, opt_viewport, opt_overflow) : goog.positioning.OverflowStatus.FAILED_OUTSIDE_VIEWPORT;
    if(status & goog.positioning.OverflowStatus.FAILED) {
      return status
    }
  }
  goog.style.setPosition(movableElement, absolutePos);
  if(!goog.math.Size.equals(elementSize, size)) {
    goog.style.setBorderBoxSize(movableElement, size)
  }
  return status
};
goog.positioning.adjustForViewport_ = function(pos, size, viewport, overflow) {
  var status = goog.positioning.OverflowStatus.NONE;
  var ADJUST_X_EXCEPT_OFFSCREEN = goog.positioning.Overflow.ADJUST_X_EXCEPT_OFFSCREEN;
  var ADJUST_Y_EXCEPT_OFFSCREEN = goog.positioning.Overflow.ADJUST_Y_EXCEPT_OFFSCREEN;
  if((overflow & ADJUST_X_EXCEPT_OFFSCREEN) == ADJUST_X_EXCEPT_OFFSCREEN && (pos.x < viewport.left || pos.x >= viewport.right)) {
    overflow &= ~goog.positioning.Overflow.ADJUST_X
  }
  if((overflow & ADJUST_Y_EXCEPT_OFFSCREEN) == ADJUST_Y_EXCEPT_OFFSCREEN && (pos.y < viewport.top || pos.y >= viewport.bottom)) {
    overflow &= ~goog.positioning.Overflow.ADJUST_Y
  }
  if(pos.x < viewport.left && overflow & goog.positioning.Overflow.ADJUST_X) {
    pos.x = viewport.left;
    status |= goog.positioning.OverflowStatus.ADJUSTED_X
  }
  if(pos.x < viewport.left && pos.x + size.width > viewport.right && overflow & goog.positioning.Overflow.RESIZE_WIDTH) {
    size.width = Math.max(size.width - (pos.x + size.width - viewport.right), 0);
    status |= goog.positioning.OverflowStatus.WIDTH_ADJUSTED
  }
  if(pos.x + size.width > viewport.right && overflow & goog.positioning.Overflow.ADJUST_X) {
    pos.x = Math.max(viewport.right - size.width, viewport.left);
    status |= goog.positioning.OverflowStatus.ADJUSTED_X
  }
  if(overflow & goog.positioning.Overflow.FAIL_X) {
    status |= (pos.x < viewport.left ? goog.positioning.OverflowStatus.FAILED_LEFT : 0) | (pos.x + size.width > viewport.right ? goog.positioning.OverflowStatus.FAILED_RIGHT : 0)
  }
  if(pos.y < viewport.top && overflow & goog.positioning.Overflow.ADJUST_Y) {
    pos.y = viewport.top;
    status |= goog.positioning.OverflowStatus.ADJUSTED_Y
  }
  if(pos.y <= viewport.top && pos.y + size.height < viewport.bottom && overflow & goog.positioning.Overflow.RESIZE_HEIGHT) {
    size.height = Math.max(size.height - (viewport.top - pos.y), 0);
    pos.y = 0;
    status |= goog.positioning.OverflowStatus.HEIGHT_ADJUSTED
  }
  if(pos.y >= viewport.top && pos.y + size.height > viewport.bottom && overflow & goog.positioning.Overflow.RESIZE_HEIGHT) {
    size.height = Math.max(size.height - (pos.y + size.height - viewport.bottom), 0);
    status |= goog.positioning.OverflowStatus.HEIGHT_ADJUSTED
  }
  if(pos.y + size.height > viewport.bottom && overflow & goog.positioning.Overflow.ADJUST_Y) {
    pos.y = Math.max(viewport.bottom - size.height, viewport.top);
    status |= goog.positioning.OverflowStatus.ADJUSTED_Y
  }
  if(overflow & goog.positioning.Overflow.FAIL_Y) {
    status |= (pos.y < viewport.top ? goog.positioning.OverflowStatus.FAILED_TOP : 0) | (pos.y + size.height > viewport.bottom ? goog.positioning.OverflowStatus.FAILED_BOTTOM : 0)
  }
  return status
};
goog.positioning.getEffectiveCorner = function(element, corner) {
  return(corner & goog.positioning.CornerBit.FLIP_RTL && goog.style.isRightToLeft(element) ? corner ^ goog.positioning.CornerBit.RIGHT : corner) & ~goog.positioning.CornerBit.FLIP_RTL
};
goog.positioning.flipCornerHorizontal = function(corner) {
  return corner ^ goog.positioning.CornerBit.RIGHT
};
goog.positioning.flipCornerVertical = function(corner) {
  return corner ^ goog.positioning.CornerBit.BOTTOM
};
goog.positioning.flipCorner = function(corner) {
  return corner ^ goog.positioning.CornerBit.BOTTOM ^ goog.positioning.CornerBit.RIGHT
};
goog.provide("goog.positioning.AbstractPosition");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.require("goog.positioning.Corner");
goog.positioning.AbstractPosition = function() {
};
goog.positioning.AbstractPosition.prototype.reposition = function(movableElement, corner, opt_margin, opt_preferredSize) {
};
goog.provide("goog.positioning.ViewportPosition");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.positioning.AbstractPosition");
goog.positioning.ViewportPosition = function(arg1, opt_arg2) {
  this.coordinate = arg1 instanceof goog.math.Coordinate ? arg1 : new goog.math.Coordinate(arg1, opt_arg2)
};
goog.inherits(goog.positioning.ViewportPosition, goog.positioning.AbstractPosition);
goog.positioning.ViewportPosition.prototype.reposition = function(element, popupCorner, opt_margin, opt_preferredSize) {
  goog.positioning.positionAtAnchor(goog.style.getClientViewportElement(element), goog.positioning.Corner.TOP_LEFT, element, popupCorner, this.coordinate, opt_margin, null, opt_preferredSize)
};
goog.provide("goog.positioning.AnchoredPosition");
goog.require("goog.math.Box");
goog.require("goog.positioning");
goog.require("goog.positioning.AbstractPosition");
goog.positioning.AnchoredPosition = function(anchorElement, corner, opt_overflow) {
  this.element = anchorElement;
  this.corner = corner;
  this.overflow_ = opt_overflow
};
goog.inherits(goog.positioning.AnchoredPosition, goog.positioning.AbstractPosition);
goog.positioning.AnchoredPosition.prototype.reposition = function(movableElement, movableCorner, opt_margin, opt_preferredSize) {
  goog.positioning.positionAtAnchor(this.element, this.corner, movableElement, movableCorner, undefined, opt_margin, this.overflow_)
};
goog.provide("goog.fx.Transition");
goog.provide("goog.fx.Transition.EventType");
goog.fx.Transition = function() {
};
goog.fx.Transition.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause"};
goog.fx.Transition.prototype.play;
goog.fx.Transition.prototype.stop;
goog.provide("goog.ui.PopupBase");
goog.provide("goog.ui.PopupBase.EventType");
goog.provide("goog.ui.PopupBase.Type");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.ui.PopupBase = function(opt_element, opt_type) {
  goog.events.EventTarget.call(this);
  this.handler_ = new goog.events.EventHandler(this);
  this.setElement(opt_element || null);
  if(opt_type) {
    this.setType(opt_type)
  }
};
goog.inherits(goog.ui.PopupBase, goog.events.EventTarget);
goog.ui.PopupBase.Type = {TOGGLE_DISPLAY:"toggle_display", MOVE_OFFSCREEN:"move_offscreen"};
goog.ui.PopupBase.prototype.element_ = null;
goog.ui.PopupBase.prototype.autoHide_ = true;
goog.ui.PopupBase.prototype.autoHideRegion_ = null;
goog.ui.PopupBase.prototype.isVisible_ = false;
goog.ui.PopupBase.prototype.shouldHideAsync_ = false;
goog.ui.PopupBase.prototype.lastShowTime_ = -1;
goog.ui.PopupBase.prototype.lastHideTime_ = -1;
goog.ui.PopupBase.prototype.hideOnEscape_ = false;
goog.ui.PopupBase.prototype.enableCrossIframeDismissal_ = true;
goog.ui.PopupBase.prototype.type_ = goog.ui.PopupBase.Type.TOGGLE_DISPLAY;
goog.ui.PopupBase.prototype.showTransition_;
goog.ui.PopupBase.prototype.hideTransition_;
goog.ui.PopupBase.EventType = {BEFORE_SHOW:"beforeshow", SHOW:"show", BEFORE_HIDE:"beforehide", HIDE:"hide"};
goog.ui.PopupBase.DEBOUNCE_DELAY_MS = 150;
goog.ui.PopupBase.prototype.getType = function() {
  return this.type_
};
goog.ui.PopupBase.prototype.setType = function(type) {
  this.type_ = type
};
goog.ui.PopupBase.prototype.shouldHideAsync = function() {
  return this.shouldHideAsync_
};
goog.ui.PopupBase.prototype.setShouldHideAsync = function(b) {
  this.shouldHideAsync_ = b
};
goog.ui.PopupBase.prototype.getElement = function() {
  return this.element_
};
goog.ui.PopupBase.prototype.setElement = function(elt) {
  this.ensureNotVisible_();
  this.element_ = elt
};
goog.ui.PopupBase.prototype.getAutoHide = function() {
  return this.autoHide_
};
goog.ui.PopupBase.prototype.setAutoHide = function(autoHide) {
  this.ensureNotVisible_();
  this.autoHide_ = autoHide
};
goog.ui.PopupBase.prototype.getHideOnEscape = function() {
  return this.hideOnEscape_
};
goog.ui.PopupBase.prototype.setHideOnEscape = function(hideOnEscape) {
  this.ensureNotVisible_();
  this.hideOnEscape_ = hideOnEscape
};
goog.ui.PopupBase.prototype.getEnableCrossIframeDismissal = function() {
  return this.enableCrossIframeDismissal_
};
goog.ui.PopupBase.prototype.setEnableCrossIframeDismissal = function(enable) {
  this.enableCrossIframeDismissal_ = enable
};
goog.ui.PopupBase.prototype.getAutoHideRegion = function() {
  return this.autoHideRegion_
};
goog.ui.PopupBase.prototype.setAutoHideRegion = function(element) {
  this.autoHideRegion_ = element
};
goog.ui.PopupBase.prototype.setTransition = function(opt_showTransition, opt_hideTransition) {
  this.showTransition_ = opt_showTransition;
  this.hideTransition_ = opt_hideTransition
};
goog.ui.PopupBase.prototype.getLastShowTime = function() {
  return this.lastShowTime_
};
goog.ui.PopupBase.prototype.getLastHideTime = function() {
  return this.lastHideTime_
};
goog.ui.PopupBase.prototype.getHandler = function() {
  return this.handler_
};
goog.ui.PopupBase.prototype.ensureNotVisible_ = function() {
  if(this.isVisible_) {
    throw Error("Can not change this state of the popup while showing.");
  }
};
goog.ui.PopupBase.prototype.isVisible = function() {
  return this.isVisible_
};
goog.ui.PopupBase.prototype.isOrWasRecentlyVisible = function() {
  return this.isVisible_ || goog.now() - this.lastHideTime_ < goog.ui.PopupBase.DEBOUNCE_DELAY_MS
};
goog.ui.PopupBase.prototype.setVisible = function(visible) {
  if(this.showTransition_) {
    this.showTransition_.stop()
  }
  if(this.hideTransition_) {
    this.hideTransition_.stop()
  }
  if(visible) {
    this.show_()
  }else {
    this.hide_()
  }
};
goog.ui.PopupBase.prototype.reposition = goog.nullFunction;
goog.ui.PopupBase.prototype.show_ = function() {
  if(this.isVisible_) {
    return
  }
  if(!this.onBeforeShow()) {
    return
  }
  if(!this.element_) {
    throw Error("Caller must call setElement before trying to show the popup");
  }
  this.reposition();
  var doc = goog.dom.getOwnerDocument(this.element_);
  if(this.hideOnEscape_) {
    this.handler_.listen(doc, goog.events.EventType.KEYDOWN, this.onDocumentKeyDown_, true)
  }
  if(this.autoHide_) {
    this.handler_.listen(doc, goog.events.EventType.MOUSEDOWN, this.onDocumentMouseDown_, true);
    if(goog.userAgent.IE) {
      var activeElement;
      try {
        activeElement = doc.activeElement
      }catch(e) {
      }
      while(activeElement && activeElement.nodeName == "IFRAME") {
        try {
          var tempDoc = goog.dom.getFrameContentDocument(activeElement)
        }catch(e) {
          break
        }
        doc = tempDoc;
        activeElement = doc.activeElement
      }
      this.handler_.listen(doc, goog.events.EventType.MOUSEDOWN, this.onDocumentMouseDown_, true);
      this.handler_.listen(doc, goog.events.EventType.DEACTIVATE, this.onDocumentBlur_)
    }else {
      this.handler_.listen(doc, goog.events.EventType.BLUR, this.onDocumentBlur_)
    }
  }
  if(this.type_ == goog.ui.PopupBase.Type.TOGGLE_DISPLAY) {
    this.showPopupElement()
  }else {
    if(this.type_ == goog.ui.PopupBase.Type.MOVE_OFFSCREEN) {
      this.reposition()
    }
  }
  this.isVisible_ = true;
  if(this.showTransition_) {
    goog.events.listenOnce(this.showTransition_, goog.fx.Transition.EventType.END, this.onShow_, false, this);
    this.showTransition_.play()
  }else {
    this.onShow_()
  }
};
goog.ui.PopupBase.prototype.hide_ = function(opt_target) {
  if(!this.isVisible_ || !this.onBeforeHide_(opt_target)) {
    return false
  }
  if(this.handler_) {
    this.handler_.removeAll()
  }
  this.isVisible_ = false;
  this.lastHideTime_ = goog.now();
  if(this.hideTransition_) {
    goog.events.listenOnce(this.hideTransition_, goog.fx.Transition.EventType.END, goog.partial(this.continueHidingPopup_, opt_target), false, this);
    this.hideTransition_.play()
  }else {
    this.continueHidingPopup_(opt_target)
  }
  return true
};
goog.ui.PopupBase.prototype.continueHidingPopup_ = function(opt_target) {
  if(this.type_ == goog.ui.PopupBase.Type.TOGGLE_DISPLAY) {
    if(this.shouldHideAsync_) {
      goog.Timer.callOnce(this.hidePopupElement_, 0, this)
    }else {
      this.hidePopupElement_()
    }
  }else {
    if(this.type_ == goog.ui.PopupBase.Type.MOVE_OFFSCREEN) {
      this.moveOffscreen_()
    }
  }
  this.onHide_(opt_target)
};
goog.ui.PopupBase.prototype.showPopupElement = function() {
  this.element_.style.visibility = "visible";
  goog.style.setElementShown(this.element_, true)
};
goog.ui.PopupBase.prototype.hidePopupElement_ = function() {
  this.element_.style.visibility = "hidden";
  goog.style.setElementShown(this.element_, false)
};
goog.ui.PopupBase.prototype.moveOffscreen_ = function() {
  this.element_.style.top = "-10000px"
};
goog.ui.PopupBase.prototype.onBeforeShow = function() {
  return this.dispatchEvent(goog.ui.PopupBase.EventType.BEFORE_SHOW)
};
goog.ui.PopupBase.prototype.onShow_ = function() {
  this.lastShowTime_ = goog.now();
  this.lastHideTime_ = -1;
  this.dispatchEvent(goog.ui.PopupBase.EventType.SHOW)
};
goog.ui.PopupBase.prototype.onBeforeHide_ = function(opt_target) {
  return this.dispatchEvent({type:goog.ui.PopupBase.EventType.BEFORE_HIDE, target:opt_target})
};
goog.ui.PopupBase.prototype.onHide_ = function(opt_target) {
  this.dispatchEvent({type:goog.ui.PopupBase.EventType.HIDE, target:opt_target})
};
goog.ui.PopupBase.prototype.onDocumentMouseDown_ = function(e) {
  var target = e.target;
  if(!goog.dom.contains(this.element_, target) && (!this.autoHideRegion_ || goog.dom.contains(this.autoHideRegion_, target)) && !this.shouldDebounce_()) {
    this.hide_(target)
  }
};
goog.ui.PopupBase.prototype.onDocumentKeyDown_ = function(e) {
  if(e.keyCode == goog.events.KeyCodes.ESC) {
    if(this.hide_(e.target)) {
      e.preventDefault();
      e.stopPropagation()
    }
  }
};
goog.ui.PopupBase.prototype.onDocumentBlur_ = function(e) {
  if(!this.enableCrossIframeDismissal_) {
    return
  }
  var doc = goog.dom.getOwnerDocument(this.element_);
  if(goog.userAgent.IE || goog.userAgent.OPERA) {
    var activeElement = doc.activeElement;
    if(!activeElement || goog.dom.contains(this.element_, activeElement) || activeElement.tagName == "BODY") {
      return
    }
  }else {
    if(e.target != doc) {
      return
    }
  }
  if(this.shouldDebounce_()) {
    return
  }
  this.hide_()
};
goog.ui.PopupBase.prototype.shouldDebounce_ = function() {
  return goog.now() - this.lastShowTime_ < goog.ui.PopupBase.DEBOUNCE_DELAY_MS
};
goog.ui.PopupBase.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.handler_.dispose();
  goog.dispose(this.showTransition_);
  goog.dispose(this.hideTransition_);
  delete this.element_;
  delete this.handler_
};
goog.provide("goog.positioning.ClientPosition");
goog.require("goog.asserts");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.positioning");
goog.require("goog.positioning.AbstractPosition");
goog.require("goog.style");
goog.positioning.ClientPosition = function(arg1, opt_arg2) {
  this.coordinate = arg1 instanceof goog.math.Coordinate ? arg1 : new goog.math.Coordinate(arg1, opt_arg2)
};
goog.inherits(goog.positioning.ClientPosition, goog.positioning.AbstractPosition);
goog.positioning.ClientPosition.prototype.reposition = function(movableElement, movableElementCorner, opt_margin, opt_preferredSize) {
  goog.asserts.assert(movableElement);
  var viewportOffset = goog.style.getViewportPageOffset(goog.dom.getOwnerDocument(movableElement));
  var x = this.coordinate.x + viewportOffset.x;
  var y = this.coordinate.y + viewportOffset.y;
  var movableParentTopLeft = goog.positioning.getOffsetParentPageOffset(movableElement);
  x -= movableParentTopLeft.x;
  y -= movableParentTopLeft.y;
  goog.positioning.positionAtCoordinate(new goog.math.Coordinate(x, y), movableElement, movableElementCorner, opt_margin, null, null, opt_preferredSize)
};
goog.provide("goog.positioning.ViewportClientPosition");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.positioning.ClientPosition");
goog.positioning.ViewportClientPosition = function(arg1, opt_arg2) {
  goog.positioning.ClientPosition.call(this, arg1, opt_arg2)
};
goog.inherits(goog.positioning.ViewportClientPosition, goog.positioning.ClientPosition);
goog.positioning.ViewportClientPosition.prototype.lastResortOverflow_ = 0;
goog.positioning.ViewportClientPosition.prototype.setLastResortOverflow = function(overflow) {
  this.lastResortOverflow_ = overflow
};
goog.positioning.ViewportClientPosition.prototype.reposition = function(element, popupCorner, opt_margin, opt_preferredSize) {
  var viewportElt = goog.style.getClientViewportElement(element);
  var viewport = goog.style.getVisibleRectForElement(viewportElt);
  var scrollEl = goog.dom.getDomHelper(element).getDocumentScrollElement();
  var clientPos = new goog.math.Coordinate(this.coordinate.x + scrollEl.scrollLeft, this.coordinate.y + scrollEl.scrollTop);
  var failXY = goog.positioning.Overflow.FAIL_X | goog.positioning.Overflow.FAIL_Y;
  var corner = popupCorner;
  var status = goog.positioning.positionAtCoordinate(clientPos, element, corner, opt_margin, viewport, failXY, opt_preferredSize);
  if((status & goog.positioning.OverflowStatus.FAILED) == 0) {
    return
  }
  if(status & goog.positioning.OverflowStatus.FAILED_LEFT || status & goog.positioning.OverflowStatus.FAILED_RIGHT) {
    corner = goog.positioning.flipCornerHorizontal(corner)
  }
  if(status & goog.positioning.OverflowStatus.FAILED_TOP || status & goog.positioning.OverflowStatus.FAILED_BOTTOM) {
    corner = goog.positioning.flipCornerVertical(corner)
  }
  status = goog.positioning.positionAtCoordinate(clientPos, element, corner, opt_margin, viewport, failXY, opt_preferredSize);
  if((status & goog.positioning.OverflowStatus.FAILED) == 0) {
    return
  }
  goog.positioning.positionAtCoordinate(clientPos, element, popupCorner, opt_margin, viewport, this.lastResortOverflow_, opt_preferredSize)
};
goog.provide("goog.positioning.AbsolutePosition");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.positioning");
goog.require("goog.positioning.AbstractPosition");
goog.positioning.AbsolutePosition = function(arg1, opt_arg2) {
  this.coordinate = arg1 instanceof goog.math.Coordinate ? arg1 : new goog.math.Coordinate(arg1, opt_arg2)
};
goog.inherits(goog.positioning.AbsolutePosition, goog.positioning.AbstractPosition);
goog.positioning.AbsolutePosition.prototype.reposition = function(movableElement, movableCorner, opt_margin, opt_preferredSize) {
  goog.positioning.positionAtCoordinate(this.coordinate, movableElement, movableCorner, opt_margin, null, null, opt_preferredSize)
};
goog.provide("goog.positioning.AnchoredViewportPosition");
goog.require("goog.math.Box");
goog.require("goog.positioning");
goog.require("goog.positioning.AnchoredPosition");
goog.require("goog.positioning.Corner");
goog.require("goog.positioning.Overflow");
goog.require("goog.positioning.OverflowStatus");
goog.positioning.AnchoredViewportPosition = function(anchorElement, corner, opt_adjust, opt_overflowConstraint) {
  goog.positioning.AnchoredPosition.call(this, anchorElement, corner);
  this.lastResortOverflow_ = opt_adjust ? goog.positioning.Overflow.ADJUST_X | goog.positioning.Overflow.ADJUST_Y : goog.positioning.Overflow.IGNORE;
  this.overflowConstraint_ = opt_overflowConstraint || undefined
};
goog.inherits(goog.positioning.AnchoredViewportPosition, goog.positioning.AnchoredPosition);
goog.positioning.AnchoredViewportPosition.prototype.getLastResortOverflow = function() {
  return this.lastResortOverflow_
};
goog.positioning.AnchoredViewportPosition.prototype.setLastResortOverflow = function(lastResortOverflow) {
  this.lastResortOverflow_ = lastResortOverflow
};
goog.positioning.AnchoredViewportPosition.prototype.reposition = function(movableElement, movableCorner, opt_margin, opt_preferredSize) {
  var status = goog.positioning.positionAtAnchor(this.element, this.corner, movableElement, movableCorner, null, opt_margin, goog.positioning.Overflow.FAIL_X | goog.positioning.Overflow.FAIL_Y, opt_preferredSize, this.overflowConstraint_);
  if(status & goog.positioning.OverflowStatus.FAILED) {
    var cornerFallback = this.adjustCorner(status, this.corner);
    var movableCornerFallback = this.adjustCorner(status, movableCorner);
    status = goog.positioning.positionAtAnchor(this.element, cornerFallback, movableElement, movableCornerFallback, null, opt_margin, goog.positioning.Overflow.FAIL_X | goog.positioning.Overflow.FAIL_Y, opt_preferredSize, this.overflowConstraint_);
    if(status & goog.positioning.OverflowStatus.FAILED) {
      cornerFallback = this.adjustCorner(status, cornerFallback);
      movableCornerFallback = this.adjustCorner(status, movableCornerFallback);
      goog.positioning.positionAtAnchor(this.element, cornerFallback, movableElement, movableCornerFallback, null, opt_margin, this.getLastResortOverflow(), opt_preferredSize, this.overflowConstraint_)
    }
  }
};
goog.positioning.AnchoredViewportPosition.prototype.adjustCorner = function(status, corner) {
  if(status & goog.positioning.OverflowStatus.FAILED_HORIZONTAL) {
    corner = goog.positioning.flipCornerHorizontal(corner)
  }
  if(status & goog.positioning.OverflowStatus.FAILED_VERTICAL) {
    corner = goog.positioning.flipCornerVertical(corner)
  }
  return corner
};
goog.provide("goog.ui.Popup");
goog.provide("goog.ui.Popup.AbsolutePosition");
goog.provide("goog.ui.Popup.AnchoredPosition");
goog.provide("goog.ui.Popup.AnchoredViewPortPosition");
goog.provide("goog.ui.Popup.ClientPosition");
goog.provide("goog.ui.Popup.Corner");
goog.provide("goog.ui.Popup.Overflow");
goog.provide("goog.ui.Popup.ViewPortClientPosition");
goog.provide("goog.ui.Popup.ViewPortPosition");
goog.require("goog.math.Box");
goog.require("goog.positioning");
goog.require("goog.positioning.AbsolutePosition");
goog.require("goog.positioning.AnchoredPosition");
goog.require("goog.positioning.AnchoredViewportPosition");
goog.require("goog.positioning.ClientPosition");
goog.require("goog.positioning.Corner");
goog.require("goog.positioning.Overflow");
goog.require("goog.positioning.OverflowStatus");
goog.require("goog.positioning.ViewportClientPosition");
goog.require("goog.positioning.ViewportPosition");
goog.require("goog.style");
goog.require("goog.ui.PopupBase");
goog.ui.Popup = function(opt_element, opt_position) {
  this.popupCorner_ = goog.positioning.Corner.TOP_START;
  this.position_ = opt_position || undefined;
  goog.ui.PopupBase.call(this, opt_element)
};
goog.inherits(goog.ui.Popup, goog.ui.PopupBase);
goog.ui.Popup.Corner = goog.positioning.Corner;
goog.ui.Popup.Overflow = goog.positioning.Overflow;
goog.ui.Popup.prototype.margin_;
goog.ui.Popup.prototype.getPinnedCorner = function() {
  return this.popupCorner_
};
goog.ui.Popup.prototype.setPinnedCorner = function(corner) {
  this.popupCorner_ = corner;
  if(this.isVisible()) {
    this.reposition()
  }
};
goog.ui.Popup.prototype.getPosition = function() {
  return this.position_ || null
};
goog.ui.Popup.prototype.setPosition = function(position) {
  this.position_ = position || undefined;
  if(this.isVisible()) {
    this.reposition()
  }
};
goog.ui.Popup.prototype.getMargin = function() {
  return this.margin_ || null
};
goog.ui.Popup.prototype.setMargin = function(arg1, opt_arg2, opt_arg3, opt_arg4) {
  if(arg1 == null || arg1 instanceof goog.math.Box) {
    this.margin_ = arg1
  }else {
    this.margin_ = new goog.math.Box(arg1, opt_arg2, opt_arg3, opt_arg4)
  }
  if(this.isVisible()) {
    this.reposition()
  }
};
goog.ui.Popup.prototype.reposition = function() {
  if(!this.position_) {
    return
  }
  var hideForPositioning = !this.isVisible() && this.getType() != goog.ui.PopupBase.Type.MOVE_OFFSCREEN;
  var el = this.getElement();
  if(hideForPositioning) {
    el.style.visibility = "hidden";
    goog.style.setElementShown(el, true)
  }
  this.position_.reposition(el, this.popupCorner_, this.margin_);
  if(hideForPositioning) {
    goog.style.setElementShown(el, false)
  }
};
goog.ui.Popup.AnchoredPosition = goog.positioning.AnchoredPosition;
goog.ui.Popup.AnchoredViewPortPosition = goog.positioning.AnchoredViewportPosition;
goog.ui.Popup.AbsolutePosition = goog.positioning.AbsolutePosition;
goog.ui.Popup.ViewPortPosition = goog.positioning.ViewportPosition;
goog.ui.Popup.ClientPosition = goog.positioning.ClientPosition;
goog.ui.Popup.ViewPortClientPosition = goog.positioning.ViewportClientPosition;
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.ui.Tooltip");
goog.provide("goog.ui.Tooltip.CursorTooltipPosition");
goog.provide("goog.ui.Tooltip.ElementTooltipPosition");
goog.provide("goog.ui.Tooltip.State");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.positioning");
goog.require("goog.positioning.AnchoredPosition");
goog.require("goog.positioning.Corner");
goog.require("goog.positioning.Overflow");
goog.require("goog.positioning.OverflowStatus");
goog.require("goog.positioning.ViewportPosition");
goog.require("goog.structs.Set");
goog.require("goog.style");
goog.require("goog.ui.Popup");
goog.require("goog.ui.PopupBase");
goog.ui.Tooltip = function(opt_el, opt_str, opt_domHelper) {
  this.dom_ = opt_domHelper || (opt_el ? goog.dom.getDomHelper(goog.dom.getElement(opt_el)) : goog.dom.getDomHelper());
  goog.ui.Popup.call(this, this.dom_.createDom("div", {"style":"position:absolute;display:none;"}));
  this.cursorPosition = new goog.math.Coordinate(1, 1);
  this.elements_ = new goog.structs.Set;
  if(opt_el) {
    this.attach(opt_el)
  }
  if(opt_str != null) {
    this.setText(opt_str)
  }
};
goog.inherits(goog.ui.Tooltip, goog.ui.Popup);
goog.ui.Tooltip.activeInstances_ = [];
goog.ui.Tooltip.prototype.activeEl_ = null;
goog.ui.Tooltip.prototype.className = goog.getCssName("goog-tooltip");
goog.ui.Tooltip.prototype.showDelayMs_ = 500;
goog.ui.Tooltip.prototype.showTimer;
goog.ui.Tooltip.prototype.hideDelayMs_ = 0;
goog.ui.Tooltip.prototype.hideTimer;
goog.ui.Tooltip.prototype.anchor;
goog.ui.Tooltip.State = {INACTIVE:0, WAITING_TO_SHOW:1, SHOWING:2, WAITING_TO_HIDE:3, UPDATING:4};
goog.ui.Tooltip.Activation = {CURSOR:0, FOCUS:1};
goog.ui.Tooltip.prototype.seenInteraction_;
goog.ui.Tooltip.prototype.requireInteraction_;
goog.ui.Tooltip.prototype.childTooltip_;
goog.ui.Tooltip.prototype.parentTooltip_;
goog.ui.Tooltip.prototype.getDomHelper = function() {
  return this.dom_
};
goog.ui.Tooltip.prototype.getChildTooltip = function() {
  return this.childTooltip_
};
goog.ui.Tooltip.prototype.attach = function(el) {
  el = goog.dom.getElement(el);
  this.elements_.add(el);
  goog.events.listen(el, goog.events.EventType.MOUSEOVER, this.handleMouseOver, false, this);
  goog.events.listen(el, goog.events.EventType.MOUSEOUT, this.handleMouseOutAndBlur, false, this);
  goog.events.listen(el, goog.events.EventType.MOUSEMOVE, this.handleMouseMove, false, this);
  goog.events.listen(el, goog.events.EventType.FOCUS, this.handleFocus, false, this);
  goog.events.listen(el, goog.events.EventType.BLUR, this.handleMouseOutAndBlur, false, this)
};
goog.ui.Tooltip.prototype.detach = function(opt_el) {
  if(opt_el) {
    var el = goog.dom.getElement(opt_el);
    this.detachElement_(el);
    this.elements_.remove(el)
  }else {
    var a = this.elements_.getValues();
    for(var el, i = 0;el = a[i];i++) {
      this.detachElement_(el)
    }
    this.elements_.clear()
  }
};
goog.ui.Tooltip.prototype.detachElement_ = function(el) {
  goog.events.unlisten(el, goog.events.EventType.MOUSEOVER, this.handleMouseOver, false, this);
  goog.events.unlisten(el, goog.events.EventType.MOUSEOUT, this.handleMouseOutAndBlur, false, this);
  goog.events.unlisten(el, goog.events.EventType.MOUSEMOVE, this.handleMouseMove, false, this);
  goog.events.unlisten(el, goog.events.EventType.FOCUS, this.handleFocus, false, this);
  goog.events.unlisten(el, goog.events.EventType.BLUR, this.handleMouseOutAndBlur, false, this)
};
goog.ui.Tooltip.prototype.setShowDelayMs = function(delay) {
  this.showDelayMs_ = delay
};
goog.ui.Tooltip.prototype.getShowDelayMs = function() {
  return this.showDelayMs_
};
goog.ui.Tooltip.prototype.setHideDelayMs = function(delay) {
  this.hideDelayMs_ = delay
};
goog.ui.Tooltip.prototype.getHideDelayMs = function() {
  return this.hideDelayMs_
};
goog.ui.Tooltip.prototype.setText = function(str) {
  goog.dom.setTextContent(this.getElement(), str)
};
goog.ui.Tooltip.prototype.setHtml = function(str) {
  this.getElement().innerHTML = str
};
goog.ui.Tooltip.prototype.setElement = function(el) {
  var oldElement = this.getElement();
  if(oldElement) {
    goog.dom.removeNode(oldElement)
  }
  goog.ui.Tooltip.superClass_.setElement.call(this, el);
  if(el) {
    var body = this.dom_.getDocument().body;
    body.insertBefore(el, body.lastChild)
  }
};
goog.ui.Tooltip.prototype.getText = function() {
  return goog.dom.getTextContent(this.getElement())
};
goog.ui.Tooltip.prototype.getHtml = function() {
  return this.getElement().innerHTML
};
goog.ui.Tooltip.prototype.getState = function() {
  return this.showTimer ? this.isVisible() ? goog.ui.Tooltip.State.UPDATING : goog.ui.Tooltip.State.WAITING_TO_SHOW : this.hideTimer ? goog.ui.Tooltip.State.WAITING_TO_HIDE : this.isVisible() ? goog.ui.Tooltip.State.SHOWING : goog.ui.Tooltip.State.INACTIVE
};
goog.ui.Tooltip.prototype.setRequireInteraction = function(requireInteraction) {
  this.requireInteraction_ = requireInteraction
};
goog.ui.Tooltip.prototype.isCoordinateInTooltip = function(coord) {
  if(!this.isVisible()) {
    return false
  }
  var offset = goog.style.getPageOffset(this.getElement());
  var size = goog.style.getSize(this.getElement());
  return offset.x <= coord.x && coord.x <= offset.x + size.width && offset.y <= coord.y && coord.y <= offset.y + size.height
};
goog.ui.Tooltip.prototype.onBeforeShow = function() {
  if(!goog.ui.PopupBase.prototype.onBeforeShow.call(this)) {
    return false
  }
  if(this.anchor) {
    for(var tt, i = 0;tt = goog.ui.Tooltip.activeInstances_[i];i++) {
      if(!goog.dom.contains(tt.getElement(), this.anchor)) {
        tt.setVisible(false)
      }
    }
  }
  goog.array.insert(goog.ui.Tooltip.activeInstances_, this);
  var element = this.getElement();
  element.className = this.className;
  this.clearHideTimer();
  goog.events.listen(element, goog.events.EventType.MOUSEOVER, this.handleTooltipMouseOver, false, this);
  goog.events.listen(element, goog.events.EventType.MOUSEOUT, this.handleTooltipMouseOut, false, this);
  this.clearShowTimer();
  return true
};
goog.ui.Tooltip.prototype.onHide_ = function() {
  goog.array.remove(goog.ui.Tooltip.activeInstances_, this);
  var element = this.getElement();
  for(var tt, i = 0;tt = goog.ui.Tooltip.activeInstances_[i];i++) {
    if(tt.anchor && goog.dom.contains(element, tt.anchor)) {
      tt.setVisible(false)
    }
  }
  if(this.parentTooltip_) {
    this.parentTooltip_.startHideTimer()
  }
  goog.events.unlisten(element, goog.events.EventType.MOUSEOVER, this.handleTooltipMouseOver, false, this);
  goog.events.unlisten(element, goog.events.EventType.MOUSEOUT, this.handleTooltipMouseOut, false, this);
  this.anchor = undefined;
  if(this.getState() == goog.ui.Tooltip.State.INACTIVE) {
    this.seenInteraction_ = false
  }
  goog.ui.PopupBase.prototype.onHide_.call(this)
};
goog.ui.Tooltip.prototype.maybeShow = function(el, opt_pos) {
  if(this.anchor == el && this.elements_.contains(this.anchor)) {
    if(this.seenInteraction_ || !this.requireInteraction_) {
      this.setVisible(false);
      if(!this.isVisible()) {
        this.positionAndShow_(el, opt_pos)
      }
    }else {
      this.anchor = undefined
    }
  }
  this.showTimer = undefined
};
goog.ui.Tooltip.prototype.getElements = function() {
  return this.elements_
};
goog.ui.Tooltip.prototype.getActiveElement = function() {
  return this.activeEl_
};
goog.ui.Tooltip.prototype.setActiveElement = function(activeEl) {
  this.activeEl_ = activeEl
};
goog.ui.Tooltip.prototype.showForElement = function(el, opt_pos) {
  this.attach(el);
  this.activeEl_ = el;
  this.positionAndShow_(el, opt_pos)
};
goog.ui.Tooltip.prototype.positionAndShow_ = function(el, opt_pos) {
  this.anchor = el;
  this.setPosition(opt_pos || this.getPositioningStrategy(goog.ui.Tooltip.Activation.CURSOR));
  this.setVisible(true)
};
goog.ui.Tooltip.prototype.maybeHide = function(el) {
  this.hideTimer = undefined;
  if(el == this.anchor) {
    if((this.activeEl_ == null || this.activeEl_ != this.getElement() && !this.elements_.contains(this.activeEl_)) && !this.hasActiveChild()) {
      this.setVisible(false)
    }
  }
};
goog.ui.Tooltip.prototype.hasActiveChild = function() {
  return!!(this.childTooltip_ && this.childTooltip_.activeEl_)
};
goog.ui.Tooltip.prototype.saveCursorPosition_ = function(event) {
  var scroll = this.dom_.getDocumentScroll();
  this.cursorPosition.x = event.clientX + scroll.x;
  this.cursorPosition.y = event.clientY + scroll.y
};
goog.ui.Tooltip.prototype.handleMouseOver = function(event) {
  var el = this.getAnchorFromElement(event.target);
  this.activeEl_ = el;
  this.clearHideTimer();
  if(el != this.anchor) {
    this.anchor = el;
    this.startShowTimer(el);
    this.checkForParentTooltip_();
    this.saveCursorPosition_(event)
  }
};
goog.ui.Tooltip.prototype.getAnchorFromElement = function(el) {
  try {
    while(el && !this.elements_.contains(el)) {
      el = el.parentNode
    }
    return el
  }catch(e) {
    return null
  }
};
goog.ui.Tooltip.prototype.handleMouseMove = function(event) {
  this.saveCursorPosition_(event);
  this.seenInteraction_ = true
};
goog.ui.Tooltip.prototype.handleFocus = function(event) {
  var el = this.getAnchorFromElement(event.target);
  this.activeEl_ = el;
  this.seenInteraction_ = true;
  if(this.anchor != el) {
    this.anchor = el;
    var pos = this.getPositioningStrategy(goog.ui.Tooltip.Activation.FOCUS);
    this.clearHideTimer();
    this.startShowTimer(el, pos);
    this.checkForParentTooltip_()
  }
};
goog.ui.Tooltip.prototype.getPositioningStrategy = function(activationType) {
  if(activationType == goog.ui.Tooltip.Activation.CURSOR) {
    var coord = this.cursorPosition.clone();
    return new goog.ui.Tooltip.CursorTooltipPosition(coord)
  }
  return new goog.ui.Tooltip.ElementTooltipPosition(this.activeEl_)
};
goog.ui.Tooltip.prototype.checkForParentTooltip_ = function() {
  if(this.anchor) {
    for(var tt, i = 0;tt = goog.ui.Tooltip.activeInstances_[i];i++) {
      if(goog.dom.contains(tt.getElement(), this.anchor)) {
        tt.childTooltip_ = this;
        this.parentTooltip_ = tt
      }
    }
  }
};
goog.ui.Tooltip.prototype.handleMouseOutAndBlur = function(event) {
  var el = this.getAnchorFromElement(event.target);
  var elTo = this.getAnchorFromElement(event.relatedTarget);
  if(el == elTo) {
    return
  }
  if(el == this.activeEl_) {
    this.activeEl_ = null
  }
  this.clearShowTimer();
  this.seenInteraction_ = false;
  if(this.isVisible() && (!event.relatedTarget || !goog.dom.contains(this.getElement(), event.relatedTarget))) {
    this.startHideTimer()
  }else {
    this.anchor = undefined
  }
};
goog.ui.Tooltip.prototype.handleTooltipMouseOver = function(event) {
  var element = this.getElement();
  if(this.activeEl_ != element) {
    this.clearHideTimer();
    this.activeEl_ = element
  }
};
goog.ui.Tooltip.prototype.handleTooltipMouseOut = function(event) {
  var element = this.getElement();
  if(this.activeEl_ == element && (!event.relatedTarget || !goog.dom.contains(element, event.relatedTarget))) {
    this.activeEl_ = null;
    this.startHideTimer()
  }
};
goog.ui.Tooltip.prototype.startShowTimer = function(el, opt_pos) {
  if(!this.showTimer) {
    this.showTimer = goog.Timer.callOnce(goog.bind(this.maybeShow, this, el, opt_pos), this.showDelayMs_)
  }
};
goog.ui.Tooltip.prototype.clearShowTimer = function() {
  if(this.showTimer) {
    goog.Timer.clear(this.showTimer);
    this.showTimer = undefined
  }
};
goog.ui.Tooltip.prototype.startHideTimer = function() {
  if(this.getState() == goog.ui.Tooltip.State.SHOWING) {
    this.hideTimer = goog.Timer.callOnce(goog.bind(this.maybeHide, this, this.anchor), this.getHideDelayMs())
  }
};
goog.ui.Tooltip.prototype.clearHideTimer = function() {
  if(this.hideTimer) {
    goog.Timer.clear(this.hideTimer);
    this.hideTimer = undefined
  }
};
goog.ui.Tooltip.prototype.disposeInternal = function() {
  this.setVisible(false);
  this.clearShowTimer();
  this.detach();
  if(this.getElement()) {
    goog.dom.removeNode(this.getElement())
  }
  this.activeEl_ = null;
  delete this.dom_;
  goog.ui.Tooltip.superClass_.disposeInternal.call(this)
};
goog.ui.Tooltip.CursorTooltipPosition = function(arg1, opt_arg2) {
  goog.positioning.ViewportPosition.call(this, arg1, opt_arg2)
};
goog.inherits(goog.ui.Tooltip.CursorTooltipPosition, goog.positioning.ViewportPosition);
goog.ui.Tooltip.CursorTooltipPosition.prototype.reposition = function(element, popupCorner, opt_margin) {
  var viewportElt = goog.style.getClientViewportElement(element);
  var viewport = goog.style.getVisibleRectForElement(viewportElt);
  var margin = opt_margin ? new goog.math.Box(opt_margin.top + 10, opt_margin.right, opt_margin.bottom, opt_margin.left + 10) : new goog.math.Box(10, 0, 0, 10);
  if(goog.positioning.positionAtCoordinate(this.coordinate, element, goog.positioning.Corner.TOP_START, margin, viewport, goog.positioning.Overflow.ADJUST_X | goog.positioning.Overflow.FAIL_Y) & goog.positioning.OverflowStatus.FAILED) {
    goog.positioning.positionAtCoordinate(this.coordinate, element, goog.positioning.Corner.TOP_START, margin, viewport, goog.positioning.Overflow.ADJUST_X | goog.positioning.Overflow.ADJUST_Y)
  }
};
goog.ui.Tooltip.ElementTooltipPosition = function(element) {
  goog.positioning.AnchoredPosition.call(this, element, goog.positioning.Corner.BOTTOM_RIGHT)
};
goog.inherits(goog.ui.Tooltip.ElementTooltipPosition, goog.positioning.AnchoredPosition);
goog.ui.Tooltip.ElementTooltipPosition.prototype.reposition = function(element, popupCorner, opt_margin) {
  var offset = new goog.math.Coordinate(10, 0);
  if(goog.positioning.positionAtAnchor(this.element, this.corner, element, popupCorner, offset, opt_margin, goog.positioning.Overflow.ADJUST_X | goog.positioning.Overflow.FAIL_Y) & goog.positioning.OverflowStatus.FAILED) {
    goog.positioning.positionAtAnchor(this.element, goog.positioning.Corner.TOP_RIGHT, element, goog.positioning.Corner.BOTTOM_LEFT, offset, opt_margin, goog.positioning.Overflow.ADJUST_X | goog.positioning.Overflow.ADJUST_Y)
  }
};
goog.provide("X.caption");
goog.require("X.base");
goog.require("X.interactor");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.positioning.ViewportPosition");
goog.require("goog.ui.Tooltip");
X.caption = function(parent, x, y, interactor) {
  if(!goog.isDefAndNotNull(parent)) {
    throw new Error("No valid parent element.");
  }
  if(!goog.isNumber(x) || !goog.isNumber(y)) {
    throw new Error("Invalid coordinates.");
  }
  if(!goog.isDefAndNotNull(interactor) || !(interactor instanceof X.interactor)) {
    throw new Error("Invalid interactor.");
  }
  goog.base(this);
  this._classname = "caption";
  this._parent = parent;
  this._x = x;
  this._y = y;
  this._interactor = interactor;
  this._style = null;
  this._css = [];
  var css1 = ".x-tooltip {\n";
  css1 += "  background: #C0C0FF;\n";
  css1 += "  color: #000000;\n";
  css1 += "  border: 1px solid infotext;\n";
  css1 += "  padding: 1px;\n";
  css1 += "  font-family: sans-serif;\n";
  css1 += "}";
  this._css = [css1];
  goog.events.listenOnce(interactor, X.event.events.HOVER_END, this.kill.bind(this));
  this.init_()
};
goog.inherits(X.caption, goog.ui.Tooltip);
X.caption.prototype.init_ = function() {
  var position = goog.style.getComputedStyle(this._parent, "position");
  if(position == "static" || position == "") {
    this._parent.style.position = "relative"
  }
  var head = goog.dom.getDocument().getElementsByTagName("head")[0];
  var style = goog.dom.createDom("style");
  style.type = "text/css";
  style.media = "screen";
  var css = goog.dom.createTextNode(this._css[0]);
  goog.dom.appendChild(head, style);
  goog.dom.appendChild(style, css);
  this._style = style;
  this.setPosition(new goog.positioning.ViewportPosition(this._x, this._y));
  this.setVisible(true);
  this.attach(this._parent);
  var captionElement = this.getElement();
  captionElement.classList.add("x-tooltip")
};
X.caption.prototype.kill = function() {
  this.setVisible(false);
  if(this._style) {
    goog.dom.removeNode(this._style)
  }
  if(this.getElement()) {
    goog.dom.removeNode(this.getElement())
  }
  this._style = null
};
goog.provide("X.renderer3D");
goog.require("X.buffer");
goog.require("X.caption");
goog.require("X.matrix");
goog.require("X.renderer");
goog.require("X.shaders");
goog.require("X.triplets");
goog.require("X.vector");
goog.require("goog.structs.Map");
goog.require("goog.style");
X.renderer3D = function() {
  goog.base(this);
  this._classname = "renderer3D";
  this._shaders = null;
  this._shaderProgram = null;
  this._minX = null;
  this._maxX = null;
  this._minY = null;
  this._maxY = null;
  this._minZ = null;
  this._maxZ = null;
  this._center = [0, 0, 0];
  this._bgColor = [0, 0, 0];
  this._pickFrameBuffer = null;
  this._attributePointers = new goog.structs.Map;
  this._uniformLocations = new goog.structs.Map;
  this._vertexBuffers = new goog.structs.Map;
  this._normalBuffers = new goog.structs.Map;
  this._colorBuffers = new goog.structs.Map;
  this._scalarBuffers = new goog.structs.Map;
  this._texturePositionBuffers = new goog.structs.Map;
  this._textures = new goog.structs.Map;
  this._config = {"PROGRESSBAR_ENABLED":true, "PICKING_ENABLED":true, "ORDERING_ENABLED":true, "STATISTICS_ENABLED":false, "INTERMEDIATE_RENDERING":false}
};
goog.inherits(X.renderer3D, X.renderer);
X.renderer3D.prototype.__defineGetter__("config", function() {
  return this._config
});
X.renderer3D.prototype.resetBoundingBox = function() {
  this._minX = null;
  this._maxX = null;
  this._minY = null;
  this._maxY = null;
  this._minZ = null;
  this._maxZ = null;
  this._center = [0, 0, 0]
};
X.renderer3D.prototype.onHover_ = function(event) {
  goog.base(this, "onHover_", event);
  this.showCaption_(event._x, event._y)
};
X.renderer3D.prototype.init = function() {
  goog.base(this, "init", "experimental-webgl");
  try {
    this._context.viewport(0, 0, this._width, this._height);
    this._context.clearColor(this._bgColor[0], this._bgColor[1], this._bgColor[2], 0);
    this._context.enable(this._context.BLEND);
    this._context.blendEquation(this._context.FUNC_ADD);
    this._context.blendFunc(this._context.SRC_ALPHA, this._context.ONE_MINUS_SRC_ALPHA);
    this._context.enable(this._context.DEPTH_TEST);
    this._context.depthFunc(this._context.LEQUAL);
    this._context.clear(this._context.COLOR_BUFFER_BIT | this._context.DEPTH_BUFFER_BIT);
    if(this._config["PICKING_ENABLED"]) {
      var pickFrameBuffer = this._context.createFramebuffer();
      var pickRenderBuffer = this._context.createRenderbuffer();
      var pickTexture = this._context.createTexture();
      this._context.bindTexture(this._context.TEXTURE_2D, pickTexture);
      this._context.texImage2D(this._context.TEXTURE_2D, 0, this._context.RGB, this._width, this._height, 0, this._context.RGB, this._context.UNSIGNED_BYTE, null);
      this._context.texParameteri(this._context.TEXTURE_2D, this._context.TEXTURE_WRAP_S, this._context.CLAMP_TO_EDGE);
      this._context.texParameteri(this._context.TEXTURE_2D, this._context.TEXTURE_WRAP_T, this._context.CLAMP_TO_EDGE);
      this._context.texParameteri(this._context.TEXTURE_2D, this._context.TEXTURE_MAG_FILTER, this._context.NEAREST);
      this._context.texParameteri(this._context.TEXTURE_2D, this._context.TEXTURE_MIN_FILTER, this._context.NEAREST);
      this._context.bindFramebuffer(this._context.FRAMEBUFFER, pickFrameBuffer);
      this._context.bindRenderbuffer(this._context.RENDERBUFFER, pickRenderBuffer);
      this._context.renderbufferStorage(this._context.RENDERBUFFER, this._context.DEPTH_COMPONENT16, this._width, this._height);
      this._context.bindRenderbuffer(this._context.RENDERBUFFER, null);
      this._context.framebufferTexture2D(this._context.FRAMEBUFFER, this._context.COLOR_ATTACHMENT0, this._context.TEXTURE_2D, pickTexture, 0);
      this._context.framebufferRenderbuffer(this._context.FRAMEBUFFER, this._context.DEPTH_ATTACHMENT, this._context.RENDERBUFFER, pickRenderBuffer);
      this._context.bindFramebuffer(this._context.FRAMEBUFFER, null);
      this._pickFrameBuffer = pickFrameBuffer
    }
  }catch(e) {
    throw new Error("Exception while accessing GL Context!\n" + e);
  }
  var _defaultShaders = new X.shaders;
  this.addShaders(_defaultShaders)
};
X.renderer3D.prototype.addShaders = function(shaders) {
  if(!goog.isDefAndNotNull(this._canvas) || !goog.isDefAndNotNull(this._context) || !goog.isDefAndNotNull(this._camera)) {
    throw new Error("Renderer was not initialized properly.");
  }
  if(!goog.isDefAndNotNull(shaders) || !(shaders instanceof X.shaders)) {
    throw new Error("Could not add shaders.");
  }
  shaders.validate();
  var _glFragmentShader = this._context.createShader(this._context.FRAGMENT_SHADER);
  var _glVertexShader = this._context.createShader(this._context.VERTEX_SHADER);
  this._context.shaderSource(_glFragmentShader, shaders.fragment());
  this._context.shaderSource(_glVertexShader, shaders.vertex());
  this._context.compileShader(_glFragmentShader);
  this._context.compileShader(_glVertexShader);
  if(!this._context.getShaderParameter(_glFragmentShader, this._context.COMPILE_STATUS)) {
    throw new Error("Fragement Shader compilation failed!\n" + this._context.getShaderInfoLog(_glFragmentShader));
  }
  if(!this._context.getShaderParameter(_glVertexShader, this._context.COMPILE_STATUS)) {
    throw new Error("Vertex Shader compilation failed!\n" + this._context.getShaderInfoLog(_glVertexShader));
  }
  var _shaderProgram = this._context.createProgram();
  this._context.attachShader(_shaderProgram, _glVertexShader);
  this._context.attachShader(_shaderProgram, _glFragmentShader);
  this._context.linkProgram(_shaderProgram);
  if(!this._context.getProgramParameter(_shaderProgram, this._context.LINK_STATUS)) {
    throw new Error("Could not create shader program!\n" + this._context.getShaderInfoLog(_glFragmentShader) + "\n" + this._context.getShaderInfoLog(_glVertexShader) + "\n" + this._context.getProgramInfoLog(_shaderProgram));
  }
  this._context.useProgram(_shaderProgram);
  this._shaderProgram = _shaderProgram;
  var _attributes = Object.keys(X.shaders.attributes);
  _attributes.forEach(function(a) {
    a = X.shaders.attributes[a];
    this._attributePointers.set(a, this._context.getAttribLocation(this._shaderProgram, a));
    this._context.enableVertexAttribArray(this._attributePointers.get(a))
  }.bind(this));
  var _uniforms = Object.keys(X.shaders.uniforms);
  _uniforms.forEach(function(u) {
    u = X.shaders.uniforms[u];
    this._uniformLocations.set(u, this._context.getUniformLocation(this._shaderProgram, u))
  }.bind(this));
  this._shaders = shaders
};
X.renderer3D.prototype.update_ = function(object) {
  goog.base(this, "update_", object);
  var existed = false;
  if(!goog.isDefAndNotNull(object)) {
    return
  }
  if(this.get(object._id)) {
    existed = true
  }
  var id = object._id;
  var points = object._points;
  var normals = object._normals;
  var colors = object._colors;
  var texture = object._texture;
  var file = object._file;
  var transform = object._transform;
  var colortable = object._colortable;
  var labelmap = object._labelmap;
  var scalars = object._scalars;
  if(goog.isDefAndNotNull(labelmap) && goog.isDefAndNotNull(labelmap._file) && labelmap._file._dirty) {
    this.update_(labelmap);
    return
  }
  if(goog.isDefAndNotNull(labelmap) && labelmap._dirty) {
    this.update_(labelmap)
  }
  if(goog.isDefAndNotNull(colortable) && goog.isDefAndNotNull(colortable._file) && colortable._file._dirty) {
    this._loader.load(colortable, object);
    return
  }else {
    if(goog.isDefAndNotNull(texture) && goog.isDefAndNotNull(texture._file) && texture._file._dirty) {
      this._loader.load(texture, object);
      return
    }else {
      if(goog.isDefAndNotNull(file) && goog.isArray(file)) {
        if(!goog.isDefAndNotNull(object.MRI)) {
          var _k = 0;
          var _len = file.length;
          for(_k = 0;_k < _len;_k++) {
            this._loader.load(file[_k], object)
          }
          return
        }else {
          if(object.MRI.loaded_files != file.length) {
            return
          }else {
            if(!object._dirty) {
              return
            }
          }
        }
      }else {
        if(goog.isDefAndNotNull(file) && file._dirty) {
          this._loader.load(object, object);
          return
        }else {
          if(goog.isDefAndNotNull(scalars) && goog.isDefAndNotNull(scalars._file) && scalars._file._dirty) {
            this._loader.load(scalars, object);
            return
          }
        }
      }
    }
  }
  if(object._children.length > 0) {
    var children = object._children;
    var numberOfChildren = children.length;
    var c = 0;
    for(c = 0;c < numberOfChildren;c++) {
      this.update_(children[c])
    }
  }
  if(!points) {
    object._dirty = false;
    return
  }
  var counter = 0;
  while(this._locked) {
    counter++;
    window.console.log("Possible thread lock avoided: " + counter)
  }
  this._locked = true;
  var isLabelMap = object instanceof X.slice && object._volume instanceof X.labelmap;
  if(existed && goog.isDefAndNotNull(texture) && texture._dirty) {
    var oldTexturePositionBuffer = this._texturePositionBuffers.get(id);
    if(goog.isDefAndNotNull(oldTexturePositionBuffer)) {
      if(this._context.isBuffer(oldTexturePositionBuffer._glBuffer)) {
        this._context.deleteBuffer(oldTexturePositionBuffer._glBuffer)
      }
    }
  }
  var texturePositionBuffer = null;
  if(goog.isDefAndNotNull(texture)) {
    if(!existed || texture._dirty) {
      var textureCoordinateMap = object._textureCoordinateMap;
      if(!goog.isDefAndNotNull(textureCoordinateMap)) {
        var m = "Can not add an object and texture ";
        m += "without valid coordinate mapping! Set the textureCoordinateMap!";
        throw new Error(m);
      }
      var _flipY = false;
      if(texture._rawData) {
        _flipY = true
      }
      this._context.pixelStorei(this._context.UNPACK_FLIP_Y_WEBGL, _flipY);
      var glTexture = this._context.createTexture();
      glTexture.image = texture._image;
      this._textures.set(texture._id, glTexture);
      this._context.bindTexture(this._context.TEXTURE_2D, glTexture);
      if(texture._rawData) {
        var _texture_type = this._context.RGBA;
        if(texture._grayscale) {
          _texture_type = this._context.LUMINANCE;
          this._context.pixelStorei(this._context.UNPACK_ALIGNMENT, 1)
        }
        this._context.texImage2D(this._context.TEXTURE_2D, 0, _texture_type, texture._rawDataWidth, texture._rawDataHeight, 0, _texture_type, this._context.UNSIGNED_BYTE, texture._rawData)
      }else {
        this._context.texImage2D(this._context.TEXTURE_2D, 0, this._context.RGBA, this._context.RGBA, this._context.UNSIGNED_BYTE, glTexture.image)
      }
      this._context.texParameteri(this._context.TEXTURE_2D, this._context.TEXTURE_WRAP_S, this._context.CLAMP_TO_EDGE);
      this._context.texParameteri(this._context.TEXTURE_2D, this._context.TEXTURE_WRAP_T, this._context.CLAMP_TO_EDGE);
      if(isLabelMap) {
        this._context.texParameteri(this._context.TEXTURE_2D, this._context.TEXTURE_MAG_FILTER, this._context.NEAREST);
        this._context.texParameteri(this._context.TEXTURE_2D, this._context.TEXTURE_MIN_FILTER, this._context.NEAREST)
      }else {
        this._context.texParameteri(this._context.TEXTURE_2D, this._context.TEXTURE_MAG_FILTER, this._context.LINEAR);
        this._context.texParameteri(this._context.TEXTURE_2D, this._context.TEXTURE_MIN_FILTER, this._context.LINEAR)
      }
      this._context.bindTexture(this._context.TEXTURE_2D, null);
      var glTexturePositionBuffer = this._context.createBuffer();
      this._context.bindBuffer(this._context.ARRAY_BUFFER, glTexturePositionBuffer);
      this._context.bufferData(this._context.ARRAY_BUFFER, new Float32Array(textureCoordinateMap), this._context.STATIC_DRAW);
      texturePositionBuffer = new X.buffer(glTexturePositionBuffer, textureCoordinateMap.length, 2);
      this._texturePositionBuffers.set(id, texturePositionBuffer);
      texture._dirty = false
    }else {
      texturePositionBuffer = this._texturePositionBuffers.get(id)
    }
  }
  this._loader.addProgress(0.1);
  if(isLabelMap) {
    this._locked = false;
    X.TIMERSTOP(this._classname + ".update");
    this._loader.addProgress(0.9);
    return
  }
  if(!existed || points._dirty || transform._dirty) {
    var transformationMatrix = transform._matrix;
    var tMin = X.matrix.multiplyByVector(transformationMatrix, points._minA, points._minB, points._minC);
    var tMax = X.matrix.multiplyByVector(transformationMatrix, points._maxA, points._maxB, points._maxC);
    if(goog.isNull(this._minX) || tMin.x < this._minX) {
      this._minX = tMin.x
    }
    if(goog.isNull(this._maxX) || tMax.x > this._maxX) {
      this._maxX = tMax.x
    }
    if(goog.isNull(this._minY) || tMin.y < this._minY) {
      this._minY = tMin.y
    }
    if(goog.isNull(this._maxY) || tMax.y > this._maxY) {
      this._maxY = tMax.y
    }
    if(goog.isNull(this._minZ) || tMin.z < this._minZ) {
      this._minZ = tMin.z
    }
    if(goog.isNull(this._maxZ) || tMax.z > this._maxZ) {
      this._maxZ = tMax.z
    }
    this._center = [(this._minX + this._maxX) / 2, (this._minY + this._maxY) / 2, (this._minZ + this._maxZ) / 2];
    transform._dirty = false
  }
  if(existed && points._dirty) {
    var oldVertexBuffer = this._vertexBuffers.get(id);
    if(goog.isDefAndNotNull(oldVertexBuffer)) {
      if(this._context.isBuffer(oldVertexBuffer._glBuffer)) {
        this._context.deleteBuffer(oldVertexBuffer._glBuffer)
      }
    }
  }
  var vertexBuffer = null;
  if(!existed || points._dirty) {
    var glVertexBuffer = this._context.createBuffer();
    points.resize();
    this._context.bindBuffer(this._context.ARRAY_BUFFER, glVertexBuffer);
    this._context.bufferData(this._context.ARRAY_BUFFER, points._triplets, this._context.STATIC_DRAW);
    vertexBuffer = new X.buffer(glVertexBuffer, points.count, 3);
    points._dirty = false
  }else {
    vertexBuffer = this._vertexBuffers.get(id)
  }
  this._loader.addProgress(0.3);
  if(existed && normals._dirty) {
    var oldNormalBuffer = this._vertexBuffers.get(id);
    if(goog.isDefAndNotNull(oldNormalBuffer)) {
      if(this._context.isBuffer(oldNormalBuffer._glBuffer)) {
        this._context.deleteBuffer(oldNormalBuffer._glBuffer)
      }
    }
  }
  var normalBuffer = null;
  if(!existed || normals._dirty) {
    var glNormalBuffer = this._context.createBuffer();
    normals.resize();
    this._context.bindBuffer(this._context.ARRAY_BUFFER, glNormalBuffer);
    this._context.bufferData(this._context.ARRAY_BUFFER, normals._triplets, this._context.STATIC_DRAW);
    normalBuffer = new X.buffer(glNormalBuffer, normals.count, 3);
    normals._dirty = false
  }else {
    normalBuffer = this._normalBuffers.get(id)
  }
  this._loader.addProgress(0.3);
  if(existed && colors && colors._dirty) {
    var oldColorBuffer = this._colorBuffers.get(id);
    if(goog.isDefAndNotNull(oldColorBuffer)) {
      if(this._context.isBuffer(oldColorBuffer._glBuffer)) {
        this._context.deleteBuffer(oldColorBuffer._glBuffer)
      }
    }
  }
  var colorBuffer = null;
  if(colors) {
    if(!existed || colors._dirty) {
      if(colors.length != points.length) {
        throw new Error("Mismatch between points and point colors.");
      }
      var glColorBuffer = this._context.createBuffer();
      colors.resize();
      this._context.bindBuffer(this._context.ARRAY_BUFFER, glColorBuffer);
      this._context.bufferData(this._context.ARRAY_BUFFER, colors._triplets, this._context.STATIC_DRAW);
      colorBuffer = new X.buffer(glColorBuffer, colors.count, 3);
      colors._dirty = false
    }else {
      colorBuffer = this._colorBuffers.get(id)
    }
  }
  this._loader.addProgress(0.2);
  if(existed && scalars && scalars._dirty) {
    var oldScalarBuffer = this._scalarBuffers.get(id);
    if(goog.isDefAndNotNull(oldScalarBuffer)) {
      if(this._context.isBuffer(oldScalarBuffer._glBuffer)) {
        this._context.deleteBuffer(oldScalarBuffer._glBuffer)
      }
    }
  }
  var scalarBuffer = null;
  if(scalars) {
    var scalarsArray = scalars._glArray;
    if(!existed || scalars._dirty) {
      if(scalarsArray.length != points.length) {
        throw new Error("Mismatch between points and scalars.");
      }
      var glScalarBuffer = this._context.createBuffer();
      this._context.bindBuffer(this._context.ARRAY_BUFFER, glScalarBuffer);
      this._context.bufferData(this._context.ARRAY_BUFFER, scalarsArray, this._context.STATIC_DRAW);
      scalarBuffer = new X.buffer(glScalarBuffer, scalarsArray.length, 3);
      scalars._dirty = false
    }else {
      scalarBuffer = this._scalarBuffers.get(id)
    }
  }
  this._loader.addProgress(0.1);
  if(!existed) {
    this._objects.add(object)
  }
  this._vertexBuffers.set(id, vertexBuffer);
  this._normalBuffers.set(id, normalBuffer);
  this._colorBuffers.set(id, colorBuffer);
  this._texturePositionBuffers.set(id, texturePositionBuffer);
  this._scalarBuffers.set(id, scalarBuffer);
  object._dirty = false;
  this._locked = false
};
X.renderer3D.prototype.showCaption_ = function(x, y) {
  var pickedId = this.pick(x, y);
  var object = this.get(pickedId);
  if(object) {
    var caption = object._caption;
    if(caption) {
      var pos = goog.style.getClientPosition(this._container);
      var t = new X.caption(this._container, pos.x + x + 10, pos.y + y + 10, this._interactor);
      t.setHtml(caption)
    }
  }
};
X.renderer3D.prototype.orientVolume_ = function(volume) {
  var realCentroidVector = X.matrix.multiplyByVector(this._camera._view, volume._RASCenter[0] + volume._childrenInfo[0]._sliceNormal[0], volume._RASCenter[1] + volume._childrenInfo[0]._sliceNormal[1], volume._RASCenter[2] + volume._childrenInfo[0]._sliceNormal[2]);
  var realCentroidVector2 = X.matrix.multiplyByVector(this._camera._view, volume._RASCenter[0] - volume._childrenInfo[0]._sliceNormal[0], volume._RASCenter[1] - volume._childrenInfo[0]._sliceNormal[1], volume._RASCenter[2] - volume._childrenInfo[0]._sliceNormal[2]);
  var dX = Math.abs(realCentroidVector.z - realCentroidVector2.z);
  realCentroidVector = X.matrix.multiplyByVector(this._camera._view, volume._RASCenter[0] + volume._childrenInfo[1]._sliceNormal[0], volume._RASCenter[1] + volume._childrenInfo[1]._sliceNormal[1], volume._RASCenter[2] + volume._childrenInfo[1]._sliceNormal[2]);
  realCentroidVector2 = X.matrix.multiplyByVector(this._camera._view, volume._RASCenter[0] - volume._childrenInfo[1]._sliceNormal[0], volume._RASCenter[1] - volume._childrenInfo[1]._sliceNormal[1], volume._RASCenter[2] + -volume._childrenInfo[1]._sliceNormal[2]);
  var dY = Math.abs(realCentroidVector.z - realCentroidVector2.z);
  realCentroidVector = X.matrix.multiplyByVector(this._camera._view, volume._RASCenter[0] + volume._childrenInfo[2]._sliceNormal[0], volume._RASCenter[1] + volume._childrenInfo[2]._sliceNormal[1], volume._RASCenter[2] + volume._childrenInfo[2]._sliceNormal[2]);
  realCentroidVector2 = X.matrix.multiplyByVector(this._camera._view, volume._RASCenter[0] - volume._childrenInfo[2]._sliceNormal[0], volume._RASCenter[1] - volume._childrenInfo[2]._sliceNormal[1], volume._RASCenter[2] - volume._childrenInfo[2]._sliceNormal[2]);
  var dZ = Math.abs(realCentroidVector.z - realCentroidVector2.z);
  var maxDistance = Math.max(dX, dY, dZ);
  if(maxDistance == dX) {
    volume.volumeRendering_(0)
  }else {
    if(maxDistance == dY) {
      volume.volumeRendering_(1)
    }else {
      volume.volumeRendering_(2)
    }
  }
};
X.renderer3D.prototype.distanceToEye_ = function(object) {
  var centroid = object._points._centroid;
  var transformedCentroidVector = X.matrix.multiplyByVector(object._transform._matrix, centroid[0], centroid[1], centroid[2]);
  var realCentroidVector = X.matrix.multiplyByVector(this._camera._view, transformedCentroidVector.x, transformedCentroidVector.y, transformedCentroidVector.z);
  var distanceFromEye = X.vector.distance(this._camera._position, realCentroidVector);
  return Math.round(distanceFromEye * 1E3) / 1E3
};
X.renderer3D.prototype.order_ = function() {
  var reSortRequired = false;
  var topLevelObjects = this._topLevelObjects;
  var numberOfTopLevelObjects = topLevelObjects.length;
  var t;
  t = numberOfTopLevelObjects - 1;
  do {
    var object = topLevelObjects[t];
    if(object instanceof X.volume && object._volumeRendering && object._volumeRenderingDirection != -1) {
      var _slices = object._children[object._volumeRenderingDirection]._children;
      var numberOfSlices = _slices.length;
      var firstSlice = _slices[0];
      var _targetChild = object._volumeRenderingDirection;
      var realCentroidVector = X.matrix.multiplyByVector(this._camera._view, object._RASCenter[0] + object._childrenInfo[_targetChild]._sliceDirection[0], object._RASCenter[1] + object._childrenInfo[_targetChild]._sliceDirection[1], object._RASCenter[2] + object._childrenInfo[_targetChild]._sliceDirection[2]);
      var realCentroidVector2 = X.matrix.multiplyByVector(this._camera._view, object._RASCenter[0] - object._childrenInfo[_targetChild]._sliceDirection[0], object._RASCenter[1] - object._childrenInfo[_targetChild]._sliceDirection[1], object._RASCenter[2] - object._childrenInfo[_targetChild]._sliceDirection[2]);
      var dX = realCentroidVector.z - realCentroidVector2.z;
      var _acquisitionDirection = Math.max(object._IJKToRAS[object._volumeRenderingDirection], Math.max(object._IJKToRAS[object._volumeRenderingDirection + 4], object._IJKToRAS[object._volumeRenderingDirection + 8]));
      var _acquisitionDirection2 = Math.min(object._IJKToRAS[object._volumeRenderingDirection], Math.min(object._IJKToRAS[object._volumeRenderingDirection + 4], object._IJKToRAS[object._volumeRenderingDirection + 8]));
      var _acquisitionSign = _acquisitionDirection + _acquisitionDirection2;
      if(dX * _acquisitionSign < 0) {
        var s = 0;
        for(s = 0;s < object._range[_targetChild] - 1;s++) {
          if(!_slices[s]) {
            continue
          }
          _slices[s]._opacity = object._opacity;
          _slices[s]._distance = object._childrenInfo[_targetChild]._sliceSpacing * s
        }
      }else {
        var s = object._range[_targetChild] - 1;
        for(s = object._range[_targetChild] - 1;s >= 0;s--) {
          if(!_slices[s]) {
            continue
          }
          _slices[s]._opacity = object._opacity;
          _slices[s]._distance = (object._range[_targetChild] - 1) * object._childrenInfo[_targetChild]._sliceSpacing - object._childrenInfo[_targetChild]._sliceSpacing * s
        }
      }
      reSortRequired = true
    }
  }while(t--);
  var objects = this._objects.values();
  var numberOfObjects = objects.length;
  var i;
  i = numberOfObjects - 1;
  do {
    var object = objects[i];
    if(!object._visible) {
      continue
    }
    if(object._opacity == 1 || object instanceof X.slice) {
      continue
    }
    object._distance = this.distanceToEye_(object);
    reSortRequired = true
  }while(i--);
  if(reSortRequired) {
    this._objects.sort()
  }
};
X.renderer3D.prototype.pick = function(x, y) {
  if(this._config["PICKING_ENABLED"]) {
    this.render_(true, false);
    var data = new Uint8Array(4);
    this._context.readPixels(x, this._height - y, 1, 1, this._context.RGBA, this._context.UNSIGNED_BYTE, data);
    var r = data[0];
    var g = data[1];
    var b = data[2];
    return r + g * 255 + b * 255 * 255
  }else {
    return-1
  }
};
X.renderer3D.prototype.render_ = function(picking, invoked) {
  goog.base(this, "render_", picking, invoked);
  this._context.viewport(0, 0, this._width, this._height);
  this._context.clear(this._context.COLOR_BUFFER_BIT | this._context.DEPTH_BUFFER_BIT);
  var _objects = this._objects.values();
  var _numberOfObjects = _objects.length;
  if(_numberOfObjects == 0) {
    return
  }
  if(picking) {
    this._context.bindFramebuffer(this._context.FRAMEBUFFER, this._pickFrameBuffer)
  }else {
    this._context.bindFramebuffer(this._context.FRAMEBUFFER, null)
  }
  var perspectiveMatrix = this._camera._perspective;
  var viewMatrix = this._camera._view;
  this._context.uniformMatrix4fv(this._uniformLocations.get(X.shaders.uniforms.PERSPECTIVE), false, perspectiveMatrix);
  this._context.uniformMatrix4fv(this._uniformLocations.get(X.shaders.uniforms.VIEW), false, viewMatrix);
  var center = this._center;
  this._context.uniform3f(this._uniformLocations.get(X.shaders.uniforms.CENTER), parseFloat(center[0]), parseFloat(center[1]), parseFloat(center[2]));
  var i;
  var topLevelObjectsLength = this._topLevelObjects.length;
  for(i = 0;i < topLevelObjectsLength;++i) {
    var topLevelObject = this._topLevelObjects[i];
    if(topLevelObject instanceof X.volume) {
      this.orientVolume_(topLevelObject)
    }
  }
  if(this._config["ORDERING_ENABLED"]) {
    this.order_()
  }
  var statisticsEnabled = !picking && goog.isDefAndNotNull(invoked) && invoked && this._config["STATISTICS_ENABLED"];
  if(statisticsEnabled) {
    var verticesCounter = 0;
    var trianglesCounter = 0;
    var linesCounter = 0;
    var pointsCounter = 0
  }
  var aPointers = this._attributePointers;
  var aPosition = aPointers.get(X.shaders.attributes.VERTEXPOSITION);
  var aNormal = aPointers.get(X.shaders.attributes.VERTEXNORMAL);
  var aColor = aPointers.get(X.shaders.attributes.VERTEXCOLOR);
  var aTexturePosition = aPointers.get(X.shaders.attributes.VERTEXTEXTUREPOS);
  var aScalar = aPointers.get(X.shaders.attributes.VERTEXSCALAR);
  var uLocations = this._uniformLocations;
  var uUsePicking = uLocations.get(X.shaders.uniforms.USEPICKING);
  var uUseObjectColor = uLocations.get(X.shaders.uniforms.USEOBJECTCOLOR);
  var uObjectColor = uLocations.get(X.shaders.uniforms.OBJECTCOLOR);
  var uUseScalars = uLocations.get(X.shaders.uniforms.USESCALARS);
  var uScalarsReplaceMode = uLocations.get(X.shaders.uniforms.SCALARSREPLACEMODE);
  var uScalarsMin = uLocations.get(X.shaders.uniforms.SCALARSMIN);
  var uScalarsMax = uLocations.get(X.shaders.uniforms.SCALARSMAX);
  var uScalarsMinColor = uLocations.get(X.shaders.uniforms.SCALARSMINCOLOR);
  var uScalarsMaxColor = uLocations.get(X.shaders.uniforms.SCALARSMAXCOLOR);
  var uScalarsInterpolation = uLocations.get(X.shaders.uniforms.SCALARSINTERPOLATION);
  var uScalarsMinThreshold = uLocations.get(X.shaders.uniforms.SCALARSMINTHRESHOLD);
  var uScalarsMaxThreshold = uLocations.get(X.shaders.uniforms.SCALARSMAXTHRESHOLD);
  var uObjectOpacity = uLocations.get(X.shaders.uniforms.OBJECTOPACITY);
  var uLabelMapOpacity = uLocations.get(X.shaders.uniforms.LABELMAPOPACITY);
  var uLabelMapColor = uLocations.get(X.shaders.uniforms.LABELMAPCOLOR);
  var uUseTexture = uLocations.get(X.shaders.uniforms.USETEXTURE);
  var uUseLabelMapTexture = uLocations.get(X.shaders.uniforms.USELABELMAPTEXTURE);
  var uTextureSampler = uLocations.get(X.shaders.uniforms.TEXTURESAMPLER);
  var uTextureSampler2 = uLocations.get(X.shaders.uniforms.TEXTURESAMPLER2);
  var uVolumeLowerThreshold = uLocations.get(X.shaders.uniforms.VOLUMELOWERTHRESHOLD);
  var uVolumeUpperThreshold = uLocations.get(X.shaders.uniforms.VOLUMEUPPERTHRESHOLD);
  var uVolumeScalarMin = uLocations.get(X.shaders.uniforms.VOLUMESCALARMIN);
  var uVolumeScalarMax = uLocations.get(X.shaders.uniforms.VOLUMESCALARMAX);
  var uVolumeWindowLow = uLocations.get(X.shaders.uniforms.VOLUMEWINDOWLOW);
  var uVolumeWindowHigh = uLocations.get(X.shaders.uniforms.VOLUMEWINDOWHIGH);
  var uVolumeScalarMinColor = uLocations.get(X.shaders.uniforms.VOLUMESCALARMINCOLOR);
  var uVolumeScalarMaxColor = uLocations.get(X.shaders.uniforms.VOLUMESCALARMAXCOLOR);
  var uVolumeTexture = uLocations.get(X.shaders.uniforms.VOLUMETEXTURE);
  var uObjectTransform = uLocations.get(X.shaders.uniforms.OBJECTTRANSFORM);
  var uPointSize = uLocations.get(X.shaders.uniforms.POINTSIZE);
  i = _numberOfObjects;
  do {
    var object = _objects[_numberOfObjects - i];
    if(object) {
      var volume = null;
      if(object instanceof X.slice && object._volume) {
        volume = object._volume
      }
      if(!object._visible || volume && !volume._visible) {
        continue
      }
      if(picking && !object._pickable) {
        continue
      }
      var id = object._id;
      var magicMode = object._magicmode;
      var vertexBuffer = this._vertexBuffers.get(id);
      var normalBuffer = this._normalBuffers.get(id);
      var colorBuffer = this._colorBuffers.get(id);
      var scalarBuffer = this._scalarBuffers.get(id);
      var texturePositionBuffer = this._texturePositionBuffers.get(id);
      this._context.bindBuffer(this._context.ARRAY_BUFFER, vertexBuffer._glBuffer);
      this._context.vertexAttribPointer(aPosition, vertexBuffer._itemSize, this._context.FLOAT, false, 0, 0);
      this._context.bindBuffer(this._context.ARRAY_BUFFER, normalBuffer._glBuffer);
      this._context.vertexAttribPointer(aNormal, normalBuffer._itemSize, this._context.FLOAT, false, 0, 0);
      if(picking) {
        this._context.uniform1i(uUsePicking, true)
      }else {
        this._context.uniform1i(uUsePicking, false)
      }
      if(colorBuffer && !picking && !magicMode) {
        this._context.uniform1i(uUseObjectColor, false);
        this._context.bindBuffer(this._context.ARRAY_BUFFER, colorBuffer._glBuffer);
        this._context.vertexAttribPointer(aColor, colorBuffer._itemSize, this._context.FLOAT, false, 0, 0)
      }else {
        var useObjectColor = 1;
        if(magicMode && !picking) {
          useObjectColor = 0
        }
        this._context.uniform1i(uUseObjectColor, useObjectColor);
        var objectColor = object._color;
        if(picking) {
          var r = Math.floor(id % (255 * 255) % 255);
          var g = Math.floor(id % (255 * 255) / 255);
          var b = Math.floor(id / (255 * 255));
          objectColor = [r / 255, g / 255, b / 255]
        }
        this._context.uniform3f(uObjectColor, parseFloat(objectColor[0]), parseFloat(objectColor[1]), parseFloat(objectColor[2]));
        this._context.vertexAttribPointer(aColor, vertexBuffer._itemSize, this._context.FLOAT, false, 0, 0)
      }
      if(scalarBuffer && !picking && !magicMode) {
        this._context.uniform1i(uUseScalars, true);
        this._context.uniform1i(uScalarsReplaceMode, object._scalars._replaceMode);
        var minColor = object._scalars._minColor;
        var maxColor = object._scalars._maxColor;
        this._context.uniform3f(uScalarsMinColor, parseFloat(minColor[0]), parseFloat(minColor[1]), parseFloat(minColor[2]));
        this._context.uniform3f(uScalarsMaxColor, parseFloat(maxColor[0]), parseFloat(maxColor[1]), parseFloat(maxColor[2]));
        this._context.uniform1f(uScalarsMinThreshold, parseFloat(object._scalars._lowerThreshold));
        this._context.uniform1f(uScalarsMaxThreshold, parseFloat(object._scalars._upperThreshold));
        this._context.uniform1f(uScalarsMin, parseFloat(object._scalars._min));
        this._context.uniform1f(uScalarsMax, parseFloat(object._scalars._max));
        this._context.uniform1i(uScalarsInterpolation, parseInt(object._scalars._interpolation, 10));
        this._context.bindBuffer(this._context.ARRAY_BUFFER, scalarBuffer._glBuffer);
        this._context.vertexAttribPointer(aScalar, scalarBuffer._itemSize, this._context.FLOAT, false, 0, 0)
      }else {
        this._context.uniform1i(uUseScalars, false);
        this._context.vertexAttribPointer(aScalar, vertexBuffer._itemSize, this._context.FLOAT, false, 0, 0)
      }
      this._context.uniform1f(uObjectOpacity, parseFloat(object._opacity));
      if(object._texture && texturePositionBuffer && !picking) {
        this._context.uniform1i(uUseTexture, true);
        this._context.activeTexture(this._context.TEXTURE0);
        this._context.bindTexture(this._context.TEXTURE_2D, this._textures.get(object._texture._id));
        this._context.uniform1i(uTextureSampler, 0);
        this._context.bindBuffer(this._context.ARRAY_BUFFER, texturePositionBuffer._glBuffer);
        this._context.vertexAttribPointer(aTexturePosition, texturePositionBuffer._itemSize, this._context.FLOAT, false, 0, 0);
        this._context.uniform1i(uVolumeTexture, false)
      }else {
        this._context.uniform1i(uUseTexture, false);
        this._context.vertexAttribPointer(aTexturePosition, vertexBuffer._itemSize, this._context.FLOAT, false, 0, 0)
      }
      if(volume) {
        this._context.uniform1i(uVolumeTexture, true);
        this._context.uniform1f(uVolumeLowerThreshold, volume._lowerThreshold);
        this._context.uniform1f(uVolumeUpperThreshold, volume._upperThreshold);
        this._context.uniform1f(uVolumeScalarMin, volume._min);
        this._context.uniform1f(uVolumeScalarMax, volume._max);
        var minColor = volume._minColor;
        var maxColor = volume._maxColor;
        this._context.uniform3f(uVolumeScalarMinColor, parseFloat(minColor[0]), parseFloat(minColor[1]), parseFloat(minColor[2]));
        this._context.uniform3f(uVolumeScalarMaxColor, parseFloat(maxColor[0]), parseFloat(maxColor[1]), parseFloat(maxColor[2]));
        this._context.uniform1f(uVolumeWindowLow, volume._windowLow);
        this._context.uniform1f(uVolumeWindowHigh, volume._windowHigh);
        var labelmap = volume._labelmap;
        this._context.uniform1i(uUseLabelMapTexture, false);
        if(volume._volumeRendering) {
          this._context.uniform1f(uObjectOpacity, parseFloat(volume._opacity))
        }else {
          if(labelmap && labelmap._visible) {
            var labelmapTextureID = object._labelmap._id;
            this._context.uniform1i(uUseLabelMapTexture, true);
            this._context.activeTexture(this._context.TEXTURE1);
            this._context.bindTexture(this._context.TEXTURE_2D, this._textures.get(labelmapTextureID));
            this._context.uniform1i(uTextureSampler2, 1);
            this._context.uniform1f(uLabelMapOpacity, labelmap._opacity);
            this._context.uniform4fv(uLabelMapColor, labelmap._showOnlyColor)
          }
        }
      }
      this._context.uniformMatrix4fv(uObjectTransform, false, object._transform._matrix);
      var pointSize = 1;
      if(object._type == X.displayable.types.POINTS) {
        pointSize = object._pointsize
      }
      this._context.uniform1f(uPointSize, pointSize);
      var drawMode = -1;
      if(object._type == X.displayable.types.TRIANGLES) {
        drawMode = this._context.TRIANGLES;
        if(statisticsEnabled) {
          trianglesCounter += vertexBuffer._itemCount / 3
        }
      }else {
        if(object._type == X.displayable.types.LINES) {
          this._context.lineWidth(object._linewidth);
          drawMode = this._context.LINES;
          if(statisticsEnabled) {
            linesCounter += vertexBuffer._itemCount / 2
          }
        }else {
          if(object._type == X.displayable.types.POINTS) {
            drawMode = this._context.POINTS;
            if(statisticsEnabled) {
              pointsCounter += vertexBuffer._itemCount
            }
          }else {
            if(object._type == X.displayable.types.TRIANGLE_STRIPS) {
              drawMode = this._context.TRIANGLE_STRIP;
              if(statisticsEnabled) {
                trianglesCounter += vertexBuffer._itemCount / 3
              }
            }else {
              if(object._type == X.displayable.types.POLYGONS) {
                if(vertexBuffer._itemCount % 3 == 0) {
                  drawMode = this._context.TRIANGLES
                }else {
                  drawMode = this._context.TRIANGLE_FAN
                }
                if(statisticsEnabled) {
                  trianglesCounter += vertexBuffer._itemCount / 3
                }
              }
            }
          }
        }
      }
      if(statisticsEnabled) {
        verticesCounter += vertexBuffer._itemCount
      }
      this._context.drawArrays(drawMode, 0, vertexBuffer._itemCount)
    }
  }while(--i);
  if(statisticsEnabled) {
    var statistics = "Objects: " + _numberOfObjects + " | ";
    statistics += "Vertices: " + verticesCounter + " | ";
    statistics += "Triangles: " + Math.round(trianglesCounter) + " | ";
    statistics += "Lines: " + linesCounter + " | ";
    statistics += "Points: " + pointsCounter + " | ";
    statistics += "Textures: " + this._textures.getCount();
    window.console.log(statistics)
  }
};
X.renderer3D.prototype.remove = function(object) {
  goog.base(this, "remove", object);
  if(object._children.length > 0) {
    var children = object._children;
    var numberOfChildren = children.length;
    var c = 0;
    for(c = 0;c < numberOfChildren;c++) {
      this.remove(children[c])
    }
  }
  var id = object._id;
  var oldTexturePositionBuffer = this._texturePositionBuffers.get(id);
  if(goog.isDefAndNotNull(oldTexturePositionBuffer)) {
    if(this._context.isBuffer(oldTexturePositionBuffer._glBuffer)) {
      this._context.deleteBuffer(oldTexturePositionBuffer._glBuffer)
    }
  }
  if(object._texture) {
    var _texture = this._textures.get(object._texture._id);
    if(_texture) {
      this._context.deleteTexture(_texture);
      this._textures.remove(object._texture._id)
    }
  }
  var oldVertexBuffer = this._vertexBuffers.get(id);
  if(goog.isDefAndNotNull(oldVertexBuffer)) {
    if(this._context.isBuffer(oldVertexBuffer._glBuffer)) {
      this._context.deleteBuffer(oldVertexBuffer._glBuffer)
    }
  }
  var oldNormalBuffer = this._normalBuffers.get(id);
  if(goog.isDefAndNotNull(oldNormalBuffer)) {
    if(this._context.isBuffer(oldNormalBuffer._glBuffer)) {
      this._context.deleteBuffer(oldNormalBuffer._glBuffer)
    }
  }
  var oldColorBuffer = this._colorBuffers.get(id);
  if(goog.isDefAndNotNull(oldColorBuffer)) {
    if(this._context.isBuffer(oldColorBuffer._glBuffer)) {
      this._context.deleteBuffer(oldColorBuffer._glBuffer)
    }
  }
  var oldScalarBuffer = this._scalarBuffers.get(id);
  if(goog.isDefAndNotNull(oldScalarBuffer)) {
    if(this._context.isBuffer(oldScalarBuffer._glBuffer)) {
      this._context.deleteBuffer(oldScalarBuffer._glBuffer)
    }
  }
  this._vertexBuffers.remove(id);
  this._normalBuffers.remove(id);
  this._colorBuffers.remove(id);
  this._texturePositionBuffers.remove(id);
  this._scalarBuffers.remove(id);
  this._objects.remove(object);
  return true
};
X.renderer3D.prototype.destroy = function() {
  this._shaders = null;
  delete this._shaders;
  this._context.clear(this._context.COLOR_BUFFER_BIT | this._context.DEPTH_BUFFER_BIT);
  goog.base(this, "destroy")
};
X.renderer3D.prototype.__defineGetter__("bgColor", function() {
  return this._bgColor
});
X.renderer3D.prototype.__defineSetter__("bgColor", function(bgColor) {
  this._bgColor = bgColor
});
X.renderer3D.prototype.ray_intersect_box_ = function(box, ray_start, ray_direction) {
  var _solutionsIn = new Array;
  var _solutionsOut = new Array;
  for(var _i = 0;_i < 6;_i++) {
    var _i2 = Math.floor(_i / 2);
    var _i3 = (_i2 + 1) % 3;
    var _i4 = (_i2 + 2) % 3;
    var _j1 = (2 + 2 * _i2) % 6;
    var _j2 = (4 + 2 * _i2) % 6;
    var _dir = _i2;
    var _sol0 = box[_i];
    var _invN1 = 1 / ray_direction[_i2];
    var _t = (_sol0 - ray_start[_i2]) * _invN1;
    if(_t != Infinity && _t != -Infinity) {
      var _sol1 = ray_start[_i3] + ray_direction[_i3] * _t;
      var _sol2 = ray_start[_i4] + ray_direction[_i4] * _t;
      if(_sol1 >= box[_j1] && _sol1 <= box[_j1 + 1] && _sol2 >= box[_j2] && _sol2 <= box[_j2 + 1]) {
        var _sol = new Array;
        _sol[_i2] = box[_i];
        _sol[_i3] = _sol1;
        _sol[_i4] = _sol2;
        _solutionsIn.push(_sol)
      }else {
        var _sol = new Array;
        _sol[_i2] = box[_i];
        _sol[_i3] = _sol1;
        _sol[_i4] = _sol2;
        _solutionsOut.push(_sol)
      }
    }
  }
  return[_solutionsIn, _solutionsOut]
};
X.renderer3D.prototype.pick3d = function(x, y, delta, epsilon, object) {
  if(!goog.isDefAndNotNull(delta)) {
    delta = 4
  }
  if(!goog.isDefAndNotNull(epsilon)) {
    epsilon = 2
  }
  if(!goog.isDefAndNotNull(object)) {
    var id = this.pick(x, y);
    if(id == -1) {
      return null
    }
    object = this.get(id);
    if(!object) {
      return null
    }
  }
  var ray_near = this._camera.unproject_(x / this._width * 2 - 1, (this._height - y) / this._height * 2 - 1, 0);
  var ray_far = this._camera.unproject_(x / this._width * 2 - 1, (this._height - y) / this._height * 2 - 1, 1);
  ray_near[0] += this._center[0];
  ray_near[1] += this._center[1];
  ray_near[2] += this._center[2];
  ray_far[0] += this._center[0];
  ray_far[1] += this._center[1];
  ray_far[2] += this._center[2];
  var A = [object._points._minA, object._points._minB, object._points._minC];
  var B = [object._points._maxA, object._points._minB, object._points._minC];
  var C = [object._points._maxA, object._points._maxB, object._points._minC];
  var D = [object._points._minA, object._points._maxB, object._points._minC];
  var E = [object._points._minA, object._points._maxB, object._points._maxC];
  var F = [object._points._minA, object._points._minB, object._points._maxC];
  var G = [object._points._maxA, object._points._maxB, object._points._maxC];
  var H = [object._points._maxA, object._points._minB, object._points._maxC];
  var transformed_points = [X.matrix.multiplyByVector(object._transform._matrix, A[0], A[1], A[2]), X.matrix.multiplyByVector(object._transform._matrix, B[0], B[1], B[2]), X.matrix.multiplyByVector(object._transform._matrix, C[0], C[1], C[2]), X.matrix.multiplyByVector(object._transform._matrix, D[0], D[1], D[2]), X.matrix.multiplyByVector(object._transform._matrix, E[0], E[1], E[2]), X.matrix.multiplyByVector(object._transform._matrix, F[0], F[1], F[2]), X.matrix.multiplyByVector(object._transform._matrix, 
  G[0], G[1], G[2]), X.matrix.multiplyByVector(object._transform._matrix, H[0], H[1], H[2])];
  var extremes = [Infinity, -Infinity, Infinity, -Infinity, Infinity, -Infinity];
  for(var t in transformed_points) {
    t = transformed_points[t];
    extremes = [Math.min(extremes[0], t.x), Math.max(extremes[1], t.x), Math.min(extremes[2], t.y), Math.max(extremes[3], t.y), Math.min(extremes[4], t.z), Math.max(extremes[5], t.z)]
  }
  var box = extremes;
  var box_intersections = this.ray_intersect_box_(box, ray_near, ray_far);
  box_intersections = box_intersections[0];
  if(box_intersections.length == 0) {
    return null
  }
  var distances = new Array(2);
  for(var i = 0;i < 2;i++) {
    var p = box_intersections[i];
    distances[i] = Math.sqrt((p[0] - ray_near[0]) * (p[0] - ray_near[0]) + (p[1] - ray_near[1]) * (p[1] - ray_near[1]) + (p[2] - ray_near[2]) * (p[2] - ray_near[2]))
  }
  var sample_start = null;
  var sample_end = null;
  var sample_space = null;
  if(distances[0] < distances[1]) {
    sample_start = box_intersections[0];
    sample_end = box_intersections[1]
  }else {
    sample_start = box_intersections[1];
    sample_end = box_intersections[0]
  }
  sample_space = Math.sqrt((sample_start[0] - sample_end[0]) * (sample_start[0] - sample_end[0]) + (sample_start[1] - sample_end[1]) * (sample_start[1] - sample_end[1]) + (sample_start[2] - sample_end[2]) * (sample_start[2] - sample_end[2]));
  var sample_count = sample_space / delta;
  var s_p = sample_start;
  var sample_direction = [sample_end[0] - sample_start[0], sample_end[1] - sample_start[1], sample_end[2] - sample_start[2]];
  var sample_direction_length = Math.sqrt(sample_direction[0] * sample_direction[0] + sample_direction[1] * sample_direction[1] + sample_direction[2] * sample_direction[2]);
  var sample_unit_v = [sample_direction[0] / sample_direction_length, sample_direction[1] / sample_direction_length, sample_direction[2] / sample_direction_length];
  var points = object._points._triplets;
  var points_count = points.length;
  var min_d = Infinity;
  var min_p = null;
  var sampled = new Array(10);
  for(var i = 0;i < sample_count;i += delta) {
    s_p = [s_p[0] + delta * sample_unit_v[0], s_p[1] + delta * sample_unit_v[1], s_p[2] + delta * sample_unit_v[2]];
    for(var p = 0;p < points_count;p += 3) {
      var c_p_x = points[p];
      var c_p_y = points[p + 1];
      var c_p_z = points[p + 2];
      var c_p = new X.vector(c_p_x, c_p_y, c_p_z);
      c_p = X.matrix.multiplyByVector(object._transform._matrix, c_p_x, c_p_y, c_p_z);
      var d = Math.sqrt((s_p[0] - c_p.x) * (s_p[0] - c_p.x) + (s_p[1] - c_p.y) * (s_p[1] - c_p.y) + (s_p[2] - c_p.z) * (s_p[2] - c_p.z));
      if(d <= epsilon) {
        return[c_p.x, c_p.y, c_p.z]
      }
    }
  }
  return null
};
goog.exportSymbol("X.renderer3D", X.renderer3D);
goog.exportSymbol("X.renderer3D.prototype.init", X.renderer3D.prototype.init);
goog.exportSymbol("X.renderer3D.prototype.add", X.renderer3D.prototype.add);
goog.exportSymbol("X.renderer3D.prototype.onShowtime", X.renderer3D.prototype.onShowtime);
goog.exportSymbol("X.renderer3D.prototype.onRender", X.renderer3D.prototype.onRender);
goog.exportSymbol("X.renderer3D.prototype.get", X.renderer3D.prototype.get);
goog.exportSymbol("X.renderer3D.prototype.render", X.renderer3D.prototype.render);
goog.exportSymbol("X.renderer3D.prototype.destroy", X.renderer3D.prototype.destroy);
goog.exportSymbol("X.renderer3D.prototype.remove", X.renderer3D.prototype.remove);
goog.exportSymbol("X.renderer3D.prototype.resetBoundingBox", X.renderer3D.prototype.resetBoundingBox);
goog.exportSymbol("X.renderer3D.prototype.resetViewAndRender", X.renderer3D.prototype.resetViewAndRender);
goog.exportSymbol("X.renderer3D.prototype.pick", X.renderer3D.prototype.pick);
goog.exportSymbol("X.renderer3D.prototype.pick3d", X.renderer3D.prototype.pick3d);
goog.provide("X.mesh");
goog.require("X.object");
X.mesh = function() {
  goog.base(this);
  this._classname = "mesh";
  inject(this, new X.loadable)
};
goog.inherits(X.mesh, X.object);
goog.exportSymbol("X.mesh", X.mesh);
goog.provide("X.fibers");
goog.require("X.object");
X.fibers = function() {
  goog.base(this);
  this._classname = "fibers";
  inject(this, new X.loadable)
};
goog.inherits(X.fibers, X.object);
goog.exportSymbol("X.fibers", X.fibers);
goog.provide("X.renderer2D");
goog.require("X.renderer");
goog.require("goog.math.Vec3");
goog.require("goog.vec.Vec4");
X.renderer2D = function() {
  goog.base(this);
  this._classname = "renderer2D";
  this._orientation = null;
  this._orientationIndex = -1;
  this._orientationColors = [];
  this._frameBuffer = null;
  this._frameBufferContext = null;
  this._labelFrameBuffer = null;
  this._labelFrameBufferContext = null;
  this._sliceWidth = 0;
  this._sliceHeight = 0;
  this._sliceWidthSpacing = 0;
  this._sliceHeightSpacing = 0;
  this._currentSlice = -1;
  this._lowerThreshold = -1;
  this._upperThreshold = -1;
  this._windowLow = -1;
  this._windowHigh = -1;
  this._labelmapShowOnlyColor = new Float32Array([-255, -255, -255, -255]);
  this._radiological = true
};
goog.inherits(X.renderer2D, X.renderer);
X.renderer2D.prototype.onScroll = function() {
};
X.renderer2D.prototype.onWindowLevel = function() {
};
X.renderer2D.prototype.onScroll_ = function(event) {
  goog.base(this, "onScroll_", event);
  var _volume = this._topLevelObjects[0];
  if(!_volume) {
    return
  }
  var _orientation = "";
  if(this._orientationIndex == 0) {
    _orientation = "indexX"
  }else {
    if(this._orientationIndex == 1) {
      _orientation = "indexY"
    }else {
      _orientation = "indexZ"
    }
  }
  if(event._up) {
    _volume[_orientation] = _volume[_orientation] + 1
  }else {
    _volume[_orientation] = _volume[_orientation] - 1
  }
  eval("this.onScroll();")
};
X.renderer2D.prototype.onWindowLevel_ = function(event) {
  var _volume = this._topLevelObjects[0];
  if(!_volume) {
    return
  }
  var _old_window = _volume._windowHigh - _volume._windowLow;
  var _old_level = _old_window / 2;
  var _new_window = parseInt(_old_window + _old_window / 15 * -event._window, 10);
  var _new_level = parseInt(_old_level + _old_level / 15 * event._level, 10);
  if(_old_window == _new_window) {
    _new_window++
  }
  if(_old_level == _new_level) {
    _new_level++
  }
  _volume._windowLow -= parseInt(_old_level - _new_level, 10);
  _volume._windowLow -= parseInt(_old_window - _new_window, 10);
  _volume._windowLow = Math.max(_volume._windowLow, _volume._min);
  _volume._windowHigh -= parseInt(_old_level - _new_level, 10);
  _volume._windowHigh += parseInt(_old_window - _new_window, 10);
  _volume._windowHigh = Math.min(_volume._windowHigh, _volume._max);
  eval("this.onWindowLevel();")
};
X.renderer2D.prototype.__defineGetter__("orientation", function() {
  return this._orientation
});
X.renderer2D.prototype.__defineSetter__("orientation", function(orientation) {
  orientation = orientation.toUpperCase();
  if(orientation == "AXIAL") {
    orientation = "Z";
    this._orientationIndex = 2
  }else {
    if(orientation == "SAGITTAL") {
      orientation = "X";
      this._orientationIndex = 0
    }else {
      if(orientation == "CORONAL") {
        orientation = "Y";
        this._orientationIndex = 1
      }
    }
  }
  if(orientation != "X" && orientation != "Y" && orientation != "Z") {
    throw new Error("Invalid orientation.");
  }
  this._orientation = orientation;
  var _volume = this._topLevelObjects[0]
});
X.renderer2D.prototype.__defineGetter__("radiological", function() {
  return this._radiological
});
X.renderer2D.prototype.__defineSetter__("radiological", function(radiological) {
  this._radiological = radiological
});
X.renderer2D.prototype.init = function() {
  if(!this._orientation) {
    throw new Error("No 2D orientation set.");
  }
  goog.base(this, "init", "2d");
  this._context.fillStyle = "rgba(50,50,50,0)";
  this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);
  this._frameBuffer = goog.dom.createDom("canvas");
  this._labelFrameBuffer = goog.dom.createDom("canvas");
  goog.events.listen(this._camera, X.event.events.WINDOWLEVEL, this.onWindowLevel_.bind(this))
};
X.renderer2D.prototype.onResize_ = function() {
  goog.base(this, "onResize_");
  this.autoScale_()
};
X.renderer2D.prototype.resetViewAndRender = function() {
  goog.base(this, "resetViewAndRender");
  this.autoScale_();
  var _volume = this._topLevelObjects[0];
  if(_volume) {
    _volume._windowHigh = _volume._max;
    _volume._windowLow = _volume._min
  }
};
X.renderer2D.prototype.volumeChildrenIndex_ = function(targetOrientation) {
  if(targetOrientation == "X") {
    return 0
  }else {
    if(targetOrientation == "Y") {
      return 1
    }else {
      return 2
    }
  }
};
X.renderer2D.prototype.update_ = function(object) {
  goog.base(this, "update_", object);
  var existed = false;
  if(this.get(object._id)) {
    existed = true
  }
  if(!(object instanceof X.volume)) {
    return
  }
  var file = object._file;
  var labelmap = object._labelmap;
  var colortable = object._colortable;
  if(goog.isDefAndNotNull(labelmap) && goog.isDefAndNotNull(labelmap._file) && labelmap._file._dirty) {
    this.update_(labelmap);
    return
  }
  if(goog.isDefAndNotNull(colortable) && goog.isDefAndNotNull(colortable._file) && colortable._file._dirty) {
    this._loader.load(colortable, object);
    return
  }
  if(goog.isDefAndNotNull(file) && goog.isArray(file)) {
    if(!goog.isDefAndNotNull(object.MRI)) {
      var _k = 0;
      var _len = file.length;
      for(_k = 0;_k < _len;_k++) {
        this._loader.load(file[_k], object)
      }
      return
    }else {
      if(object.MRI.loaded_files != file.length) {
        return
      }else {
        if(existed && !object._dirty) {
          return
        }
      }
    }
  }else {
    if(goog.isDefAndNotNull(file) && file._dirty) {
      this._loader.load(object, object);
      return
    }
  }
  var _dim = object._dimensions;
  this._orientationIndex = this.volumeChildrenIndex_(this._orientation);
  this._slices = object._children[this._orientationIndex]._children;
  var _currentSlice = null;
  if(this._orientationIndex == 0) {
    _currentSlice = object["indexX"]
  }else {
    if(this._orientationIndex == 1) {
      _currentSlice = object["indexY"]
    }else {
      _currentSlice = object["indexZ"]
    }
  }
  var _width = object._children[this._orientationIndex]._children[_currentSlice]._iWidth;
  var _height = object._children[this._orientationIndex]._children[_currentSlice]._iHeight;
  this._sliceWidthSpacing = object._children[this._orientationIndex]._children[_currentSlice]._widthSpacing;
  this._sliceHeightSpacing = object._children[this._orientationIndex]._children[_currentSlice]._heightSpacing;
  this._sliceWidth = _width;
  this._sliceHeight = _height;
  var _frameBuffer = this._frameBuffer;
  _frameBuffer.width = _width;
  _frameBuffer.height = _height;
  var _frameBuffer2 = this._labelFrameBuffer;
  _frameBuffer2.width = _width;
  _frameBuffer2.height = _height;
  this._frameBufferContext = _frameBuffer.getContext("2d");
  this._labelFrameBufferContext = _frameBuffer2.getContext("2d");
  if(!existed) {
    this._objects.add(object);
    this.autoScale_()
  }
};
X.renderer2D.prototype.autoScale_ = function() {
  var _wScale = this._width / (this._sliceWidth * this._sliceWidthSpacing);
  var _hScale = this._height / (this._sliceHeight * this._sliceHeightSpacing);
  var _autoScale = Math.min(_wScale, _hScale);
  var _view = this._camera._view;
  _view[14] = _autoScale
};
X.renderer2D.prototype.onSliceNavigation = function() {
};
X.renderer2D.prototype.xy2ijk = function(x, y) {
  var _volume = this._topLevelObjects[0];
  var _view = this._camera._view;
  var _currentSlice = null;
  var _sliceWidth = this._sliceWidth;
  var _sliceHeight = this._sliceHeight;
  var _sliceWSpacing = null;
  var _sliceHSpacing = null;
  if(this._orientation == "Y") {
    _currentSlice = this._slices[parseInt(_volume["indexY"], 10)];
    _sliceWSpacing = _currentSlice._widthSpacing;
    _sliceHSpacing = _currentSlice._heightSpacing;
    this._orientationColors[0] = "red";
    this._orientationColors[1] = "blue"
  }else {
    if(this._orientation == "Z") {
      _currentSlice = this._slices[parseInt(_volume["indexZ"], 10)];
      _sliceWSpacing = _currentSlice._widthSpacing;
      _sliceHSpacing = _currentSlice._heightSpacing;
      this._orientationColors[0] = "red";
      this._orientationColors[1] = "green"
    }else {
      _currentSlice = this._slices[parseInt(_volume["indexX"], 10)];
      _sliceWSpacing = _currentSlice._heightSpacing;
      _sliceHSpacing = _currentSlice._widthSpacing;
      this._orientationColors[0] = "green";
      this._orientationColors[1] = "blue";
      var _buf = _sliceWidth;
      _sliceWidth = _sliceHeight;
      _sliceHeight = _buf
    }
  }
  var _x = 1 * _view[12];
  var _y = -1 * _view[13];
  var _normalizedScale = Math.max(_view[14], 0.6);
  var _center = [this._width / 2, this._height / 2];
  var _sliceWidthScaled = _sliceWidth * _sliceWSpacing * _normalizedScale;
  var _sliceHeightScaled = _sliceHeight * _sliceHSpacing * _normalizedScale;
  var _image_left2xy = _center[0] - _sliceWidthScaled / 2;
  var _image_top2xy = _center[1] - _sliceHeightScaled / 2;
  _image_left2xy += _x * _normalizedScale;
  _image_top2xy += _y * _normalizedScale;
  if(x > _image_left2xy && x < _image_left2xy + _sliceWidthScaled && y > _image_top2xy && y < _image_top2xy + _sliceHeightScaled) {
    var _xNorm = (x - _image_left2xy) / _sliceWidthScaled;
    var _yNorm = (y - _image_top2xy) / _sliceHeightScaled;
    _x = _xNorm * _sliceWidth;
    _y = _yNorm * _sliceHeight;
    var _z = _currentSlice._xyBBox[4];
    if(this._orientation == "X") {
      _x = _sliceWidth - _x;
      var _buf = _x;
      _x = _y;
      _y = _buf
    }else {
      if(this._orientation == "Y") {
        _x = _sliceWidth - _x
      }else {
        if(this._orientation == "Z") {
          _x = _sliceWidth - _x;
          _y = _sliceHeight - _y
        }
      }
    }
    _x = _currentSlice._wmin + _x * _currentSlice._widthSpacing;
    _y = _currentSlice._hmin + _y * _currentSlice._heightSpacing;
    var _xyz = goog.vec.Vec4.createFloat32FromValues(_x, _y, _z, 1);
    var _ijk = goog.vec.Mat4.createFloat32();
    goog.vec.Mat4.multVec4(_currentSlice._XYToIJK, _xyz, _ijk);
    var _ras = goog.vec.Mat4.createFloat32();
    goog.vec.Mat4.multVec4(_currentSlice._XYToRAS, _xyz, _ras);
    var _dx = _volume._childrenInfo[0]._sliceNormal[0] * _ras[0] + _volume._childrenInfo[0]._sliceNormal[1] * _ras[1] + _volume._childrenInfo[0]._sliceNormal[2] * _ras[2] + _volume._childrenInfo[0]._originD;
    var _ix = Math.round(_dx / _volume._childrenInfo[0]._sliceSpacing);
    if(_ix >= _volume._childrenInfo[0]._nb) {
      _ix = _volume._childrenInfo[0]._nb - 1
    }else {
      if(_ix < 0) {
        _ix = 0
      }
    }
    var _dy = _volume._childrenInfo[1]._sliceNormal[0] * _ras[0] + _volume._childrenInfo[1]._sliceNormal[1] * _ras[1] + _volume._childrenInfo[1]._sliceNormal[2] * _ras[2] + _volume._childrenInfo[1]._originD;
    var _iy = Math.round(_dy / _volume._childrenInfo[1]._sliceSpacing);
    if(_iy >= _volume._childrenInfo[1]._nb) {
      _iy = _volume._childrenInfo[1]._nb - 1
    }else {
      if(_iy < 0) {
        _iy = 0
      }
    }
    var _dz = _volume._childrenInfo[2]._sliceNormal[0] * _ras[0] + _volume._childrenInfo[2]._sliceNormal[1] * _ras[1] + _volume._childrenInfo[2]._sliceNormal[2] * _ras[2] + _volume._childrenInfo[2]._originD;
    var _iz = Math.round(_dz / _volume._childrenInfo[2]._sliceSpacing);
    if(_iz >= _volume._childrenInfo[2]._nb) {
      _iz = _volume._childrenInfo[2]._nb - 1
    }else {
      if(_iz < 0) {
        _iz = 0
      }
    }
    return[[_ix, _iy, _iz], [_ijk[0], _ijk[1], _ijk[2]], [_ras[0], _ras[1], _ras[2]]]
  }
  return null
};
X.renderer2D.prototype.render_ = function(picking, invoked) {
  goog.base(this, "render_", picking, invoked);
  var _objects = this._objects.values();
  var _numberOfObjects = _objects.length;
  if(_numberOfObjects == 0) {
    return
  }
  var _volume = this._topLevelObjects[0];
  var _currentSlice = null;
  if(this._orientationIndex == 0) {
    _currentSlice = _volume["indexX"]
  }else {
    if(this._orientationIndex == 1) {
      _currentSlice = _volume["indexY"]
    }else {
      _currentSlice = _volume["indexZ"]
    }
  }
  var _width2 = this._slices[parseInt(_currentSlice, 10)]._iWidth;
  var _height2 = this._slices[parseInt(_currentSlice, 10)]._iHeight;
  this._sliceWidthSpacing = this._slices[parseInt(_currentSlice, 10)]._widthSpacing;
  this._sliceHeightSpacing = this._slices[parseInt(_currentSlice, 10)]._heightSpacing;
  this._sliceWidth = _width2;
  this._sliceHeight = _height2;
  var _width = this._width;
  var _height = this._height;
  var _view = this._camera._view;
  this._context.save();
  this._context.clearRect(-_width, -_height, 2 * _width, 2 * _height);
  this._context.restore();
  var _normalizedScale = Math.max(_view[14], 0.1);
  this._context.setTransform(_normalizedScale, 0, 0, _normalizedScale, 0, 0);
  var _x = 1 * _view[12];
  var _y = -1 * _view[13];
  var _labelmap = _volume._labelmap;
  var _labelmapShowOnlyColor = null;
  if(_labelmap) {
    _labelmapShowOnlyColor = _volume._labelmap._showOnlyColor
  }
  var _slice = this._slices[parseInt(_currentSlice, 10)];
  var _sliceData = _slice._texture._rawData;
  var _currentLabelMap = _slice._labelmap;
  var _labelData = null;
  if(_currentLabelMap) {
    _labelData = _currentLabelMap._rawData
  }
  var _sliceWidth = this._sliceWidth;
  var _sliceHeight = this._sliceHeight;
  var _imageFBContext = this._frameBufferContext;
  var _labelFBContext = this._labelFrameBufferContext;
  var _imageData = _imageFBContext.getImageData(0, 0, _sliceWidth, _sliceHeight);
  var _labelmapData = _labelFBContext.getImageData(0, 0, _sliceWidth, _sliceHeight);
  var _pixels = _imageData.data;
  var _labelPixels = _labelmapData.data;
  var _pixelsLength = _pixels.length;
  var _maxScalarRange = _volume._max;
  var _lowerThreshold = _volume._lowerThreshold;
  var _upperThreshold = _volume._upperThreshold;
  var _windowLow = _volume._windowLow / _maxScalarRange;
  var _windowHigh = _volume._windowHigh / _maxScalarRange;
  var _redraw_required = this._currentSlice != _currentSlice || this._lowerThreshold != _lowerThreshold || this._upperThreshold != _upperThreshold || this._windowLow != _windowLow || this._windowHigh != _windowHigh || _labelmapShowOnlyColor && !X.array.compare(_labelmapShowOnlyColor, this._labelmapShowOnlyColor, 0, 0, 4);
  if(_redraw_required) {
    var _frameBuffer = this._frameBuffer;
    _frameBuffer.width = _width2;
    _frameBuffer.height = _height2;
    var _frameBuffer2 = this._labelFrameBuffer;
    _frameBuffer2.width = _width2;
    _frameBuffer2.height = _height2;
    var _index = 0;
    do {
      var _color = [0, 0, 0, 0];
      var _label = [0, 0, 0, 0];
      var _intensity = _sliceData[_index] / 255 * _maxScalarRange;
      var _origIntensity = _sliceData[_index];
      var _fac = _windowHigh - _windowLow;
      _origIntensity = (_origIntensity / 255 - _windowLow) / _fac;
      _origIntensity = _origIntensity * 255;
      if(_intensity >= _lowerThreshold && _intensity <= _upperThreshold) {
        var maxColor = new goog.math.Vec3(_volume._maxColor[0], _volume._maxColor[1], _volume._maxColor[2]);
        var minColor = new goog.math.Vec3(_volume._minColor[0], _volume._minColor[1], _volume._minColor[2]);
        _color = maxColor.scale(_origIntensity).add(minColor.scale(255 - _origIntensity));
        _color = [Math.floor(_color.x), Math.floor(_color.y), Math.floor(_color.z), 255];
        if(_currentLabelMap) {
          if(_labelmapShowOnlyColor[3] == -255) {
            _label = [_labelData[_index], _labelData[_index + 1], _labelData[_index + 2], _labelData[_index + 3]]
          }else {
            if(X.array.compare(_labelmapShowOnlyColor, _labelData, 0, _index, 4)) {
              _label = [_labelData[_index], _labelData[_index + 1], _labelData[_index + 2], _labelData[_index + 3]]
            }
          }
        }
      }
      if(this._orientation == "X") {
        _pixels[_index] = _color[0];
        _pixels[_index + 1] = _color[1];
        _pixels[_index + 2] = _color[2];
        _pixels[_index + 3] = _color[3];
        _labelPixels[_index] = _label[0];
        _labelPixels[_index + 1] = _label[1];
        _labelPixels[_index + 2] = _label[2];
        _labelPixels[_index + 3] = _label[3]
      }else {
        if(this._orientation == "Y") {
          var row = Math.floor(_index / (_sliceWidth * 4));
          var col = _index - row * _sliceWidth * 4;
          var invCol = 4 * (_sliceWidth - 1) - col;
          var _invertedColsIndex = row * _sliceWidth * 4 + invCol;
          _pixels[_invertedColsIndex] = _color[0];
          _pixels[_invertedColsIndex + 1] = _color[1];
          _pixels[_invertedColsIndex + 2] = _color[2];
          _pixels[_invertedColsIndex + 3] = _color[3];
          _labelPixels[_invertedColsIndex] = _label[0];
          _labelPixels[_invertedColsIndex + 1] = _label[1];
          _labelPixels[_invertedColsIndex + 2] = _label[2];
          _labelPixels[_invertedColsIndex + 3] = _label[3]
        }else {
          var _invertedIndex = _pixelsLength - 1 - _index;
          _pixels[_invertedIndex - 3] = _color[0];
          _pixels[_invertedIndex - 2] = _color[1];
          _pixels[_invertedIndex - 1] = _color[2];
          _pixels[_invertedIndex] = _color[3];
          _labelPixels[_invertedIndex - 3] = _label[0];
          _labelPixels[_invertedIndex - 2] = _label[1];
          _labelPixels[_invertedIndex - 1] = _label[2];
          _labelPixels[_invertedIndex] = _label[3]
        }
      }
      _index += 4
    }while(_index < _pixelsLength);
    _imageFBContext.putImageData(_imageData, 0, 0);
    _labelFBContext.putImageData(_labelmapData, 0, 0);
    this._currentSlice = _currentSlice;
    this._lowerThreshold = _lowerThreshold;
    this._upperThreshold = _upperThreshold;
    this._windowLow = _windowLow;
    this._windowHigh = _windowHigh;
    if(_currentLabelMap) {
      this._labelmapShowOnlyColor = _labelmapShowOnlyColor
    }
  }
  this._context.globalAlpha = 1;
  this._context.translate(_width / 2 / _normalizedScale, _height / 2 / _normalizedScale);
  if(this._orientation == "X") {
    this._context.rotate(Math.PI * 0.5);
    var _buf = _x;
    _x = _y;
    _y = -_buf
  }
  var _offset_x = -_sliceWidth * this._sliceWidthSpacing / 2 + _x;
  var _offset_y = -_sliceHeight * this._sliceHeightSpacing / 2 + _y;
  this._context.drawImage(this._frameBuffer, _offset_x, _offset_y, _sliceWidth * this._sliceWidthSpacing, _sliceHeight * this._sliceHeightSpacing);
  if(_currentLabelMap && _volume._labelmap._visible) {
    var _labelOpacity = _volume._labelmap._opacity;
    this._context.globalAlpha = _labelOpacity;
    this._context.drawImage(this._labelFrameBuffer, _offset_x, _offset_y, _sliceWidth * this._sliceWidthSpacing, _sliceHeight * this._sliceHeightSpacing)
  }
  if(this._config["SLICENAVIGATORS"]) {
    if(this._interactor._mouseInside && this._interactor._shiftDown && !this._interactor._leftButtonDown) {
      var _mousePosition = this._interactor._mousePosition;
      var ijk = this.xy2ijk(_mousePosition[0], _mousePosition[1]);
      if(ijk) {
        _volume._indexX = ijk[0][0];
        _volume._indexY = ijk[0][1];
        _volume._indexZ = ijk[0][2];
        _volume.modified(false);
        this["onSliceNavigation"]();
        this._context.setTransform(1, 0, 0, 1, 0, 0);
        this._context.lineWidth = 1;
        this._context.beginPath();
        this._context.moveTo(this._interactor._mousePosition[0], 0);
        this._context.lineTo(this._interactor._mousePosition[0], this._interactor._mousePosition[1] - 10);
        this._context.moveTo(this._interactor._mousePosition[0], this._interactor._mousePosition[1] + 10);
        this._context.lineTo(this._interactor._mousePosition[0], this._height);
        this._context.strokeStyle = this._orientationColors[0];
        this._context.stroke();
        this._context.closePath();
        this._context.beginPath();
        this._context.moveTo(0, this._interactor._mousePosition[1]);
        this._context.lineTo(this._interactor._mousePosition[0] - 10, this._interactor._mousePosition[1]);
        this._context.moveTo(this._interactor._mousePosition[0] + 10, this._interactor._mousePosition[1] + 0.5);
        this._context.lineTo(this._width, this._interactor._mousePosition[1]);
        this._context.strokeStyle = this._orientationColors[1];
        this._context.stroke();
        this._context.closePath();
        this._context.font = "10pt Arial";
        this._context.textAlign = "left";
        this._context.textBaseline = "top";
        this._context.fillStyle = "white";
        this._context.fillText("RAS: " + ijk[2][0].toFixed(2) + ", " + ijk[2][1].toFixed(2) + ", " + ijk[2][2].toFixed(2), 0, 0);
        var _value = "undefined";
        var _valueLM = "undefined";
        var _valueCT = "undefined";
        if(typeof _volume._IJKVolume[ijk[1][2].toFixed(0)] != "undefined" && typeof _volume._IJKVolume[ijk[1][2].toFixed(0)][ijk[1][1].toFixed(0)] != "undefined") {
          _value = _volume._IJKVolume[ijk[1][2].toFixed(0)][ijk[1][1].toFixed(0)][ijk[1][0].toFixed(0)];
          if(_volume.hasLabelMap) {
            _valueLM = _volume._labelmap._IJKVolume[ijk[1][2].toFixed(0)][ijk[1][1].toFixed(0)][ijk[1][0].toFixed(0)];
            if(_volume._labelmap._colorTable) {
              _valueCT = _volume._labelmap._colorTable.get(_valueLM);
              if(typeof _valueCT != "undefined") {
                _valueCT = _valueCT[0]
              }
            }
          }
        }
        this._context.fillText("Background:  " + _value + " (" + ijk[1][0].toFixed(0) + ", " + ijk[1][1].toFixed(0) + ", " + ijk[1][2].toFixed(0) + ")", 0, 15);
        if(_volume.hasLabelMap) {
          this._context.fillText("Labelmap:  " + _valueCT + " (" + _valueLM + ")", 0, 30)
        }
      }
    }
  }
};
goog.exportSymbol("X.renderer2D", X.renderer2D);
goog.exportSymbol("X.renderer2D.prototype.init", X.renderer2D.prototype.init);
goog.exportSymbol("X.renderer2D.prototype.add", X.renderer2D.prototype.add);
goog.exportSymbol("X.renderer2D.prototype.onShowtime", X.renderer2D.prototype.onShowtime);
goog.exportSymbol("X.renderer2D.prototype.onRender", X.renderer2D.prototype.onRender);
goog.exportSymbol("X.renderer2D.prototype.onScroll", X.renderer2D.prototype.onScroll);
goog.exportSymbol("X.renderer2D.prototype.onWindowLevel", X.renderer2D.prototype.onWindowLevel);
goog.exportSymbol("X.renderer2D.prototype.get", X.renderer2D.prototype.get);
goog.exportSymbol("X.renderer2D.prototype.resetViewAndRender", X.renderer2D.prototype.resetViewAndRender);
goog.exportSymbol("X.renderer2D.prototype.xy2ijk", X.renderer2D.prototype.xy2ijk);
goog.exportSymbol("X.renderer2D.prototype.render", X.renderer2D.prototype.render);
goog.exportSymbol("X.renderer2D.prototype.destroy", X.renderer2D.prototype.destroy);
goog.exportSymbol("X.renderer2D.prototype.onSliceNavigation", X.renderer2D.prototype.onSliceNavigation);
goog.addDependency("../../third_party/closure/goog/caja/string/html/htmlparser.js", ["goog.string.html.HtmlParser", "goog.string.html.HtmlParser.EFlags", "goog.string.html.HtmlParser.Elements", "goog.string.html.HtmlParser.Entities", "goog.string.html.HtmlSaxHandler"], []);
goog.addDependency("../../third_party/closure/goog/caja/string/html/htmlsanitizer.js", ["goog.string.html.HtmlSanitizer", "goog.string.html.HtmlSanitizer.AttributeType", "goog.string.html.HtmlSanitizer.Attributes", "goog.string.html.htmlSanitize"], ["goog.string.StringBuffer", "goog.string.html.HtmlParser", "goog.string.html.HtmlParser.EFlags", "goog.string.html.HtmlParser.Elements", "goog.string.html.HtmlSaxHandler"]);
goog.addDependency("../../third_party/closure/goog/dojo/dom/query.js", ["goog.dom.query"], ["goog.array", "goog.dom", "goog.functions", "goog.string", "goog.userAgent"]);
goog.addDependency("../../third_party/closure/goog/jpeg_encoder/jpeg_encoder_basic.js", ["goog.crypt.JpegEncoder"], ["goog.crypt.base64"]);
goog.addDependency("../../third_party/closure/goog/loremipsum/text/loremipsum.js", ["goog.text.LoremIpsum"], ["goog.array", "goog.math", "goog.string", "goog.structs.Map", "goog.structs.Set"]);
goog.addDependency("../../third_party/closure/goog/mochikit/async/deferred.js", ["goog.async.Deferred", "goog.async.Deferred.AlreadyCalledError", "goog.async.Deferred.CanceledError", "goog.async.Deferred.CancelledError"], ["goog.array", "goog.asserts", "goog.debug.Error", "goog.functions"]);
goog.addDependency("../../third_party/closure/goog/mochikit/async/deferredlist.js", ["goog.async.DeferredList"], ["goog.array", "goog.async.Deferred"]);
goog.addDependency("../../third_party/closure/goog/osapi/osapi.js", ["goog.osapi"], []);
goog.addDependency("a11y/aria/announcer.js", ["goog.a11y.aria.Announcer"], ["goog.Disposable", "goog.a11y.aria", "goog.a11y.aria.LivePriority", "goog.a11y.aria.State", "goog.dom", "goog.object"]);
goog.addDependency("a11y/aria/aria.js", ["goog.a11y.aria"], ["goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom"]);
goog.addDependency("a11y/aria/attributes.js", ["goog.a11y.aria.LivePriority", "goog.a11y.aria.State"], []);
goog.addDependency("a11y/aria/roles.js", ["goog.a11y.aria.Role"], []);
goog.addDependency("array/array.js", ["goog.array", "goog.array.ArrayLike"], ["goog.asserts"]);
goog.addDependency("asserts/asserts.js", ["goog.asserts", "goog.asserts.AssertionError"], ["goog.debug.Error", "goog.string"]);
goog.addDependency("async/animationdelay.js", ["goog.async.AnimationDelay"], ["goog.Disposable", "goog.events", "goog.functions"]);
goog.addDependency("async/conditionaldelay.js", ["goog.async.ConditionalDelay"], ["goog.Disposable", "goog.async.Delay"]);
goog.addDependency("async/delay.js", ["goog.Delay", "goog.async.Delay"], ["goog.Disposable", "goog.Timer"]);
goog.addDependency("async/nexttick.js", ["goog.async.nextTick"], []);
goog.addDependency("async/throttle.js", ["goog.Throttle", "goog.async.Throttle"], ["goog.Disposable", "goog.Timer"]);
goog.addDependency("base.js", ["goog"], []);
goog.addDependency("color/alpha.js", ["goog.color.alpha"], ["goog.color"]);
goog.addDependency("color/color.js", ["goog.color"], ["goog.color.names", "goog.math"]);
goog.addDependency("color/names.js", ["goog.color.names"], []);
goog.addDependency("crypt/aes.js", ["goog.crypt.Aes"], ["goog.asserts", "goog.crypt.BlockCipher"]);
goog.addDependency("crypt/arc4.js", ["goog.crypt.Arc4"], ["goog.asserts"]);
goog.addDependency("crypt/base64.js", ["goog.crypt.base64"], ["goog.crypt", "goog.userAgent"]);
goog.addDependency("crypt/basen.js", ["goog.crypt.baseN"], []);
goog.addDependency("crypt/blobhasher.js", ["goog.crypt.BlobHasher", "goog.crypt.BlobHasher.EventType"], ["goog.asserts", "goog.crypt", "goog.crypt.Hash", "goog.debug.Logger", "goog.events.EventTarget", "goog.fs"]);
goog.addDependency("crypt/blockcipher.js", ["goog.crypt.BlockCipher"], []);
goog.addDependency("crypt/cbc.js", ["goog.crypt.Cbc"], ["goog.array", "goog.crypt"]);
goog.addDependency("crypt/cbc_test.js", ["goog.crypt.CbcTest"], ["goog.crypt", "goog.crypt.Aes", "goog.crypt.Cbc", "goog.testing.jsunit"]);
goog.addDependency("crypt/crypt.js", ["goog.crypt"], ["goog.array"]);
goog.addDependency("crypt/hash.js", ["goog.crypt.Hash"], []);
goog.addDependency("crypt/hash32.js", ["goog.crypt.hash32"], ["goog.crypt"]);
goog.addDependency("crypt/hashtester.js", ["goog.crypt.hashTester"], ["goog.array", "goog.crypt", "goog.testing.PerformanceTable", "goog.testing.PseudoRandom", "goog.testing.asserts"]);
goog.addDependency("crypt/hmac.js", ["goog.crypt.Hmac"], ["goog.asserts", "goog.crypt.Hash"]);
goog.addDependency("crypt/md5.js", ["goog.crypt.Md5"], ["goog.crypt.Hash"]);
goog.addDependency("crypt/pbkdf2.js", ["goog.crypt.pbkdf2"], ["goog.asserts", "goog.crypt", "goog.crypt.Hmac", "goog.crypt.Sha1"]);
goog.addDependency("crypt/sha1.js", ["goog.crypt.Sha1"], ["goog.crypt.Hash"]);
goog.addDependency("crypt/sha2.js", ["goog.crypt.Sha2"], ["goog.array", "goog.asserts", "goog.crypt.Hash"]);
goog.addDependency("crypt/sha224.js", ["goog.crypt.Sha224"], ["goog.crypt.Sha2"]);
goog.addDependency("crypt/sha256.js", ["goog.crypt.Sha256"], ["goog.crypt.Sha2"]);
goog.addDependency("cssom/cssom.js", ["goog.cssom", "goog.cssom.CssRuleType"], ["goog.array", "goog.dom"]);
goog.addDependency("cssom/iframe/style.js", ["goog.cssom.iframe.style"], ["goog.cssom", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classes", "goog.string", "goog.style", "goog.userAgent"]);
goog.addDependency("datasource/datamanager.js", ["goog.ds.DataManager"], ["goog.ds.BasicNodeList", "goog.ds.DataNode", "goog.ds.Expr", "goog.string", "goog.structs", "goog.structs.Map"]);
goog.addDependency("datasource/datasource.js", ["goog.ds.BaseDataNode", "goog.ds.BasicNodeList", "goog.ds.DataNode", "goog.ds.DataNodeList", "goog.ds.EmptyNodeList", "goog.ds.LoadState", "goog.ds.SortedNodeList", "goog.ds.Util", "goog.ds.logger"], ["goog.array", "goog.debug.Logger"]);
goog.addDependency("datasource/expr.js", ["goog.ds.Expr"], ["goog.ds.BasicNodeList", "goog.ds.EmptyNodeList", "goog.string"]);
goog.addDependency("datasource/fastdatanode.js", ["goog.ds.AbstractFastDataNode", "goog.ds.FastDataNode", "goog.ds.FastListNode", "goog.ds.PrimitiveFastDataNode"], ["goog.ds.DataManager", "goog.ds.EmptyNodeList", "goog.string"]);
goog.addDependency("datasource/jsdatasource.js", ["goog.ds.JsDataSource", "goog.ds.JsPropertyDataSource"], ["goog.ds.BaseDataNode", "goog.ds.BasicNodeList", "goog.ds.DataManager", "goog.ds.EmptyNodeList", "goog.ds.LoadState"]);
goog.addDependency("datasource/jsondatasource.js", ["goog.ds.JsonDataSource"], ["goog.Uri", "goog.dom", "goog.ds.DataManager", "goog.ds.JsDataSource", "goog.ds.LoadState", "goog.ds.logger"]);
goog.addDependency("datasource/jsxmlhttpdatasource.js", ["goog.ds.JsXmlHttpDataSource"], ["goog.Uri", "goog.ds.DataManager", "goog.ds.FastDataNode", "goog.ds.LoadState", "goog.ds.logger", "goog.events", "goog.net.EventType", "goog.net.XhrIo"]);
goog.addDependency("datasource/xmldatasource.js", ["goog.ds.XmlDataSource", "goog.ds.XmlHttpDataSource"], ["goog.Uri", "goog.dom.NodeType", "goog.dom.xml", "goog.ds.BasicNodeList", "goog.ds.DataManager", "goog.ds.LoadState", "goog.ds.logger", "goog.net.XhrIo", "goog.string"]);
goog.addDependency("date/date.js", ["goog.date", "goog.date.Date", "goog.date.DateTime", "goog.date.Interval", "goog.date.month", "goog.date.weekDay"], ["goog.asserts", "goog.date.DateLike", "goog.i18n.DateTimeSymbols", "goog.string"]);
goog.addDependency("date/datelike.js", ["goog.date.DateLike"], []);
goog.addDependency("date/daterange.js", ["goog.date.DateRange", "goog.date.DateRange.Iterator", "goog.date.DateRange.StandardDateRangeKeys"], ["goog.date.Date", "goog.date.Interval", "goog.iter.Iterator", "goog.iter.StopIteration"]);
goog.addDependency("date/relative.js", ["goog.date.relative"], ["goog.i18n.DateTimeFormat"]);
goog.addDependency("date/utcdatetime.js", ["goog.date.UtcDateTime"], ["goog.date", "goog.date.Date", "goog.date.DateTime", "goog.date.Interval"]);
goog.addDependency("db/cursor.js", ["goog.db.Cursor"], ["goog.async.Deferred", "goog.db.Error", "goog.debug", "goog.events.EventTarget"]);
goog.addDependency("db/db.js", ["goog.db"], ["goog.async.Deferred", "goog.db.Error", "goog.db.IndexedDb", "goog.db.Transaction"]);
goog.addDependency("db/error.js", ["goog.db.Error", "goog.db.Error.ErrorCode", "goog.db.Error.ErrorName", "goog.db.Error.VersionChangeBlockedError"], ["goog.debug.Error"]);
goog.addDependency("db/index.js", ["goog.db.Index"], ["goog.async.Deferred", "goog.db.Error", "goog.debug"]);
goog.addDependency("db/indexeddb.js", ["goog.db.IndexedDb"], ["goog.async.Deferred", "goog.db.Error", "goog.db.Error.VersionChangeBlockedError", "goog.db.ObjectStore", "goog.db.Transaction", "goog.db.Transaction.TransactionMode", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget"]);
goog.addDependency("db/keyrange.js", ["goog.db.KeyRange"], []);
goog.addDependency("db/objectstore.js", ["goog.db.ObjectStore"], ["goog.async.Deferred", "goog.db.Cursor", "goog.db.Error", "goog.db.Index", "goog.debug", "goog.events"]);
goog.addDependency("db/transaction.js", ["goog.db.Transaction", "goog.db.Transaction.TransactionMode"], ["goog.async.Deferred", "goog.db.Error", "goog.db.ObjectStore", "goog.events.EventHandler", "goog.events.EventTarget"]);
goog.addDependency("debug/console.js", ["goog.debug.Console"], ["goog.debug.LogManager", "goog.debug.Logger.Level", "goog.debug.TextFormatter"]);
goog.addDependency("debug/debug.js", ["goog.debug"], ["goog.array", "goog.string", "goog.structs.Set", "goog.userAgent"]);
goog.addDependency("debug/debugwindow.js", ["goog.debug.DebugWindow"], ["goog.debug.HtmlFormatter", "goog.debug.LogManager", "goog.debug.Logger", "goog.structs.CircularBuffer", "goog.userAgent"]);
goog.addDependency("debug/devcss/devcss.js", ["goog.debug.DevCss", "goog.debug.DevCss.UserAgent"], ["goog.cssom", "goog.dom.classes", "goog.events", "goog.events.EventType", "goog.string", "goog.userAgent"]);
goog.addDependency("debug/devcss/devcssrunner.js", ["goog.debug.devCssRunner"], ["goog.debug.DevCss"]);
goog.addDependency("debug/divconsole.js", ["goog.debug.DivConsole"], ["goog.debug.HtmlFormatter", "goog.debug.LogManager", "goog.style"]);
goog.addDependency("debug/entrypointregistry.js", ["goog.debug.EntryPointMonitor", "goog.debug.entryPointRegistry"], ["goog.asserts"]);
goog.addDependency("debug/error.js", ["goog.debug.Error"], []);
goog.addDependency("debug/errorhandler.js", ["goog.debug.ErrorHandler", "goog.debug.ErrorHandler.ProtectedFunctionError"], ["goog.asserts", "goog.debug", "goog.debug.EntryPointMonitor", "goog.debug.Trace"]);
goog.addDependency("debug/errorhandlerweakdep.js", ["goog.debug.errorHandlerWeakDep"], []);
goog.addDependency("debug/errorreporter.js", ["goog.debug.ErrorReporter", "goog.debug.ErrorReporter.ExceptionEvent"], ["goog.debug", "goog.debug.ErrorHandler", "goog.debug.Logger", "goog.debug.entryPointRegistry", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.net.XhrIo", "goog.object", "goog.string", "goog.uri.utils", "goog.userAgent"]);
goog.addDependency("debug/fancywindow.js", ["goog.debug.FancyWindow"], ["goog.debug.DebugWindow", "goog.debug.LogManager", "goog.debug.Logger", "goog.debug.Logger.Level", "goog.dom.DomHelper", "goog.object", "goog.string", "goog.userAgent"]);
goog.addDependency("debug/formatter.js", ["goog.debug.Formatter", "goog.debug.HtmlFormatter", "goog.debug.TextFormatter"], ["goog.debug.RelativeTimeProvider", "goog.string"]);
goog.addDependency("debug/fpsdisplay.js", ["goog.debug.FpsDisplay"], ["goog.asserts", "goog.async.AnimationDelay", "goog.ui.Component"]);
goog.addDependency("debug/gcdiagnostics.js", ["goog.debug.GcDiagnostics"], ["goog.debug.Logger", "goog.debug.Trace", "goog.userAgent"]);
goog.addDependency("debug/logbuffer.js", ["goog.debug.LogBuffer"], ["goog.asserts", "goog.debug.LogRecord"]);
goog.addDependency("debug/logger.js", ["goog.debug.LogManager", "goog.debug.Logger", "goog.debug.Logger.Level"], ["goog.array", "goog.asserts", "goog.debug", "goog.debug.LogBuffer", "goog.debug.LogRecord"]);
goog.addDependency("debug/logrecord.js", ["goog.debug.LogRecord"], []);
goog.addDependency("debug/logrecordserializer.js", ["goog.debug.logRecordSerializer"], ["goog.debug.LogRecord", "goog.debug.Logger.Level", "goog.json", "goog.object"]);
goog.addDependency("debug/reflect.js", ["goog.debug.reflect"], []);
goog.addDependency("debug/relativetimeprovider.js", ["goog.debug.RelativeTimeProvider"], []);
goog.addDependency("debug/tracer.js", ["goog.debug.Trace"], ["goog.array", "goog.debug.Logger", "goog.iter", "goog.structs.Map", "goog.structs.SimplePool"]);
goog.addDependency("disposable/disposable.js", ["goog.Disposable", "goog.dispose"], ["goog.disposable.IDisposable"]);
goog.addDependency("disposable/idisposable.js", ["goog.disposable.IDisposable"], []);
goog.addDependency("dom/a11y.js", ["goog.dom.a11y", "goog.dom.a11y.Announcer", "goog.dom.a11y.LivePriority", "goog.dom.a11y.Role", "goog.dom.a11y.State"], ["goog.a11y.aria", "goog.a11y.aria.Announcer", "goog.a11y.aria.LivePriority", "goog.a11y.aria.Role", "goog.a11y.aria.State"]);
goog.addDependency("dom/abstractmultirange.js", ["goog.dom.AbstractMultiRange"], ["goog.array", "goog.dom", "goog.dom.AbstractRange"]);
goog.addDependency("dom/abstractrange.js", ["goog.dom.AbstractRange", "goog.dom.RangeIterator", "goog.dom.RangeType"], ["goog.dom", "goog.dom.NodeType", "goog.dom.SavedCaretRange", "goog.dom.TagIterator", "goog.userAgent"]);
goog.addDependency("dom/annotate.js", ["goog.dom.annotate"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.string"]);
goog.addDependency("dom/browserfeature.js", ["goog.dom.BrowserFeature"], ["goog.userAgent"]);
goog.addDependency("dom/browserrange/abstractrange.js", ["goog.dom.browserrange.AbstractRange"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.RangeEndpoint", "goog.dom.TagName", "goog.dom.TextRangeIterator", "goog.iter", "goog.math.Coordinate", "goog.string", "goog.string.StringBuffer", "goog.userAgent"]);
goog.addDependency("dom/browserrange/browserrange.js", ["goog.dom.browserrange", "goog.dom.browserrange.Error"], ["goog.dom", "goog.dom.browserrange.GeckoRange", "goog.dom.browserrange.IeRange", "goog.dom.browserrange.OperaRange", "goog.dom.browserrange.W3cRange", "goog.dom.browserrange.WebKitRange", "goog.userAgent"]);
goog.addDependency("dom/browserrange/geckorange.js", ["goog.dom.browserrange.GeckoRange"], ["goog.dom.browserrange.W3cRange"]);
goog.addDependency("dom/browserrange/ierange.js", ["goog.dom.browserrange.IeRange"], ["goog.array", "goog.debug.Logger", "goog.dom", "goog.dom.NodeType", "goog.dom.RangeEndpoint", "goog.dom.TagName", "goog.dom.browserrange.AbstractRange", "goog.string"]);
goog.addDependency("dom/browserrange/operarange.js", ["goog.dom.browserrange.OperaRange"], ["goog.dom.browserrange.W3cRange"]);
goog.addDependency("dom/browserrange/w3crange.js", ["goog.dom.browserrange.W3cRange"], ["goog.dom", "goog.dom.NodeType", "goog.dom.RangeEndpoint", "goog.dom.browserrange.AbstractRange", "goog.string"]);
goog.addDependency("dom/browserrange/webkitrange.js", ["goog.dom.browserrange.WebKitRange"], ["goog.dom.RangeEndpoint", "goog.dom.browserrange.W3cRange", "goog.userAgent"]);
goog.addDependency("dom/bufferedviewportsizemonitor.js", ["goog.dom.BufferedViewportSizeMonitor"], ["goog.asserts", "goog.async.Delay", "goog.events", "goog.events.EventTarget", "goog.events.EventType"]);
goog.addDependency("dom/bufferedviewportsizemonitor_test.js", ["goog.dom.BufferedViewportSizeMonitorTest"], ["goog.dom.BufferedViewportSizeMonitor", "goog.dom.ViewportSizeMonitor", "goog.events", "goog.events.EventType", "goog.math.Size", "goog.testing.MockClock", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit"]);
goog.addDependency("dom/classes.js", ["goog.dom.classes"], ["goog.array"]);
goog.addDependency("dom/classes_test.js", ["goog.dom.classes_test"], ["goog.dom", "goog.dom.classes", "goog.testing.jsunit"]);
goog.addDependency("dom/classlist.js", ["goog.dom.classlist"], ["goog.array", "goog.asserts"]);
goog.addDependency("dom/classlist_test.js", ["goog.dom.classlist_test"], ["goog.dom", "goog.dom.classlist", "goog.testing.jsunit"]);
goog.addDependency("dom/controlrange.js", ["goog.dom.ControlRange", "goog.dom.ControlRangeIterator"], ["goog.array", "goog.dom", "goog.dom.AbstractMultiRange", "goog.dom.AbstractRange", "goog.dom.RangeIterator", "goog.dom.RangeType", "goog.dom.SavedRange", "goog.dom.TagWalkType", "goog.dom.TextRange", "goog.iter.StopIteration", "goog.userAgent"]);
goog.addDependency("dom/dataset.js", ["goog.dom.dataset"], ["goog.string"]);
goog.addDependency("dom/dom.js", ["goog.dom", "goog.dom.Appendable", "goog.dom.DomHelper", "goog.dom.NodeType"], ["goog.array", "goog.dom.BrowserFeature", "goog.dom.TagName", "goog.dom.classes", "goog.math.Coordinate", "goog.math.Size", "goog.object", "goog.string", "goog.userAgent"]);
goog.addDependency("dom/dom_test.js", ["goog.dom.dom_test"], ["goog.dom", "goog.dom.BrowserFeature", "goog.dom.DomHelper", "goog.dom.NodeType", "goog.dom.TagName", "goog.object", "goog.string.Unicode", "goog.testing.asserts", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"]);
goog.addDependency("dom/fontsizemonitor.js", ["goog.dom.FontSizeMonitor", "goog.dom.FontSizeMonitor.EventType"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.userAgent"]);
goog.addDependency("dom/forms.js", ["goog.dom.forms"], ["goog.structs.Map"]);
goog.addDependency("dom/fullscreen.js", ["goog.dom.fullscreen", "goog.dom.fullscreen.EventType"], ["goog.dom", "goog.userAgent", "goog.userAgent.product"]);
goog.addDependency("dom/iframe.js", ["goog.dom.iframe"], ["goog.dom"]);
goog.addDependency("dom/iter.js", ["goog.dom.iter.AncestorIterator", "goog.dom.iter.ChildIterator", "goog.dom.iter.SiblingIterator"], ["goog.iter.Iterator", "goog.iter.StopIteration"]);
goog.addDependency("dom/multirange.js", ["goog.dom.MultiRange", "goog.dom.MultiRangeIterator"], ["goog.array", "goog.debug.Logger", "goog.dom.AbstractMultiRange", "goog.dom.AbstractRange", "goog.dom.RangeIterator", "goog.dom.RangeType", "goog.dom.SavedRange", "goog.dom.TextRange", "goog.iter.StopIteration"]);
goog.addDependency("dom/nodeiterator.js", ["goog.dom.NodeIterator"], ["goog.dom.TagIterator"]);
goog.addDependency("dom/nodeoffset.js", ["goog.dom.NodeOffset"], ["goog.Disposable", "goog.dom.TagName"]);
goog.addDependency("dom/pattern/abstractpattern.js", ["goog.dom.pattern.AbstractPattern"], ["goog.dom.pattern.MatchType"]);
goog.addDependency("dom/pattern/allchildren.js", ["goog.dom.pattern.AllChildren"], ["goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"]);
goog.addDependency("dom/pattern/callback/callback.js", ["goog.dom.pattern.callback"], ["goog.dom", "goog.dom.TagWalkType", "goog.iter"]);
goog.addDependency("dom/pattern/callback/counter.js", ["goog.dom.pattern.callback.Counter"], []);
goog.addDependency("dom/pattern/callback/test.js", ["goog.dom.pattern.callback.Test"], ["goog.iter.StopIteration"]);
goog.addDependency("dom/pattern/childmatches.js", ["goog.dom.pattern.ChildMatches"], ["goog.dom.pattern.AllChildren", "goog.dom.pattern.MatchType"]);
goog.addDependency("dom/pattern/endtag.js", ["goog.dom.pattern.EndTag"], ["goog.dom.TagWalkType", "goog.dom.pattern.Tag"]);
goog.addDependency("dom/pattern/fulltag.js", ["goog.dom.pattern.FullTag"], ["goog.dom.pattern.MatchType", "goog.dom.pattern.StartTag", "goog.dom.pattern.Tag"]);
goog.addDependency("dom/pattern/matcher.js", ["goog.dom.pattern.Matcher"], ["goog.dom.TagIterator", "goog.dom.pattern.MatchType", "goog.iter"]);
goog.addDependency("dom/pattern/nodetype.js", ["goog.dom.pattern.NodeType"], ["goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"]);
goog.addDependency("dom/pattern/pattern.js", ["goog.dom.pattern", "goog.dom.pattern.MatchType"], []);
goog.addDependency("dom/pattern/repeat.js", ["goog.dom.pattern.Repeat"], ["goog.dom.NodeType", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"]);
goog.addDependency("dom/pattern/sequence.js", ["goog.dom.pattern.Sequence"], ["goog.dom.NodeType", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"]);
goog.addDependency("dom/pattern/starttag.js", ["goog.dom.pattern.StartTag"], ["goog.dom.TagWalkType", "goog.dom.pattern.Tag"]);
goog.addDependency("dom/pattern/tag.js", ["goog.dom.pattern.Tag"], ["goog.dom.pattern", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType", "goog.object"]);
goog.addDependency("dom/pattern/text.js", ["goog.dom.pattern.Text"], ["goog.dom.NodeType", "goog.dom.pattern", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"]);
goog.addDependency("dom/range.js", ["goog.dom.Range"], ["goog.dom", "goog.dom.AbstractRange", "goog.dom.ControlRange", "goog.dom.MultiRange", "goog.dom.NodeType", "goog.dom.TextRange", "goog.userAgent"]);
goog.addDependency("dom/rangeendpoint.js", ["goog.dom.RangeEndpoint"], []);
goog.addDependency("dom/savedcaretrange.js", ["goog.dom.SavedCaretRange"], ["goog.array", "goog.dom", "goog.dom.SavedRange", "goog.dom.TagName", "goog.string"]);
goog.addDependency("dom/savedrange.js", ["goog.dom.SavedRange"], ["goog.Disposable", "goog.debug.Logger"]);
goog.addDependency("dom/selection.js", ["goog.dom.selection"], ["goog.string", "goog.userAgent"]);
goog.addDependency("dom/tagiterator.js", ["goog.dom.TagIterator", "goog.dom.TagWalkType"], ["goog.dom.NodeType", "goog.iter.Iterator", "goog.iter.StopIteration"]);
goog.addDependency("dom/tagname.js", ["goog.dom.TagName"], []);
goog.addDependency("dom/textrange.js", ["goog.dom.TextRange"], ["goog.array", "goog.dom", "goog.dom.AbstractRange", "goog.dom.RangeType", "goog.dom.SavedRange", "goog.dom.TagName", "goog.dom.TextRangeIterator", "goog.dom.browserrange", "goog.string", "goog.userAgent"]);
goog.addDependency("dom/textrangeiterator.js", ["goog.dom.TextRangeIterator"], ["goog.array", "goog.dom.NodeType", "goog.dom.RangeIterator", "goog.dom.TagName", "goog.iter.StopIteration"]);
goog.addDependency("dom/vendor.js", ["goog.dom.vendor"], ["goog.userAgent"]);
goog.addDependency("dom/viewportsizemonitor.js", ["goog.dom.ViewportSizeMonitor"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Size"]);
goog.addDependency("dom/xml.js", ["goog.dom.xml"], ["goog.dom", "goog.dom.NodeType"]);
goog.addDependency("editor/browserfeature.js", ["goog.editor.BrowserFeature"], ["goog.editor.defines", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"]);
goog.addDependency("editor/clicktoeditwrapper.js", ["goog.editor.ClickToEditWrapper"], ["goog.Disposable", "goog.asserts", "goog.debug.Logger", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Field.EventType", "goog.editor.range", "goog.events.BrowserEvent.MouseButton", "goog.events.EventHandler", "goog.events.EventType"]);
goog.addDependency("editor/command.js", ["goog.editor.Command"], []);
goog.addDependency("editor/contenteditablefield.js", ["goog.editor.ContentEditableField"], ["goog.asserts", "goog.debug.Logger", "goog.editor.Field"]);
goog.addDependency("editor/defines.js", ["goog.editor.defines"], []);
goog.addDependency("editor/field.js", ["goog.editor.Field", "goog.editor.Field.EventType"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.array", "goog.asserts", "goog.async.Delay", "goog.debug.Logger", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Plugin", "goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo", "goog.editor.node", "goog.editor.range", "goog.events", "goog.events.EventHandler", 
"goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.functions", "goog.string", "goog.string.Unicode", "goog.style", "goog.userAgent", "goog.userAgent.product"]);
goog.addDependency("editor/field_test.js", ["goog.editor.field_test"], ["goog.dom", "goog.dom.Range", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.range", "goog.events", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.functions", "goog.testing.LooseMock", "goog.testing.MockClock", "goog.testing.dom", "goog.testing.events", "goog.testing.events.Event", "goog.testing.recordFunction", "goog.userAgent"]);
goog.addDependency("editor/focus.js", ["goog.editor.focus"], ["goog.dom.selection"]);
goog.addDependency("editor/icontent.js", ["goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo"], ["goog.editor.BrowserFeature", "goog.style", "goog.userAgent"]);
goog.addDependency("editor/link.js", ["goog.editor.Link"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.node", "goog.editor.range", "goog.string", "goog.string.Unicode", "goog.uri.utils", "goog.uri.utils.ComponentIndex"]);
goog.addDependency("editor/node.js", ["goog.editor.node"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.iter.ChildIterator", "goog.dom.iter.SiblingIterator", "goog.iter", "goog.object", "goog.string", "goog.string.Unicode", "goog.userAgent"]);
goog.addDependency("editor/plugin.js", ["goog.editor.Plugin"], ["goog.debug.Logger", "goog.editor.Command", "goog.events.EventTarget", "goog.functions", "goog.object", "goog.reflect"]);
goog.addDependency("editor/plugins/abstractbubbleplugin.js", ["goog.editor.plugins.AbstractBubblePlugin"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.Plugin", "goog.editor.style", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.actionEventWrapper", "goog.functions", "goog.string.Unicode", "goog.ui.Component.EventType", "goog.ui.editor.Bubble", "goog.userAgent"]);
goog.addDependency("editor/plugins/abstractdialogplugin.js", ["goog.editor.plugins.AbstractDialogPlugin", "goog.editor.plugins.AbstractDialogPlugin.EventType"], ["goog.dom", "goog.dom.Range", "goog.editor.Field.EventType", "goog.editor.Plugin", "goog.editor.range", "goog.events", "goog.ui.editor.AbstractDialog.EventType"]);
goog.addDependency("editor/plugins/abstracttabhandler.js", ["goog.editor.plugins.AbstractTabHandler"], ["goog.editor.Plugin", "goog.events.KeyCodes"]);
goog.addDependency("editor/plugins/basictextformatter.js", ["goog.editor.plugins.BasicTextFormatter", "goog.editor.plugins.BasicTextFormatter.COMMAND"], ["goog.array", "goog.debug.Logger", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Link", "goog.editor.Plugin", "goog.editor.node", "goog.editor.range", "goog.editor.style", "goog.iter", "goog.iter.StopIteration", "goog.object", "goog.string", "goog.string.Unicode", 
"goog.style", "goog.ui.editor.messages", "goog.userAgent"]);
goog.addDependency("editor/plugins/blockquote.js", ["goog.editor.plugins.Blockquote"], ["goog.debug.Logger", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classes", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Plugin", "goog.editor.node", "goog.functions"]);
goog.addDependency("editor/plugins/emoticons.js", ["goog.editor.plugins.Emoticons"], ["goog.dom.TagName", "goog.editor.Plugin", "goog.functions", "goog.ui.emoji.Emoji"]);
goog.addDependency("editor/plugins/enterhandler.js", ["goog.editor.plugins.EnterHandler"], ["goog.dom", "goog.dom.NodeOffset", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Plugin", "goog.editor.node", "goog.editor.plugins.Blockquote", "goog.editor.range", "goog.editor.style", "goog.events.KeyCodes", "goog.functions", "goog.object", "goog.string", "goog.userAgent"]);
goog.addDependency("editor/plugins/equationeditorbubble.js", ["goog.editor.plugins.equation.EquationBubble"], ["goog.dom", "goog.dom.TagName", "goog.editor.Command", "goog.editor.plugins.AbstractBubblePlugin", "goog.string.Unicode", "goog.ui.editor.Bubble", "goog.ui.equation.ImageRenderer"]);
goog.addDependency("editor/plugins/equationeditorplugin.js", ["goog.editor.plugins.EquationEditorPlugin"], ["goog.editor.Command", "goog.editor.plugins.AbstractDialogPlugin", "goog.editor.range", "goog.functions", "goog.ui.editor.AbstractDialog.Builder", "goog.ui.editor.EquationEditorDialog", "goog.ui.editor.EquationEditorOkEvent", "goog.ui.equation.EquationEditor", "goog.ui.equation.ImageRenderer", "goog.ui.equation.PaletteManager", "goog.ui.equation.TexEditor"]);
goog.addDependency("editor/plugins/firststrong.js", ["goog.editor.plugins.FirstStrong"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagIterator", "goog.dom.TagName", "goog.editor.Command", "goog.editor.Plugin", "goog.editor.node", "goog.editor.range", "goog.i18n.bidi", "goog.i18n.uChar", "goog.iter", "goog.userAgent"]);
goog.addDependency("editor/plugins/headerformatter.js", ["goog.editor.plugins.HeaderFormatter"], ["goog.editor.Command", "goog.editor.Plugin", "goog.userAgent"]);
goog.addDependency("editor/plugins/linkbubble.js", ["goog.editor.plugins.LinkBubble", "goog.editor.plugins.LinkBubble.Action"], ["goog.array", "goog.dom", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Link", "goog.editor.plugins.AbstractBubblePlugin", "goog.editor.range", "goog.string", "goog.style", "goog.ui.editor.messages", "goog.uri.utils", "goog.window"]);
goog.addDependency("editor/plugins/linkdialogplugin.js", ["goog.editor.plugins.LinkDialogPlugin"], ["goog.array", "goog.dom", "goog.editor.Command", "goog.editor.plugins.AbstractDialogPlugin", "goog.events.EventHandler", "goog.functions", "goog.ui.editor.AbstractDialog.EventType", "goog.ui.editor.LinkDialog", "goog.ui.editor.LinkDialog.EventType", "goog.ui.editor.LinkDialog.OkEvent", "goog.uri.utils"]);
goog.addDependency("editor/plugins/linkshortcutplugin.js", ["goog.editor.plugins.LinkShortcutPlugin"], ["goog.editor.Command", "goog.editor.Link", "goog.editor.Plugin", "goog.string"]);
goog.addDependency("editor/plugins/listtabhandler.js", ["goog.editor.plugins.ListTabHandler"], ["goog.dom.TagName", "goog.editor.Command", "goog.editor.plugins.AbstractTabHandler"]);
goog.addDependency("editor/plugins/loremipsum.js", ["goog.editor.plugins.LoremIpsum"], ["goog.asserts", "goog.dom", "goog.editor.Command", "goog.editor.Plugin", "goog.editor.node", "goog.functions"]);
goog.addDependency("editor/plugins/removeformatting.js", ["goog.editor.plugins.RemoveFormatting"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Plugin", "goog.editor.node", "goog.editor.range", "goog.string", "goog.userAgent"]);
goog.addDependency("editor/plugins/spacestabhandler.js", ["goog.editor.plugins.SpacesTabHandler"], ["goog.dom", "goog.dom.TagName", "goog.editor.plugins.AbstractTabHandler", "goog.editor.range"]);
goog.addDependency("editor/plugins/tableeditor.js", ["goog.editor.plugins.TableEditor"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.editor.Plugin", "goog.editor.Table", "goog.editor.node", "goog.editor.range", "goog.object"]);
goog.addDependency("editor/plugins/tagonenterhandler.js", ["goog.editor.plugins.TagOnEnterHandler"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.Command", "goog.editor.node", "goog.editor.plugins.EnterHandler", "goog.editor.range", "goog.editor.style", "goog.events.KeyCodes", "goog.string", "goog.style", "goog.userAgent"]);
goog.addDependency("editor/plugins/undoredo.js", ["goog.editor.plugins.UndoRedo"], ["goog.debug.Logger", "goog.dom", "goog.dom.NodeOffset", "goog.dom.Range", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Field.EventType", "goog.editor.Plugin", "goog.editor.node", "goog.editor.plugins.UndoRedoManager", "goog.editor.plugins.UndoRedoState", "goog.events", "goog.events.EventHandler"]);
goog.addDependency("editor/plugins/undoredomanager.js", ["goog.editor.plugins.UndoRedoManager", "goog.editor.plugins.UndoRedoManager.EventType"], ["goog.editor.plugins.UndoRedoState", "goog.events.EventTarget"]);
goog.addDependency("editor/plugins/undoredostate.js", ["goog.editor.plugins.UndoRedoState"], ["goog.events.EventTarget"]);
goog.addDependency("editor/range.js", ["goog.editor.range", "goog.editor.range.Point"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.RangeEndpoint", "goog.dom.SavedCaretRange", "goog.editor.BrowserFeature", "goog.editor.node", "goog.editor.style", "goog.iter"]);
goog.addDependency("editor/seamlessfield.js", ["goog.editor.SeamlessField"], ["goog.cssom.iframe.style", "goog.debug.Logger", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo", "goog.editor.node", "goog.events", "goog.events.EventType", "goog.style"]);
goog.addDependency("editor/seamlessfield_test.js", ["goog.editor.seamlessfield_test"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.Range", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.SeamlessField", "goog.events", "goog.functions", "goog.style", "goog.testing.MockClock", "goog.testing.MockRange", "goog.testing.jsunit"]);
goog.addDependency("editor/style.js", ["goog.editor.style"], ["goog.dom", "goog.dom.NodeType", "goog.editor.BrowserFeature", "goog.events.EventType", "goog.object", "goog.style", "goog.userAgent"]);
goog.addDependency("editor/table.js", ["goog.editor.Table", "goog.editor.TableCell", "goog.editor.TableRow"], ["goog.debug.Logger", "goog.dom", "goog.dom.DomHelper", "goog.dom.NodeType", "goog.dom.TagName", "goog.string.Unicode", "goog.style"]);
goog.addDependency("events/actioneventwrapper.js", ["goog.events.actionEventWrapper"], ["goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.events.EventWrapper", "goog.events.KeyCodes"]);
goog.addDependency("events/actionhandler.js", ["goog.events.ActionEvent", "goog.events.ActionHandler", "goog.events.ActionHandler.EventType", "goog.events.BeforeActionEvent"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.userAgent"]);
goog.addDependency("events/browserevent.js", ["goog.events.BrowserEvent", "goog.events.BrowserEvent.MouseButton"], ["goog.events.BrowserFeature", "goog.events.Event", "goog.events.EventType", "goog.reflect", "goog.userAgent"]);
goog.addDependency("events/browserfeature.js", ["goog.events.BrowserFeature"], ["goog.userAgent"]);
goog.addDependency("events/event.js", ["goog.events.Event", "goog.events.EventLike"], ["goog.Disposable"]);
goog.addDependency("events/eventhandler.js", ["goog.events.EventHandler"], ["goog.Disposable", "goog.array", "goog.events", "goog.events.EventWrapper"]);
goog.addDependency("events/events.js", ["goog.events", "goog.events.Key", "goog.events.ListenableType"], ["goog.array", "goog.debug.entryPointRegistry", "goog.events.BrowserEvent", "goog.events.BrowserFeature", "goog.events.Event", "goog.events.Listenable", "goog.events.Listener", "goog.object"]);
goog.addDependency("events/eventtarget.js", ["goog.events.EventTarget"], ["goog.Disposable", "goog.array", "goog.asserts", "goog.events", "goog.events.Event", "goog.events.Listenable", "goog.events.Listener", "goog.object"]);
goog.addDependency("events/eventtargettester.js", ["goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType"], ["goog.events.Event", "goog.events.EventTarget", "goog.testing.asserts", "goog.testing.recordFunction"]);
goog.addDependency("events/eventtype.js", ["goog.events.EventType"], ["goog.userAgent"]);
goog.addDependency("events/eventwrapper.js", ["goog.events.EventWrapper"], []);
goog.addDependency("events/filedrophandler.js", ["goog.events.FileDropHandler", "goog.events.FileDropHandler.EventType"], ["goog.array", "goog.debug.Logger", "goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType"]);
goog.addDependency("events/focushandler.js", ["goog.events.FocusHandler", "goog.events.FocusHandler.EventType"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.userAgent"]);
goog.addDependency("events/imehandler.js", ["goog.events.ImeHandler", "goog.events.ImeHandler.Event", "goog.events.ImeHandler.EventType"], ["goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.userAgent"]);
goog.addDependency("events/inputhandler.js", ["goog.events.InputHandler", "goog.events.InputHandler.EventType"], ["goog.Timer", "goog.dom", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.KeyCodes", "goog.userAgent"]);
goog.addDependency("events/keycodes.js", ["goog.events.KeyCodes"], ["goog.userAgent"]);
goog.addDependency("events/keyhandler.js", ["goog.events.KeyEvent", "goog.events.KeyHandler", "goog.events.KeyHandler.EventType"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.userAgent"]);
goog.addDependency("events/keynames.js", ["goog.events.KeyNames"], []);
goog.addDependency("events/listenable.js", ["goog.events.Listenable", "goog.events.ListenableKey"], []);
goog.addDependency("events/listener.js", ["goog.events.Listener"], ["goog.events.ListenableKey"]);
goog.addDependency("events/mousewheelhandler.js", ["goog.events.MouseWheelEvent", "goog.events.MouseWheelHandler", "goog.events.MouseWheelHandler.EventType"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.math", "goog.style", "goog.userAgent"]);
goog.addDependency("events/onlinehandler.js", ["goog.events.OnlineHandler", "goog.events.OnlineHandler.EventType"], ["goog.Timer", "goog.events.BrowserFeature", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.net.NetworkStatusMonitor", "goog.userAgent"]);
goog.addDependency("events/pastehandler.js", ["goog.events.PasteHandler", "goog.events.PasteHandler.EventType", "goog.events.PasteHandler.State"], ["goog.Timer", "goog.async.ConditionalDelay", "goog.debug.Logger", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.userAgent"]);
goog.addDependency("format/emailaddress.js", ["goog.format.EmailAddress"], ["goog.string"]);
goog.addDependency("format/format.js", ["goog.format"], ["goog.i18n.GraphemeBreak", "goog.string", "goog.userAgent"]);
goog.addDependency("format/htmlprettyprinter.js", ["goog.format.HtmlPrettyPrinter", "goog.format.HtmlPrettyPrinter.Buffer"], ["goog.object", "goog.string.StringBuffer"]);
goog.addDependency("format/jsonprettyprinter.js", ["goog.format.JsonPrettyPrinter", "goog.format.JsonPrettyPrinter.HtmlDelimiters", "goog.format.JsonPrettyPrinter.TextDelimiters"], ["goog.json", "goog.json.Serializer", "goog.string", "goog.string.StringBuffer", "goog.string.format"]);
goog.addDependency("fs/entry.js", ["goog.fs.DirectoryEntry", "goog.fs.DirectoryEntry.Behavior", "goog.fs.Entry", "goog.fs.FileEntry"], ["goog.array", "goog.async.Deferred", "goog.fs.Error", "goog.fs.FileWriter", "goog.functions", "goog.string"]);
goog.addDependency("fs/error.js", ["goog.fs.Error", "goog.fs.Error.ErrorCode"], ["goog.debug.Error", "goog.string"]);
goog.addDependency("fs/filereader.js", ["goog.fs.FileReader", "goog.fs.FileReader.EventType", "goog.fs.FileReader.ReadyState"], ["goog.async.Deferred", "goog.events.Event", "goog.events.EventTarget", "goog.fs.Error", "goog.fs.ProgressEvent"]);
goog.addDependency("fs/filesaver.js", ["goog.fs.FileSaver", "goog.fs.FileSaver.EventType", "goog.fs.FileSaver.ProgressEvent", "goog.fs.FileSaver.ReadyState"], ["goog.events.Event", "goog.events.EventTarget", "goog.fs.Error", "goog.fs.ProgressEvent"]);
goog.addDependency("fs/filesystem.js", ["goog.fs.FileSystem"], ["goog.fs.DirectoryEntry"]);
goog.addDependency("fs/filewriter.js", ["goog.fs.FileWriter"], ["goog.fs.Error", "goog.fs.FileSaver"]);
goog.addDependency("fs/fs.js", ["goog.fs"], ["goog.array", "goog.async.Deferred", "goog.fs.Error", "goog.fs.FileReader", "goog.fs.FileSystem", "goog.userAgent"]);
goog.addDependency("fs/progressevent.js", ["goog.fs.ProgressEvent"], ["goog.events.Event"]);
goog.addDependency("functions/functions.js", ["goog.functions"], []);
goog.addDependency("fx/abstractdragdrop.js", ["goog.fx.AbstractDragDrop", "goog.fx.AbstractDragDrop.EventType", "goog.fx.DragDropEvent", "goog.fx.DragDropItem"], ["goog.dom", "goog.dom.classes", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.fx.Dragger", "goog.fx.Dragger.EventType", "goog.math.Box", "goog.math.Coordinate", "goog.style"]);
goog.addDependency("fx/anim/anim.js", ["goog.fx.anim", "goog.fx.anim.Animated"], ["goog.async.AnimationDelay", "goog.async.Delay", "goog.object"]);
goog.addDependency("fx/animation.js", ["goog.fx.Animation", "goog.fx.Animation.EventType", "goog.fx.Animation.State", "goog.fx.AnimationEvent"], ["goog.array", "goog.events.Event", "goog.fx.Transition", "goog.fx.Transition.EventType", "goog.fx.TransitionBase.State", "goog.fx.anim", "goog.fx.anim.Animated"]);
goog.addDependency("fx/animationqueue.js", ["goog.fx.AnimationParallelQueue", "goog.fx.AnimationQueue", "goog.fx.AnimationSerialQueue"], ["goog.array", "goog.asserts", "goog.events.EventHandler", "goog.fx.Transition.EventType", "goog.fx.TransitionBase", "goog.fx.TransitionBase.State"]);
goog.addDependency("fx/css3/fx.js", ["goog.fx.css3"], ["goog.fx.css3.Transition"]);
goog.addDependency("fx/css3/transition.js", ["goog.fx.css3.Transition"], ["goog.Timer", "goog.fx.TransitionBase", "goog.style", "goog.style.transition"]);
goog.addDependency("fx/cssspriteanimation.js", ["goog.fx.CssSpriteAnimation"], ["goog.fx.Animation"]);
goog.addDependency("fx/dom.js", ["goog.fx.dom", "goog.fx.dom.BgColorTransform", "goog.fx.dom.ColorTransform", "goog.fx.dom.Fade", "goog.fx.dom.FadeIn", "goog.fx.dom.FadeInAndShow", "goog.fx.dom.FadeOut", "goog.fx.dom.FadeOutAndHide", "goog.fx.dom.PredefinedEffect", "goog.fx.dom.Resize", "goog.fx.dom.ResizeHeight", "goog.fx.dom.ResizeWidth", "goog.fx.dom.Scroll", "goog.fx.dom.Slide", "goog.fx.dom.SlideFrom", "goog.fx.dom.Swipe"], ["goog.color", "goog.events", "goog.fx.Animation", "goog.fx.Transition.EventType", 
"goog.style", "goog.style.bidi"]);
goog.addDependency("fx/dragdrop.js", ["goog.fx.DragDrop"], ["goog.fx.AbstractDragDrop", "goog.fx.DragDropItem"]);
goog.addDependency("fx/dragdropgroup.js", ["goog.fx.DragDropGroup"], ["goog.dom", "goog.fx.AbstractDragDrop", "goog.fx.DragDropItem"]);
goog.addDependency("fx/dragger.js", ["goog.fx.DragEvent", "goog.fx.Dragger", "goog.fx.Dragger.EventType"], ["goog.dom", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Coordinate", "goog.math.Rect", "goog.style", "goog.style.bidi", "goog.userAgent"]);
goog.addDependency("fx/draglistgroup.js", ["goog.fx.DragListDirection", "goog.fx.DragListGroup", "goog.fx.DragListGroup.EventType", "goog.fx.DragListGroupEvent"], ["goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.classes", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.fx.Dragger", "goog.fx.Dragger.EventType", "goog.math.Coordinate", "goog.style"]);
goog.addDependency("fx/dragscrollsupport.js", ["goog.fx.DragScrollSupport"], ["goog.Disposable", "goog.Timer", "goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.math.Coordinate", "goog.style"]);
goog.addDependency("fx/easing.js", ["goog.fx.easing"], []);
goog.addDependency("fx/fx.js", ["goog.fx"], ["goog.asserts", "goog.fx.Animation", "goog.fx.Animation.EventType", "goog.fx.Animation.State", "goog.fx.AnimationEvent", "goog.fx.Transition.EventType", "goog.fx.easing"]);
goog.addDependency("fx/transition.js", ["goog.fx.Transition", "goog.fx.Transition.EventType"], []);
goog.addDependency("fx/transitionbase.js", ["goog.fx.TransitionBase", "goog.fx.TransitionBase.State"], ["goog.events.EventTarget", "goog.fx.Transition", "goog.fx.Transition.EventType"]);
goog.addDependency("gears/basestore.js", ["goog.gears.BaseStore", "goog.gears.BaseStore.SchemaType"], ["goog.Disposable"]);
goog.addDependency("gears/database.js", ["goog.gears.Database", "goog.gears.Database.EventType", "goog.gears.Database.TransactionEvent"], ["goog.array", "goog.debug", "goog.debug.Logger", "goog.events.Event", "goog.events.EventTarget", "goog.gears", "goog.json"]);
goog.addDependency("gears/gears.js", ["goog.gears"], ["goog.string"]);
goog.addDependency("gears/httprequest.js", ["goog.gears.HttpRequest"], ["goog.Timer", "goog.gears", "goog.net.WrapperXmlHttpFactory", "goog.net.XmlHttp"]);
goog.addDependency("gears/loggerclient.js", ["goog.gears.LoggerClient"], ["goog.Disposable", "goog.debug", "goog.debug.Logger"]);
goog.addDependency("gears/loggerserver.js", ["goog.gears.LoggerServer"], ["goog.Disposable", "goog.debug.Logger", "goog.debug.Logger.Level", "goog.gears.Worker.EventType"]);
goog.addDependency("gears/logstore.js", ["goog.gears.LogStore", "goog.gears.LogStore.Query"], ["goog.async.Delay", "goog.debug.LogManager", "goog.debug.LogRecord", "goog.debug.Logger", "goog.debug.Logger.Level", "goog.gears.BaseStore", "goog.gears.BaseStore.SchemaType", "goog.json"]);
goog.addDependency("gears/managedresourcestore.js", ["goog.gears.ManagedResourceStore", "goog.gears.ManagedResourceStore.EventType", "goog.gears.ManagedResourceStore.UpdateStatus", "goog.gears.ManagedResourceStoreEvent"], ["goog.debug.Logger", "goog.events.Event", "goog.events.EventTarget", "goog.gears", "goog.string"]);
goog.addDependency("gears/multipartformdata.js", ["goog.gears.MultipartFormData"], ["goog.asserts", "goog.gears", "goog.string"]);
goog.addDependency("gears/statustype.js", ["goog.gears.StatusType"], []);
goog.addDependency("gears/urlcapture.js", ["goog.gears.UrlCapture", "goog.gears.UrlCapture.Event", "goog.gears.UrlCapture.EventType"], ["goog.Uri", "goog.debug.Logger", "goog.events.Event", "goog.events.EventTarget", "goog.gears"]);
goog.addDependency("gears/worker.js", ["goog.gears.Worker", "goog.gears.Worker.EventType", "goog.gears.WorkerEvent"], ["goog.events.Event", "goog.events.EventTarget"]);
goog.addDependency("gears/workerchannel.js", ["goog.gears.WorkerChannel"], ["goog.Disposable", "goog.debug", "goog.debug.Logger", "goog.events", "goog.gears.Worker", "goog.gears.Worker.EventType", "goog.gears.WorkerEvent", "goog.json", "goog.messaging.AbstractChannel"]);
goog.addDependency("gears/workerpool.js", ["goog.gears.WorkerPool", "goog.gears.WorkerPool.Event", "goog.gears.WorkerPool.EventType"], ["goog.events.Event", "goog.events.EventTarget", "goog.gears", "goog.gears.Worker"]);
goog.addDependency("graphics/abstractgraphics.js", ["goog.graphics.AbstractGraphics"], ["goog.graphics.Path", "goog.math.Coordinate", "goog.math.Size", "goog.style", "goog.ui.Component"]);
goog.addDependency("graphics/affinetransform.js", ["goog.graphics.AffineTransform"], ["goog.math"]);
goog.addDependency("graphics/canvaselement.js", ["goog.graphics.CanvasEllipseElement", "goog.graphics.CanvasGroupElement", "goog.graphics.CanvasImageElement", "goog.graphics.CanvasPathElement", "goog.graphics.CanvasRectElement", "goog.graphics.CanvasTextElement"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.graphics.EllipseElement", "goog.graphics.GroupElement", "goog.graphics.ImageElement", "goog.graphics.Path", "goog.graphics.PathElement", "goog.graphics.RectElement", "goog.graphics.TextElement", 
"goog.math", "goog.string"]);
goog.addDependency("graphics/canvasgraphics.js", ["goog.graphics.CanvasGraphics"], ["goog.dom", "goog.events.EventType", "goog.graphics.AbstractGraphics", "goog.graphics.CanvasEllipseElement", "goog.graphics.CanvasGroupElement", "goog.graphics.CanvasImageElement", "goog.graphics.CanvasPathElement", "goog.graphics.CanvasRectElement", "goog.graphics.CanvasTextElement", "goog.graphics.Font", "goog.graphics.LinearGradient", "goog.graphics.SolidFill", "goog.graphics.Stroke", "goog.math.Size"]);
goog.addDependency("graphics/element.js", ["goog.graphics.Element"], ["goog.events", "goog.events.EventTarget", "goog.graphics.AffineTransform", "goog.math"]);
goog.addDependency("graphics/ellipseelement.js", ["goog.graphics.EllipseElement"], ["goog.graphics.StrokeAndFillElement"]);
goog.addDependency("graphics/ext/coordinates.js", ["goog.graphics.ext.coordinates"], ["goog.string"]);
goog.addDependency("graphics/ext/element.js", ["goog.graphics.ext.Element"], ["goog.events", "goog.events.EventTarget", "goog.functions", "goog.graphics", "goog.graphics.ext.coordinates"]);
goog.addDependency("graphics/ext/ellipse.js", ["goog.graphics.ext.Ellipse"], ["goog.graphics.ext.StrokeAndFillElement"]);
goog.addDependency("graphics/ext/ext.js", ["goog.graphics.ext"], ["goog.graphics.ext.Ellipse", "goog.graphics.ext.Graphics", "goog.graphics.ext.Group", "goog.graphics.ext.Image", "goog.graphics.ext.Rectangle", "goog.graphics.ext.Shape", "goog.graphics.ext.coordinates"]);
goog.addDependency("graphics/ext/graphics.js", ["goog.graphics.ext.Graphics"], ["goog.events.EventType", "goog.graphics.ext.Group"]);
goog.addDependency("graphics/ext/group.js", ["goog.graphics.ext.Group"], ["goog.graphics.ext.Element"]);
goog.addDependency("graphics/ext/image.js", ["goog.graphics.ext.Image"], ["goog.graphics.ext.Element"]);
goog.addDependency("graphics/ext/path.js", ["goog.graphics.ext.Path"], ["goog.graphics.AffineTransform", "goog.graphics.Path", "goog.math", "goog.math.Rect"]);
goog.addDependency("graphics/ext/rectangle.js", ["goog.graphics.ext.Rectangle"], ["goog.graphics.ext.StrokeAndFillElement"]);
goog.addDependency("graphics/ext/shape.js", ["goog.graphics.ext.Shape"], ["goog.graphics.ext.Path", "goog.graphics.ext.StrokeAndFillElement", "goog.math.Rect"]);
goog.addDependency("graphics/ext/strokeandfillelement.js", ["goog.graphics.ext.StrokeAndFillElement"], ["goog.graphics.ext.Element"]);
goog.addDependency("graphics/fill.js", ["goog.graphics.Fill"], []);
goog.addDependency("graphics/font.js", ["goog.graphics.Font"], []);
goog.addDependency("graphics/graphics.js", ["goog.graphics"], ["goog.graphics.CanvasGraphics", "goog.graphics.SvgGraphics", "goog.graphics.VmlGraphics", "goog.userAgent"]);
goog.addDependency("graphics/groupelement.js", ["goog.graphics.GroupElement"], ["goog.graphics.Element"]);
goog.addDependency("graphics/imageelement.js", ["goog.graphics.ImageElement"], ["goog.graphics.Element"]);
goog.addDependency("graphics/lineargradient.js", ["goog.graphics.LinearGradient"], ["goog.asserts", "goog.graphics.Fill"]);
goog.addDependency("graphics/path.js", ["goog.graphics.Path", "goog.graphics.Path.Segment"], ["goog.array", "goog.math"]);
goog.addDependency("graphics/pathelement.js", ["goog.graphics.PathElement"], ["goog.graphics.StrokeAndFillElement"]);
goog.addDependency("graphics/paths.js", ["goog.graphics.paths"], ["goog.graphics.Path", "goog.math.Coordinate"]);
goog.addDependency("graphics/rectelement.js", ["goog.graphics.RectElement"], ["goog.graphics.StrokeAndFillElement"]);
goog.addDependency("graphics/solidfill.js", ["goog.graphics.SolidFill"], ["goog.graphics.Fill"]);
goog.addDependency("graphics/stroke.js", ["goog.graphics.Stroke"], []);
goog.addDependency("graphics/strokeandfillelement.js", ["goog.graphics.StrokeAndFillElement"], ["goog.graphics.Element"]);
goog.addDependency("graphics/svgelement.js", ["goog.graphics.SvgEllipseElement", "goog.graphics.SvgGroupElement", "goog.graphics.SvgImageElement", "goog.graphics.SvgPathElement", "goog.graphics.SvgRectElement", "goog.graphics.SvgTextElement"], ["goog.dom", "goog.graphics.EllipseElement", "goog.graphics.GroupElement", "goog.graphics.ImageElement", "goog.graphics.PathElement", "goog.graphics.RectElement", "goog.graphics.TextElement"]);
goog.addDependency("graphics/svggraphics.js", ["goog.graphics.SvgGraphics"], ["goog.Timer", "goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.graphics.AbstractGraphics", "goog.graphics.LinearGradient", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.graphics.Stroke", "goog.graphics.SvgEllipseElement", "goog.graphics.SvgGroupElement", "goog.graphics.SvgImageElement", "goog.graphics.SvgPathElement", "goog.graphics.SvgRectElement", "goog.graphics.SvgTextElement", "goog.math", 
"goog.math.Size", "goog.style", "goog.userAgent"]);
goog.addDependency("graphics/textelement.js", ["goog.graphics.TextElement"], ["goog.graphics.StrokeAndFillElement"]);
goog.addDependency("graphics/vmlelement.js", ["goog.graphics.VmlEllipseElement", "goog.graphics.VmlGroupElement", "goog.graphics.VmlImageElement", "goog.graphics.VmlPathElement", "goog.graphics.VmlRectElement", "goog.graphics.VmlTextElement"], ["goog.dom", "goog.graphics.EllipseElement", "goog.graphics.GroupElement", "goog.graphics.ImageElement", "goog.graphics.PathElement", "goog.graphics.RectElement", "goog.graphics.TextElement"]);
goog.addDependency("graphics/vmlgraphics.js", ["goog.graphics.VmlGraphics"], ["goog.array", "goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.graphics.AbstractGraphics", "goog.graphics.Font", "goog.graphics.LinearGradient", "goog.graphics.SolidFill", "goog.graphics.Stroke", "goog.graphics.VmlEllipseElement", "goog.graphics.VmlGroupElement", "goog.graphics.VmlImageElement", "goog.graphics.VmlPathElement", "goog.graphics.VmlRectElement", "goog.graphics.VmlTextElement", "goog.math.Size", 
"goog.string", "goog.style"]);
goog.addDependency("history/event.js", ["goog.history.Event"], ["goog.events.Event", "goog.history.EventType"]);
goog.addDependency("history/eventtype.js", ["goog.history.EventType"], []);
goog.addDependency("history/history.js", ["goog.History", "goog.History.Event", "goog.History.EventType"], ["goog.Timer", "goog.dom", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.history.Event", "goog.history.EventType", "goog.memoize", "goog.string", "goog.userAgent"]);
goog.addDependency("history/history_test.js", ["goog.HistoryTest"], ["goog.History", "goog.testing.jsunit", "goog.userAgent"]);
goog.addDependency("history/html5history.js", ["goog.history.Html5History", "goog.history.Html5History.TokenTransformer"], ["goog.asserts", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.history.Event", "goog.history.EventType"]);
goog.addDependency("i18n/bidi.js", ["goog.i18n.bidi"], []);
goog.addDependency("i18n/bidiformatter.js", ["goog.i18n.BidiFormatter"], ["goog.i18n.bidi", "goog.string"]);
goog.addDependency("i18n/charlistdecompressor.js", ["goog.i18n.CharListDecompressor"], ["goog.array", "goog.i18n.uChar"]);
goog.addDependency("i18n/charpickerdata.js", ["goog.i18n.CharPickerData"], []);
goog.addDependency("i18n/compactnumberformatsymbols.js", ["goog.i18n.CompactNumberFormatSymbols", "goog.i18n.CompactNumberFormatSymbols_af", "goog.i18n.CompactNumberFormatSymbols_af_ZA", "goog.i18n.CompactNumberFormatSymbols_am", "goog.i18n.CompactNumberFormatSymbols_am_ET", "goog.i18n.CompactNumberFormatSymbols_ar", "goog.i18n.CompactNumberFormatSymbols_ar_001", "goog.i18n.CompactNumberFormatSymbols_ar_EG", "goog.i18n.CompactNumberFormatSymbols_bg", "goog.i18n.CompactNumberFormatSymbols_bg_BG", 
"goog.i18n.CompactNumberFormatSymbols_bn", "goog.i18n.CompactNumberFormatSymbols_bn_BD", "goog.i18n.CompactNumberFormatSymbols_ca", "goog.i18n.CompactNumberFormatSymbols_ca_AD", "goog.i18n.CompactNumberFormatSymbols_ca_ES", "goog.i18n.CompactNumberFormatSymbols_cs", "goog.i18n.CompactNumberFormatSymbols_cs_CZ", "goog.i18n.CompactNumberFormatSymbols_da", "goog.i18n.CompactNumberFormatSymbols_da_DK", "goog.i18n.CompactNumberFormatSymbols_de", "goog.i18n.CompactNumberFormatSymbols_de_AT", "goog.i18n.CompactNumberFormatSymbols_de_BE", 
"goog.i18n.CompactNumberFormatSymbols_de_CH", "goog.i18n.CompactNumberFormatSymbols_de_DE", "goog.i18n.CompactNumberFormatSymbols_de_LU", "goog.i18n.CompactNumberFormatSymbols_el", "goog.i18n.CompactNumberFormatSymbols_el_GR", "goog.i18n.CompactNumberFormatSymbols_en", "goog.i18n.CompactNumberFormatSymbols_en_AS", "goog.i18n.CompactNumberFormatSymbols_en_AU", "goog.i18n.CompactNumberFormatSymbols_en_Dsrt_US", "goog.i18n.CompactNumberFormatSymbols_en_FM", "goog.i18n.CompactNumberFormatSymbols_en_GB", 
"goog.i18n.CompactNumberFormatSymbols_en_GU", "goog.i18n.CompactNumberFormatSymbols_en_IE", "goog.i18n.CompactNumberFormatSymbols_en_IN", "goog.i18n.CompactNumberFormatSymbols_en_MH", "goog.i18n.CompactNumberFormatSymbols_en_MP", "goog.i18n.CompactNumberFormatSymbols_en_PR", "goog.i18n.CompactNumberFormatSymbols_en_PW", "goog.i18n.CompactNumberFormatSymbols_en_SG", "goog.i18n.CompactNumberFormatSymbols_en_TC", "goog.i18n.CompactNumberFormatSymbols_en_UM", "goog.i18n.CompactNumberFormatSymbols_en_US", 
"goog.i18n.CompactNumberFormatSymbols_en_VG", "goog.i18n.CompactNumberFormatSymbols_en_VI", "goog.i18n.CompactNumberFormatSymbols_en_ZA", "goog.i18n.CompactNumberFormatSymbols_es", "goog.i18n.CompactNumberFormatSymbols_es_419", "goog.i18n.CompactNumberFormatSymbols_es_EA", "goog.i18n.CompactNumberFormatSymbols_es_ES", "goog.i18n.CompactNumberFormatSymbols_es_IC", "goog.i18n.CompactNumberFormatSymbols_et", "goog.i18n.CompactNumberFormatSymbols_et_EE", "goog.i18n.CompactNumberFormatSymbols_eu", "goog.i18n.CompactNumberFormatSymbols_eu_ES", 
"goog.i18n.CompactNumberFormatSymbols_fa", "goog.i18n.CompactNumberFormatSymbols_fa_IR", "goog.i18n.CompactNumberFormatSymbols_fi", "goog.i18n.CompactNumberFormatSymbols_fi_FI", "goog.i18n.CompactNumberFormatSymbols_fil", "goog.i18n.CompactNumberFormatSymbols_fil_PH", "goog.i18n.CompactNumberFormatSymbols_fr", "goog.i18n.CompactNumberFormatSymbols_fr_BL", "goog.i18n.CompactNumberFormatSymbols_fr_CA", "goog.i18n.CompactNumberFormatSymbols_fr_FR", "goog.i18n.CompactNumberFormatSymbols_fr_GF", "goog.i18n.CompactNumberFormatSymbols_fr_GP", 
"goog.i18n.CompactNumberFormatSymbols_fr_MC", "goog.i18n.CompactNumberFormatSymbols_fr_MF", "goog.i18n.CompactNumberFormatSymbols_fr_MQ", "goog.i18n.CompactNumberFormatSymbols_fr_RE", "goog.i18n.CompactNumberFormatSymbols_fr_YT", "goog.i18n.CompactNumberFormatSymbols_gl", "goog.i18n.CompactNumberFormatSymbols_gl_ES", "goog.i18n.CompactNumberFormatSymbols_gsw", "goog.i18n.CompactNumberFormatSymbols_gsw_CH", "goog.i18n.CompactNumberFormatSymbols_gu", "goog.i18n.CompactNumberFormatSymbols_gu_IN", "goog.i18n.CompactNumberFormatSymbols_he", 
"goog.i18n.CompactNumberFormatSymbols_he_IL", "goog.i18n.CompactNumberFormatSymbols_hi", "goog.i18n.CompactNumberFormatSymbols_hi_IN", "goog.i18n.CompactNumberFormatSymbols_hr", "goog.i18n.CompactNumberFormatSymbols_hr_HR", "goog.i18n.CompactNumberFormatSymbols_hu", "goog.i18n.CompactNumberFormatSymbols_hu_HU", "goog.i18n.CompactNumberFormatSymbols_id", "goog.i18n.CompactNumberFormatSymbols_id_ID", "goog.i18n.CompactNumberFormatSymbols_in", "goog.i18n.CompactNumberFormatSymbols_is", "goog.i18n.CompactNumberFormatSymbols_is_IS", 
"goog.i18n.CompactNumberFormatSymbols_it", "goog.i18n.CompactNumberFormatSymbols_it_IT", "goog.i18n.CompactNumberFormatSymbols_it_SM", "goog.i18n.CompactNumberFormatSymbols_iw", "goog.i18n.CompactNumberFormatSymbols_ja", "goog.i18n.CompactNumberFormatSymbols_ja_JP", "goog.i18n.CompactNumberFormatSymbols_kn", "goog.i18n.CompactNumberFormatSymbols_kn_IN", "goog.i18n.CompactNumberFormatSymbols_ko", "goog.i18n.CompactNumberFormatSymbols_ko_KR", "goog.i18n.CompactNumberFormatSymbols_ln", "goog.i18n.CompactNumberFormatSymbols_ln_CD", 
"goog.i18n.CompactNumberFormatSymbols_lt", "goog.i18n.CompactNumberFormatSymbols_lt_LT", "goog.i18n.CompactNumberFormatSymbols_lv", "goog.i18n.CompactNumberFormatSymbols_lv_LV", "goog.i18n.CompactNumberFormatSymbols_ml", "goog.i18n.CompactNumberFormatSymbols_ml_IN", "goog.i18n.CompactNumberFormatSymbols_mr", "goog.i18n.CompactNumberFormatSymbols_mr_IN", "goog.i18n.CompactNumberFormatSymbols_ms", "goog.i18n.CompactNumberFormatSymbols_ms_MY", "goog.i18n.CompactNumberFormatSymbols_mt", "goog.i18n.CompactNumberFormatSymbols_mt_MT", 
"goog.i18n.CompactNumberFormatSymbols_nl", "goog.i18n.CompactNumberFormatSymbols_nl_CW", "goog.i18n.CompactNumberFormatSymbols_nl_NL", "goog.i18n.CompactNumberFormatSymbols_nl_SX", "goog.i18n.CompactNumberFormatSymbols_no", "goog.i18n.CompactNumberFormatSymbols_or", "goog.i18n.CompactNumberFormatSymbols_or_IN", "goog.i18n.CompactNumberFormatSymbols_pl", "goog.i18n.CompactNumberFormatSymbols_pl_PL", "goog.i18n.CompactNumberFormatSymbols_pt", "goog.i18n.CompactNumberFormatSymbols_pt_BR", "goog.i18n.CompactNumberFormatSymbols_pt_PT", 
"goog.i18n.CompactNumberFormatSymbols_ro", "goog.i18n.CompactNumberFormatSymbols_ro_RO", "goog.i18n.CompactNumberFormatSymbols_ru", "goog.i18n.CompactNumberFormatSymbols_ru_RU", "goog.i18n.CompactNumberFormatSymbols_sk", "goog.i18n.CompactNumberFormatSymbols_sk_SK", "goog.i18n.CompactNumberFormatSymbols_sl", "goog.i18n.CompactNumberFormatSymbols_sl_SI", "goog.i18n.CompactNumberFormatSymbols_sq", "goog.i18n.CompactNumberFormatSymbols_sq_AL", "goog.i18n.CompactNumberFormatSymbols_sr", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_RS", 
"goog.i18n.CompactNumberFormatSymbols_sr_Latn_RS", "goog.i18n.CompactNumberFormatSymbols_sv", "goog.i18n.CompactNumberFormatSymbols_sv_SE", "goog.i18n.CompactNumberFormatSymbols_sw", "goog.i18n.CompactNumberFormatSymbols_sw_TZ", "goog.i18n.CompactNumberFormatSymbols_ta", "goog.i18n.CompactNumberFormatSymbols_ta_IN", "goog.i18n.CompactNumberFormatSymbols_te", "goog.i18n.CompactNumberFormatSymbols_te_IN", "goog.i18n.CompactNumberFormatSymbols_th", "goog.i18n.CompactNumberFormatSymbols_th_TH", "goog.i18n.CompactNumberFormatSymbols_tl", 
"goog.i18n.CompactNumberFormatSymbols_tr", "goog.i18n.CompactNumberFormatSymbols_tr_TR", "goog.i18n.CompactNumberFormatSymbols_uk", "goog.i18n.CompactNumberFormatSymbols_uk_UA", "goog.i18n.CompactNumberFormatSymbols_ur", "goog.i18n.CompactNumberFormatSymbols_ur_PK", "goog.i18n.CompactNumberFormatSymbols_vi", "goog.i18n.CompactNumberFormatSymbols_vi_VN", "goog.i18n.CompactNumberFormatSymbols_zh", "goog.i18n.CompactNumberFormatSymbols_zh_CN", "goog.i18n.CompactNumberFormatSymbols_zh_HK", "goog.i18n.CompactNumberFormatSymbols_zh_Hans_CN", 
"goog.i18n.CompactNumberFormatSymbols_zh_TW", "goog.i18n.CompactNumberFormatSymbols_zu", "goog.i18n.CompactNumberFormatSymbols_zu_ZA"], []);
goog.addDependency("i18n/compactnumberformatsymbols_ext.js", ["goog.i18n.CompactNumberFormatSymbolsExt", "goog.i18n.CompactNumberFormatSymbols_aa", "goog.i18n.CompactNumberFormatSymbols_aa_DJ", "goog.i18n.CompactNumberFormatSymbols_aa_ER", "goog.i18n.CompactNumberFormatSymbols_aa_ET", "goog.i18n.CompactNumberFormatSymbols_af_NA", "goog.i18n.CompactNumberFormatSymbols_agq", "goog.i18n.CompactNumberFormatSymbols_agq_CM", "goog.i18n.CompactNumberFormatSymbols_ak", "goog.i18n.CompactNumberFormatSymbols_ak_GH", 
"goog.i18n.CompactNumberFormatSymbols_ar_AE", "goog.i18n.CompactNumberFormatSymbols_ar_BH", "goog.i18n.CompactNumberFormatSymbols_ar_DJ", "goog.i18n.CompactNumberFormatSymbols_ar_DZ", "goog.i18n.CompactNumberFormatSymbols_ar_EH", "goog.i18n.CompactNumberFormatSymbols_ar_ER", "goog.i18n.CompactNumberFormatSymbols_ar_IL", "goog.i18n.CompactNumberFormatSymbols_ar_IQ", "goog.i18n.CompactNumberFormatSymbols_ar_JO", "goog.i18n.CompactNumberFormatSymbols_ar_KM", "goog.i18n.CompactNumberFormatSymbols_ar_KW", 
"goog.i18n.CompactNumberFormatSymbols_ar_LB", "goog.i18n.CompactNumberFormatSymbols_ar_LY", "goog.i18n.CompactNumberFormatSymbols_ar_MA", "goog.i18n.CompactNumberFormatSymbols_ar_MR", "goog.i18n.CompactNumberFormatSymbols_ar_OM", "goog.i18n.CompactNumberFormatSymbols_ar_PS", "goog.i18n.CompactNumberFormatSymbols_ar_QA", "goog.i18n.CompactNumberFormatSymbols_ar_SA", "goog.i18n.CompactNumberFormatSymbols_ar_SD", "goog.i18n.CompactNumberFormatSymbols_ar_SO", "goog.i18n.CompactNumberFormatSymbols_ar_SY", 
"goog.i18n.CompactNumberFormatSymbols_ar_TD", "goog.i18n.CompactNumberFormatSymbols_ar_TN", "goog.i18n.CompactNumberFormatSymbols_ar_YE", "goog.i18n.CompactNumberFormatSymbols_as", "goog.i18n.CompactNumberFormatSymbols_as_IN", "goog.i18n.CompactNumberFormatSymbols_asa", "goog.i18n.CompactNumberFormatSymbols_asa_TZ", "goog.i18n.CompactNumberFormatSymbols_ast", "goog.i18n.CompactNumberFormatSymbols_ast_ES", "goog.i18n.CompactNumberFormatSymbols_az", "goog.i18n.CompactNumberFormatSymbols_az_Cyrl", "goog.i18n.CompactNumberFormatSymbols_az_Cyrl_AZ", 
"goog.i18n.CompactNumberFormatSymbols_az_Latn", "goog.i18n.CompactNumberFormatSymbols_az_Latn_AZ", "goog.i18n.CompactNumberFormatSymbols_bas", "goog.i18n.CompactNumberFormatSymbols_bas_CM", "goog.i18n.CompactNumberFormatSymbols_be", "goog.i18n.CompactNumberFormatSymbols_be_BY", "goog.i18n.CompactNumberFormatSymbols_bem", "goog.i18n.CompactNumberFormatSymbols_bem_ZM", "goog.i18n.CompactNumberFormatSymbols_bez", "goog.i18n.CompactNumberFormatSymbols_bez_TZ", "goog.i18n.CompactNumberFormatSymbols_bm", 
"goog.i18n.CompactNumberFormatSymbols_bm_ML", "goog.i18n.CompactNumberFormatSymbols_bn_IN", "goog.i18n.CompactNumberFormatSymbols_bo", "goog.i18n.CompactNumberFormatSymbols_bo_CN", "goog.i18n.CompactNumberFormatSymbols_bo_IN", "goog.i18n.CompactNumberFormatSymbols_br", "goog.i18n.CompactNumberFormatSymbols_br_FR", "goog.i18n.CompactNumberFormatSymbols_brx", "goog.i18n.CompactNumberFormatSymbols_brx_IN", "goog.i18n.CompactNumberFormatSymbols_bs", "goog.i18n.CompactNumberFormatSymbols_bs_Cyrl", "goog.i18n.CompactNumberFormatSymbols_bs_Cyrl_BA", 
"goog.i18n.CompactNumberFormatSymbols_bs_Latn", "goog.i18n.CompactNumberFormatSymbols_bs_Latn_BA", "goog.i18n.CompactNumberFormatSymbols_byn", "goog.i18n.CompactNumberFormatSymbols_byn_ER", "goog.i18n.CompactNumberFormatSymbols_cgg", "goog.i18n.CompactNumberFormatSymbols_cgg_UG", "goog.i18n.CompactNumberFormatSymbols_chr", "goog.i18n.CompactNumberFormatSymbols_chr_US", "goog.i18n.CompactNumberFormatSymbols_ckb", "goog.i18n.CompactNumberFormatSymbols_ckb_Arab", "goog.i18n.CompactNumberFormatSymbols_ckb_Arab_IQ", 
"goog.i18n.CompactNumberFormatSymbols_ckb_Arab_IR", "goog.i18n.CompactNumberFormatSymbols_ckb_IQ", "goog.i18n.CompactNumberFormatSymbols_ckb_IR", "goog.i18n.CompactNumberFormatSymbols_ckb_Latn", "goog.i18n.CompactNumberFormatSymbols_ckb_Latn_IQ", "goog.i18n.CompactNumberFormatSymbols_cy", "goog.i18n.CompactNumberFormatSymbols_cy_GB", "goog.i18n.CompactNumberFormatSymbols_dav", "goog.i18n.CompactNumberFormatSymbols_dav_KE", "goog.i18n.CompactNumberFormatSymbols_de_LI", "goog.i18n.CompactNumberFormatSymbols_dje", 
"goog.i18n.CompactNumberFormatSymbols_dje_NE", "goog.i18n.CompactNumberFormatSymbols_dua", "goog.i18n.CompactNumberFormatSymbols_dua_CM", "goog.i18n.CompactNumberFormatSymbols_dyo", "goog.i18n.CompactNumberFormatSymbols_dyo_SN", "goog.i18n.CompactNumberFormatSymbols_dz", "goog.i18n.CompactNumberFormatSymbols_dz_BT", "goog.i18n.CompactNumberFormatSymbols_ebu", "goog.i18n.CompactNumberFormatSymbols_ebu_KE", "goog.i18n.CompactNumberFormatSymbols_ee", "goog.i18n.CompactNumberFormatSymbols_ee_GH", "goog.i18n.CompactNumberFormatSymbols_ee_TG", 
"goog.i18n.CompactNumberFormatSymbols_el_CY", "goog.i18n.CompactNumberFormatSymbols_en_150", "goog.i18n.CompactNumberFormatSymbols_en_AG", "goog.i18n.CompactNumberFormatSymbols_en_BB", "goog.i18n.CompactNumberFormatSymbols_en_BE", "goog.i18n.CompactNumberFormatSymbols_en_BM", "goog.i18n.CompactNumberFormatSymbols_en_BS", "goog.i18n.CompactNumberFormatSymbols_en_BW", "goog.i18n.CompactNumberFormatSymbols_en_BZ", "goog.i18n.CompactNumberFormatSymbols_en_CA", "goog.i18n.CompactNumberFormatSymbols_en_CM", 
"goog.i18n.CompactNumberFormatSymbols_en_DM", "goog.i18n.CompactNumberFormatSymbols_en_Dsrt", "goog.i18n.CompactNumberFormatSymbols_en_FJ", "goog.i18n.CompactNumberFormatSymbols_en_GD", "goog.i18n.CompactNumberFormatSymbols_en_GG", "goog.i18n.CompactNumberFormatSymbols_en_GH", "goog.i18n.CompactNumberFormatSymbols_en_GI", "goog.i18n.CompactNumberFormatSymbols_en_GM", "goog.i18n.CompactNumberFormatSymbols_en_GY", "goog.i18n.CompactNumberFormatSymbols_en_HK", "goog.i18n.CompactNumberFormatSymbols_en_IM", 
"goog.i18n.CompactNumberFormatSymbols_en_JE", "goog.i18n.CompactNumberFormatSymbols_en_JM", "goog.i18n.CompactNumberFormatSymbols_en_KE", "goog.i18n.CompactNumberFormatSymbols_en_KI", "goog.i18n.CompactNumberFormatSymbols_en_KN", "goog.i18n.CompactNumberFormatSymbols_en_KY", "goog.i18n.CompactNumberFormatSymbols_en_LC", "goog.i18n.CompactNumberFormatSymbols_en_LR", "goog.i18n.CompactNumberFormatSymbols_en_LS", "goog.i18n.CompactNumberFormatSymbols_en_MG", "goog.i18n.CompactNumberFormatSymbols_en_MT", 
"goog.i18n.CompactNumberFormatSymbols_en_MU", "goog.i18n.CompactNumberFormatSymbols_en_MW", "goog.i18n.CompactNumberFormatSymbols_en_NA", "goog.i18n.CompactNumberFormatSymbols_en_NG", "goog.i18n.CompactNumberFormatSymbols_en_NZ", "goog.i18n.CompactNumberFormatSymbols_en_PG", "goog.i18n.CompactNumberFormatSymbols_en_PH", "goog.i18n.CompactNumberFormatSymbols_en_PK", "goog.i18n.CompactNumberFormatSymbols_en_SB", "goog.i18n.CompactNumberFormatSymbols_en_SC", "goog.i18n.CompactNumberFormatSymbols_en_SL", 
"goog.i18n.CompactNumberFormatSymbols_en_SS", "goog.i18n.CompactNumberFormatSymbols_en_SZ", "goog.i18n.CompactNumberFormatSymbols_en_TO", "goog.i18n.CompactNumberFormatSymbols_en_TT", "goog.i18n.CompactNumberFormatSymbols_en_TZ", "goog.i18n.CompactNumberFormatSymbols_en_UG", "goog.i18n.CompactNumberFormatSymbols_en_VC", "goog.i18n.CompactNumberFormatSymbols_en_VU", "goog.i18n.CompactNumberFormatSymbols_en_WS", "goog.i18n.CompactNumberFormatSymbols_en_ZM", "goog.i18n.CompactNumberFormatSymbols_en_ZW", 
"goog.i18n.CompactNumberFormatSymbols_eo", "goog.i18n.CompactNumberFormatSymbols_es_AR", "goog.i18n.CompactNumberFormatSymbols_es_BO", "goog.i18n.CompactNumberFormatSymbols_es_CL", "goog.i18n.CompactNumberFormatSymbols_es_CO", "goog.i18n.CompactNumberFormatSymbols_es_CR", "goog.i18n.CompactNumberFormatSymbols_es_CU", "goog.i18n.CompactNumberFormatSymbols_es_DO", "goog.i18n.CompactNumberFormatSymbols_es_EC", "goog.i18n.CompactNumberFormatSymbols_es_GQ", "goog.i18n.CompactNumberFormatSymbols_es_GT", 
"goog.i18n.CompactNumberFormatSymbols_es_HN", "goog.i18n.CompactNumberFormatSymbols_es_MX", "goog.i18n.CompactNumberFormatSymbols_es_NI", "goog.i18n.CompactNumberFormatSymbols_es_PA", "goog.i18n.CompactNumberFormatSymbols_es_PE", "goog.i18n.CompactNumberFormatSymbols_es_PH", "goog.i18n.CompactNumberFormatSymbols_es_PR", "goog.i18n.CompactNumberFormatSymbols_es_PY", "goog.i18n.CompactNumberFormatSymbols_es_SV", "goog.i18n.CompactNumberFormatSymbols_es_US", "goog.i18n.CompactNumberFormatSymbols_es_UY", 
"goog.i18n.CompactNumberFormatSymbols_es_VE", "goog.i18n.CompactNumberFormatSymbols_ewo", "goog.i18n.CompactNumberFormatSymbols_ewo_CM", "goog.i18n.CompactNumberFormatSymbols_fa_AF", "goog.i18n.CompactNumberFormatSymbols_ff", "goog.i18n.CompactNumberFormatSymbols_ff_SN", "goog.i18n.CompactNumberFormatSymbols_fo", "goog.i18n.CompactNumberFormatSymbols_fo_FO", "goog.i18n.CompactNumberFormatSymbols_fr_BE", "goog.i18n.CompactNumberFormatSymbols_fr_BF", "goog.i18n.CompactNumberFormatSymbols_fr_BI", "goog.i18n.CompactNumberFormatSymbols_fr_BJ", 
"goog.i18n.CompactNumberFormatSymbols_fr_CD", "goog.i18n.CompactNumberFormatSymbols_fr_CF", "goog.i18n.CompactNumberFormatSymbols_fr_CG", "goog.i18n.CompactNumberFormatSymbols_fr_CH", "goog.i18n.CompactNumberFormatSymbols_fr_CI", "goog.i18n.CompactNumberFormatSymbols_fr_CM", "goog.i18n.CompactNumberFormatSymbols_fr_DJ", "goog.i18n.CompactNumberFormatSymbols_fr_DZ", "goog.i18n.CompactNumberFormatSymbols_fr_GA", "goog.i18n.CompactNumberFormatSymbols_fr_GN", "goog.i18n.CompactNumberFormatSymbols_fr_GQ", 
"goog.i18n.CompactNumberFormatSymbols_fr_HT", "goog.i18n.CompactNumberFormatSymbols_fr_KM", "goog.i18n.CompactNumberFormatSymbols_fr_LU", "goog.i18n.CompactNumberFormatSymbols_fr_MA", "goog.i18n.CompactNumberFormatSymbols_fr_MG", "goog.i18n.CompactNumberFormatSymbols_fr_ML", "goog.i18n.CompactNumberFormatSymbols_fr_MR", "goog.i18n.CompactNumberFormatSymbols_fr_MU", "goog.i18n.CompactNumberFormatSymbols_fr_NC", "goog.i18n.CompactNumberFormatSymbols_fr_NE", "goog.i18n.CompactNumberFormatSymbols_fr_PF", 
"goog.i18n.CompactNumberFormatSymbols_fr_RW", "goog.i18n.CompactNumberFormatSymbols_fr_SC", "goog.i18n.CompactNumberFormatSymbols_fr_SN", "goog.i18n.CompactNumberFormatSymbols_fr_SY", "goog.i18n.CompactNumberFormatSymbols_fr_TD", "goog.i18n.CompactNumberFormatSymbols_fr_TG", "goog.i18n.CompactNumberFormatSymbols_fr_TN", "goog.i18n.CompactNumberFormatSymbols_fr_VU", "goog.i18n.CompactNumberFormatSymbols_fur", "goog.i18n.CompactNumberFormatSymbols_fur_IT", "goog.i18n.CompactNumberFormatSymbols_ga", 
"goog.i18n.CompactNumberFormatSymbols_ga_IE", "goog.i18n.CompactNumberFormatSymbols_gd", "goog.i18n.CompactNumberFormatSymbols_gd_GB", "goog.i18n.CompactNumberFormatSymbols_guz", "goog.i18n.CompactNumberFormatSymbols_guz_KE", "goog.i18n.CompactNumberFormatSymbols_gv", "goog.i18n.CompactNumberFormatSymbols_gv_GB", "goog.i18n.CompactNumberFormatSymbols_ha", "goog.i18n.CompactNumberFormatSymbols_ha_Latn", "goog.i18n.CompactNumberFormatSymbols_ha_Latn_GH", "goog.i18n.CompactNumberFormatSymbols_ha_Latn_NE", 
"goog.i18n.CompactNumberFormatSymbols_ha_Latn_NG", "goog.i18n.CompactNumberFormatSymbols_haw", "goog.i18n.CompactNumberFormatSymbols_haw_US", "goog.i18n.CompactNumberFormatSymbols_hr_BA", "goog.i18n.CompactNumberFormatSymbols_hy", "goog.i18n.CompactNumberFormatSymbols_hy_AM", "goog.i18n.CompactNumberFormatSymbols_ia", "goog.i18n.CompactNumberFormatSymbols_ig", "goog.i18n.CompactNumberFormatSymbols_ig_NG", "goog.i18n.CompactNumberFormatSymbols_ii", "goog.i18n.CompactNumberFormatSymbols_ii_CN", "goog.i18n.CompactNumberFormatSymbols_it_CH", 
"goog.i18n.CompactNumberFormatSymbols_jgo", "goog.i18n.CompactNumberFormatSymbols_jgo_CM", "goog.i18n.CompactNumberFormatSymbols_jmc", "goog.i18n.CompactNumberFormatSymbols_jmc_TZ", "goog.i18n.CompactNumberFormatSymbols_ka", "goog.i18n.CompactNumberFormatSymbols_ka_GE", "goog.i18n.CompactNumberFormatSymbols_kab", "goog.i18n.CompactNumberFormatSymbols_kab_DZ", "goog.i18n.CompactNumberFormatSymbols_kam", "goog.i18n.CompactNumberFormatSymbols_kam_KE", "goog.i18n.CompactNumberFormatSymbols_kde", "goog.i18n.CompactNumberFormatSymbols_kde_TZ", 
"goog.i18n.CompactNumberFormatSymbols_kea", "goog.i18n.CompactNumberFormatSymbols_kea_CV", "goog.i18n.CompactNumberFormatSymbols_khq", "goog.i18n.CompactNumberFormatSymbols_khq_ML", "goog.i18n.CompactNumberFormatSymbols_ki", "goog.i18n.CompactNumberFormatSymbols_ki_KE", "goog.i18n.CompactNumberFormatSymbols_kk", "goog.i18n.CompactNumberFormatSymbols_kk_Cyrl", "goog.i18n.CompactNumberFormatSymbols_kk_Cyrl_KZ", "goog.i18n.CompactNumberFormatSymbols_kkj", "goog.i18n.CompactNumberFormatSymbols_kkj_CM", 
"goog.i18n.CompactNumberFormatSymbols_kl", "goog.i18n.CompactNumberFormatSymbols_kl_GL", "goog.i18n.CompactNumberFormatSymbols_kln", "goog.i18n.CompactNumberFormatSymbols_kln_KE", "goog.i18n.CompactNumberFormatSymbols_km", "goog.i18n.CompactNumberFormatSymbols_km_KH", "goog.i18n.CompactNumberFormatSymbols_ko_KP", "goog.i18n.CompactNumberFormatSymbols_kok", "goog.i18n.CompactNumberFormatSymbols_kok_IN", "goog.i18n.CompactNumberFormatSymbols_ks", "goog.i18n.CompactNumberFormatSymbols_ks_Arab", "goog.i18n.CompactNumberFormatSymbols_ks_Arab_IN", 
"goog.i18n.CompactNumberFormatSymbols_ksb", "goog.i18n.CompactNumberFormatSymbols_ksb_TZ", "goog.i18n.CompactNumberFormatSymbols_ksf", "goog.i18n.CompactNumberFormatSymbols_ksf_CM", "goog.i18n.CompactNumberFormatSymbols_ksh", "goog.i18n.CompactNumberFormatSymbols_ksh_DE", "goog.i18n.CompactNumberFormatSymbols_kw", "goog.i18n.CompactNumberFormatSymbols_kw_GB", "goog.i18n.CompactNumberFormatSymbols_ky", "goog.i18n.CompactNumberFormatSymbols_ky_KG", "goog.i18n.CompactNumberFormatSymbols_lag", "goog.i18n.CompactNumberFormatSymbols_lag_TZ", 
"goog.i18n.CompactNumberFormatSymbols_lg", "goog.i18n.CompactNumberFormatSymbols_lg_UG", "goog.i18n.CompactNumberFormatSymbols_ln_AO", "goog.i18n.CompactNumberFormatSymbols_ln_CF", "goog.i18n.CompactNumberFormatSymbols_ln_CG", "goog.i18n.CompactNumberFormatSymbols_lo", "goog.i18n.CompactNumberFormatSymbols_lo_LA", "goog.i18n.CompactNumberFormatSymbols_lu", "goog.i18n.CompactNumberFormatSymbols_lu_CD", "goog.i18n.CompactNumberFormatSymbols_luo", "goog.i18n.CompactNumberFormatSymbols_luo_KE", "goog.i18n.CompactNumberFormatSymbols_luy", 
"goog.i18n.CompactNumberFormatSymbols_luy_KE", "goog.i18n.CompactNumberFormatSymbols_mas", "goog.i18n.CompactNumberFormatSymbols_mas_KE", "goog.i18n.CompactNumberFormatSymbols_mas_TZ", "goog.i18n.CompactNumberFormatSymbols_mer", "goog.i18n.CompactNumberFormatSymbols_mer_KE", "goog.i18n.CompactNumberFormatSymbols_mfe", "goog.i18n.CompactNumberFormatSymbols_mfe_MU", "goog.i18n.CompactNumberFormatSymbols_mg", "goog.i18n.CompactNumberFormatSymbols_mg_MG", "goog.i18n.CompactNumberFormatSymbols_mgh", "goog.i18n.CompactNumberFormatSymbols_mgh_MZ", 
"goog.i18n.CompactNumberFormatSymbols_mgo", "goog.i18n.CompactNumberFormatSymbols_mgo_CM", "goog.i18n.CompactNumberFormatSymbols_mk", "goog.i18n.CompactNumberFormatSymbols_mk_MK", "goog.i18n.CompactNumberFormatSymbols_ms_BN", "goog.i18n.CompactNumberFormatSymbols_ms_SG", "goog.i18n.CompactNumberFormatSymbols_mua", "goog.i18n.CompactNumberFormatSymbols_mua_CM", "goog.i18n.CompactNumberFormatSymbols_my", "goog.i18n.CompactNumberFormatSymbols_my_MM", "goog.i18n.CompactNumberFormatSymbols_naq", "goog.i18n.CompactNumberFormatSymbols_naq_NA", 
"goog.i18n.CompactNumberFormatSymbols_nb", "goog.i18n.CompactNumberFormatSymbols_nb_NO", "goog.i18n.CompactNumberFormatSymbols_nd", "goog.i18n.CompactNumberFormatSymbols_nd_ZW", "goog.i18n.CompactNumberFormatSymbols_ne", "goog.i18n.CompactNumberFormatSymbols_ne_IN", "goog.i18n.CompactNumberFormatSymbols_ne_NP", "goog.i18n.CompactNumberFormatSymbols_nl_AW", "goog.i18n.CompactNumberFormatSymbols_nl_BE", "goog.i18n.CompactNumberFormatSymbols_nl_SR", "goog.i18n.CompactNumberFormatSymbols_nmg", "goog.i18n.CompactNumberFormatSymbols_nmg_CM", 
"goog.i18n.CompactNumberFormatSymbols_nn", "goog.i18n.CompactNumberFormatSymbols_nn_NO", "goog.i18n.CompactNumberFormatSymbols_nnh", "goog.i18n.CompactNumberFormatSymbols_nnh_CM", "goog.i18n.CompactNumberFormatSymbols_nr", "goog.i18n.CompactNumberFormatSymbols_nr_ZA", "goog.i18n.CompactNumberFormatSymbols_nso", "goog.i18n.CompactNumberFormatSymbols_nso_ZA", "goog.i18n.CompactNumberFormatSymbols_nus", "goog.i18n.CompactNumberFormatSymbols_nus_SD", "goog.i18n.CompactNumberFormatSymbols_nyn", "goog.i18n.CompactNumberFormatSymbols_nyn_UG", 
"goog.i18n.CompactNumberFormatSymbols_om", "goog.i18n.CompactNumberFormatSymbols_om_ET", "goog.i18n.CompactNumberFormatSymbols_om_KE", "goog.i18n.CompactNumberFormatSymbols_os", "goog.i18n.CompactNumberFormatSymbols_os_GE", "goog.i18n.CompactNumberFormatSymbols_os_RU", "goog.i18n.CompactNumberFormatSymbols_pa", "goog.i18n.CompactNumberFormatSymbols_pa_Arab", "goog.i18n.CompactNumberFormatSymbols_pa_Arab_PK", "goog.i18n.CompactNumberFormatSymbols_pa_Guru", "goog.i18n.CompactNumberFormatSymbols_pa_Guru_IN", 
"goog.i18n.CompactNumberFormatSymbols_ps", "goog.i18n.CompactNumberFormatSymbols_ps_AF", "goog.i18n.CompactNumberFormatSymbols_pt_AO", "goog.i18n.CompactNumberFormatSymbols_pt_CV", "goog.i18n.CompactNumberFormatSymbols_pt_GW", "goog.i18n.CompactNumberFormatSymbols_pt_MO", "goog.i18n.CompactNumberFormatSymbols_pt_MZ", "goog.i18n.CompactNumberFormatSymbols_pt_ST", "goog.i18n.CompactNumberFormatSymbols_pt_TL", "goog.i18n.CompactNumberFormatSymbols_rm", "goog.i18n.CompactNumberFormatSymbols_rm_CH", "goog.i18n.CompactNumberFormatSymbols_rn", 
"goog.i18n.CompactNumberFormatSymbols_rn_BI", "goog.i18n.CompactNumberFormatSymbols_ro_MD", "goog.i18n.CompactNumberFormatSymbols_rof", "goog.i18n.CompactNumberFormatSymbols_rof_TZ", "goog.i18n.CompactNumberFormatSymbols_ru_BY", "goog.i18n.CompactNumberFormatSymbols_ru_KG", "goog.i18n.CompactNumberFormatSymbols_ru_KZ", "goog.i18n.CompactNumberFormatSymbols_ru_MD", "goog.i18n.CompactNumberFormatSymbols_ru_UA", "goog.i18n.CompactNumberFormatSymbols_rw", "goog.i18n.CompactNumberFormatSymbols_rw_RW", 
"goog.i18n.CompactNumberFormatSymbols_rwk", "goog.i18n.CompactNumberFormatSymbols_rwk_TZ", "goog.i18n.CompactNumberFormatSymbols_sah", "goog.i18n.CompactNumberFormatSymbols_sah_RU", "goog.i18n.CompactNumberFormatSymbols_saq", "goog.i18n.CompactNumberFormatSymbols_saq_KE", "goog.i18n.CompactNumberFormatSymbols_sbp", "goog.i18n.CompactNumberFormatSymbols_sbp_TZ", "goog.i18n.CompactNumberFormatSymbols_se", "goog.i18n.CompactNumberFormatSymbols_se_FI", "goog.i18n.CompactNumberFormatSymbols_se_NO", "goog.i18n.CompactNumberFormatSymbols_seh", 
"goog.i18n.CompactNumberFormatSymbols_seh_MZ", "goog.i18n.CompactNumberFormatSymbols_ses", "goog.i18n.CompactNumberFormatSymbols_ses_ML", "goog.i18n.CompactNumberFormatSymbols_sg", "goog.i18n.CompactNumberFormatSymbols_sg_CF", "goog.i18n.CompactNumberFormatSymbols_shi", "goog.i18n.CompactNumberFormatSymbols_shi_Latn", "goog.i18n.CompactNumberFormatSymbols_shi_Latn_MA", "goog.i18n.CompactNumberFormatSymbols_shi_Tfng", "goog.i18n.CompactNumberFormatSymbols_shi_Tfng_MA", "goog.i18n.CompactNumberFormatSymbols_si", 
"goog.i18n.CompactNumberFormatSymbols_si_LK", "goog.i18n.CompactNumberFormatSymbols_sn", "goog.i18n.CompactNumberFormatSymbols_sn_ZW", "goog.i18n.CompactNumberFormatSymbols_so", "goog.i18n.CompactNumberFormatSymbols_so_DJ", "goog.i18n.CompactNumberFormatSymbols_so_ET", "goog.i18n.CompactNumberFormatSymbols_so_KE", "goog.i18n.CompactNumberFormatSymbols_so_SO", "goog.i18n.CompactNumberFormatSymbols_sq_MK", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_BA", 
"goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_ME", "goog.i18n.CompactNumberFormatSymbols_sr_Latn", "goog.i18n.CompactNumberFormatSymbols_sr_Latn_BA", "goog.i18n.CompactNumberFormatSymbols_sr_Latn_ME", "goog.i18n.CompactNumberFormatSymbols_ss", "goog.i18n.CompactNumberFormatSymbols_ss_SZ", "goog.i18n.CompactNumberFormatSymbols_ss_ZA", "goog.i18n.CompactNumberFormatSymbols_ssy", "goog.i18n.CompactNumberFormatSymbols_ssy_ER", "goog.i18n.CompactNumberFormatSymbols_st", "goog.i18n.CompactNumberFormatSymbols_st_LS", 
"goog.i18n.CompactNumberFormatSymbols_st_ZA", "goog.i18n.CompactNumberFormatSymbols_sv_AX", "goog.i18n.CompactNumberFormatSymbols_sv_FI", "goog.i18n.CompactNumberFormatSymbols_sw_KE", "goog.i18n.CompactNumberFormatSymbols_sw_UG", "goog.i18n.CompactNumberFormatSymbols_swc", "goog.i18n.CompactNumberFormatSymbols_swc_CD", "goog.i18n.CompactNumberFormatSymbols_ta_LK", "goog.i18n.CompactNumberFormatSymbols_ta_MY", "goog.i18n.CompactNumberFormatSymbols_ta_SG", "goog.i18n.CompactNumberFormatSymbols_teo", 
"goog.i18n.CompactNumberFormatSymbols_teo_KE", "goog.i18n.CompactNumberFormatSymbols_teo_UG", "goog.i18n.CompactNumberFormatSymbols_tg", "goog.i18n.CompactNumberFormatSymbols_tg_Cyrl", "goog.i18n.CompactNumberFormatSymbols_tg_Cyrl_TJ", "goog.i18n.CompactNumberFormatSymbols_ti", "goog.i18n.CompactNumberFormatSymbols_ti_ER", "goog.i18n.CompactNumberFormatSymbols_ti_ET", "goog.i18n.CompactNumberFormatSymbols_tig", "goog.i18n.CompactNumberFormatSymbols_tig_ER", "goog.i18n.CompactNumberFormatSymbols_tn", 
"goog.i18n.CompactNumberFormatSymbols_tn_BW", "goog.i18n.CompactNumberFormatSymbols_tn_ZA", "goog.i18n.CompactNumberFormatSymbols_to", "goog.i18n.CompactNumberFormatSymbols_to_TO", "goog.i18n.CompactNumberFormatSymbols_tr_CY", "goog.i18n.CompactNumberFormatSymbols_ts", "goog.i18n.CompactNumberFormatSymbols_ts_ZA", "goog.i18n.CompactNumberFormatSymbols_twq", "goog.i18n.CompactNumberFormatSymbols_twq_NE", "goog.i18n.CompactNumberFormatSymbols_tzm", "goog.i18n.CompactNumberFormatSymbols_tzm_Latn", "goog.i18n.CompactNumberFormatSymbols_tzm_Latn_MA", 
"goog.i18n.CompactNumberFormatSymbols_ur_IN", "goog.i18n.CompactNumberFormatSymbols_uz", "goog.i18n.CompactNumberFormatSymbols_uz_Arab", "goog.i18n.CompactNumberFormatSymbols_uz_Arab_AF", "goog.i18n.CompactNumberFormatSymbols_uz_Cyrl", "goog.i18n.CompactNumberFormatSymbols_uz_Cyrl_UZ", "goog.i18n.CompactNumberFormatSymbols_uz_Latn", "goog.i18n.CompactNumberFormatSymbols_uz_Latn_UZ", "goog.i18n.CompactNumberFormatSymbols_vai", "goog.i18n.CompactNumberFormatSymbols_vai_Latn", "goog.i18n.CompactNumberFormatSymbols_vai_Latn_LR", 
"goog.i18n.CompactNumberFormatSymbols_vai_Vaii", "goog.i18n.CompactNumberFormatSymbols_vai_Vaii_LR", "goog.i18n.CompactNumberFormatSymbols_ve", "goog.i18n.CompactNumberFormatSymbols_ve_ZA", "goog.i18n.CompactNumberFormatSymbols_vo", "goog.i18n.CompactNumberFormatSymbols_vun", "goog.i18n.CompactNumberFormatSymbols_vun_TZ", "goog.i18n.CompactNumberFormatSymbols_wae", "goog.i18n.CompactNumberFormatSymbols_wae_CH", "goog.i18n.CompactNumberFormatSymbols_wal", "goog.i18n.CompactNumberFormatSymbols_wal_ET", 
"goog.i18n.CompactNumberFormatSymbols_xh", "goog.i18n.CompactNumberFormatSymbols_xh_ZA", "goog.i18n.CompactNumberFormatSymbols_xog", "goog.i18n.CompactNumberFormatSymbols_xog_UG", "goog.i18n.CompactNumberFormatSymbols_yav", "goog.i18n.CompactNumberFormatSymbols_yav_CM", "goog.i18n.CompactNumberFormatSymbols_yo", "goog.i18n.CompactNumberFormatSymbols_yo_NG", "goog.i18n.CompactNumberFormatSymbols_zh_Hans", "goog.i18n.CompactNumberFormatSymbols_zh_Hans_HK", "goog.i18n.CompactNumberFormatSymbols_zh_Hans_MO", 
"goog.i18n.CompactNumberFormatSymbols_zh_Hans_SG", "goog.i18n.CompactNumberFormatSymbols_zh_Hant", "goog.i18n.CompactNumberFormatSymbols_zh_Hant_HK", "goog.i18n.CompactNumberFormatSymbols_zh_Hant_MO", "goog.i18n.CompactNumberFormatSymbols_zh_Hant_TW"], []);
goog.addDependency("i18n/currency.js", ["goog.i18n.currency", "goog.i18n.currency.CurrencyInfo", "goog.i18n.currency.CurrencyInfoTier2"], []);
goog.addDependency("i18n/currencycodemap.js", ["goog.i18n.currencyCodeMap", "goog.i18n.currencyCodeMapTier2"], []);
goog.addDependency("i18n/datetimeformat.js", ["goog.i18n.DateTimeFormat", "goog.i18n.DateTimeFormat.Format"], ["goog.asserts", "goog.date.DateLike", "goog.i18n.DateTimeSymbols", "goog.i18n.TimeZone", "goog.string"]);
goog.addDependency("i18n/datetimeparse.js", ["goog.i18n.DateTimeParse"], ["goog.date.DateLike", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeSymbols"]);
goog.addDependency("i18n/datetimepatterns.js", ["goog.i18n.DateTimePatterns", "goog.i18n.DateTimePatterns_af", "goog.i18n.DateTimePatterns_am", "goog.i18n.DateTimePatterns_ar", "goog.i18n.DateTimePatterns_bg", "goog.i18n.DateTimePatterns_bn", "goog.i18n.DateTimePatterns_ca", "goog.i18n.DateTimePatterns_chr", "goog.i18n.DateTimePatterns_cs", "goog.i18n.DateTimePatterns_cy", "goog.i18n.DateTimePatterns_da", "goog.i18n.DateTimePatterns_de", "goog.i18n.DateTimePatterns_de_AT", "goog.i18n.DateTimePatterns_de_CH", 
"goog.i18n.DateTimePatterns_el", "goog.i18n.DateTimePatterns_en", "goog.i18n.DateTimePatterns_en_AU", "goog.i18n.DateTimePatterns_en_GB", "goog.i18n.DateTimePatterns_en_IE", "goog.i18n.DateTimePatterns_en_IN", "goog.i18n.DateTimePatterns_en_SG", "goog.i18n.DateTimePatterns_en_US", "goog.i18n.DateTimePatterns_en_ZA", "goog.i18n.DateTimePatterns_es", "goog.i18n.DateTimePatterns_es_419", "goog.i18n.DateTimePatterns_et", "goog.i18n.DateTimePatterns_eu", "goog.i18n.DateTimePatterns_fa", "goog.i18n.DateTimePatterns_fi", 
"goog.i18n.DateTimePatterns_fil", "goog.i18n.DateTimePatterns_fr", "goog.i18n.DateTimePatterns_fr_CA", "goog.i18n.DateTimePatterns_gl", "goog.i18n.DateTimePatterns_gsw", "goog.i18n.DateTimePatterns_gu", "goog.i18n.DateTimePatterns_haw", "goog.i18n.DateTimePatterns_he", "goog.i18n.DateTimePatterns_hi", "goog.i18n.DateTimePatterns_hr", "goog.i18n.DateTimePatterns_hu", "goog.i18n.DateTimePatterns_id", "goog.i18n.DateTimePatterns_in", "goog.i18n.DateTimePatterns_is", "goog.i18n.DateTimePatterns_it", 
"goog.i18n.DateTimePatterns_iw", "goog.i18n.DateTimePatterns_ja", "goog.i18n.DateTimePatterns_kn", "goog.i18n.DateTimePatterns_ko", "goog.i18n.DateTimePatterns_ln", "goog.i18n.DateTimePatterns_lt", "goog.i18n.DateTimePatterns_lv", "goog.i18n.DateTimePatterns_ml", "goog.i18n.DateTimePatterns_mo", "goog.i18n.DateTimePatterns_mr", "goog.i18n.DateTimePatterns_ms", "goog.i18n.DateTimePatterns_mt", "goog.i18n.DateTimePatterns_nl", "goog.i18n.DateTimePatterns_no", "goog.i18n.DateTimePatterns_or", "goog.i18n.DateTimePatterns_pl", 
"goog.i18n.DateTimePatterns_pt", "goog.i18n.DateTimePatterns_pt_BR", "goog.i18n.DateTimePatterns_pt_PT", "goog.i18n.DateTimePatterns_ro", "goog.i18n.DateTimePatterns_ru", "goog.i18n.DateTimePatterns_sk", "goog.i18n.DateTimePatterns_sl", "goog.i18n.DateTimePatterns_sq", "goog.i18n.DateTimePatterns_sr", "goog.i18n.DateTimePatterns_sv", "goog.i18n.DateTimePatterns_sw", "goog.i18n.DateTimePatterns_ta", "goog.i18n.DateTimePatterns_te", "goog.i18n.DateTimePatterns_th", "goog.i18n.DateTimePatterns_tl", 
"goog.i18n.DateTimePatterns_tr", "goog.i18n.DateTimePatterns_uk", "goog.i18n.DateTimePatterns_ur", "goog.i18n.DateTimePatterns_vi", "goog.i18n.DateTimePatterns_zh", "goog.i18n.DateTimePatterns_zh_CN", "goog.i18n.DateTimePatterns_zh_HK", "goog.i18n.DateTimePatterns_zh_TW", "goog.i18n.DateTimePatterns_zu"], []);
goog.addDependency("i18n/datetimepatternsext.js", ["goog.i18n.DateTimePatternsExt", "goog.i18n.DateTimePatterns_af_NA", "goog.i18n.DateTimePatterns_af_ZA", "goog.i18n.DateTimePatterns_agq", "goog.i18n.DateTimePatterns_agq_CM", "goog.i18n.DateTimePatterns_ak", "goog.i18n.DateTimePatterns_ak_GH", "goog.i18n.DateTimePatterns_am_ET", "goog.i18n.DateTimePatterns_ar_AE", "goog.i18n.DateTimePatterns_ar_BH", "goog.i18n.DateTimePatterns_ar_DZ", "goog.i18n.DateTimePatterns_ar_EG", "goog.i18n.DateTimePatterns_ar_IQ", 
"goog.i18n.DateTimePatterns_ar_JO", "goog.i18n.DateTimePatterns_ar_KW", "goog.i18n.DateTimePatterns_ar_LB", "goog.i18n.DateTimePatterns_ar_LY", "goog.i18n.DateTimePatterns_ar_MA", "goog.i18n.DateTimePatterns_ar_OM", "goog.i18n.DateTimePatterns_ar_QA", "goog.i18n.DateTimePatterns_ar_SA", "goog.i18n.DateTimePatterns_ar_SD", "goog.i18n.DateTimePatterns_ar_SY", "goog.i18n.DateTimePatterns_ar_TN", "goog.i18n.DateTimePatterns_ar_YE", "goog.i18n.DateTimePatterns_as", "goog.i18n.DateTimePatterns_as_IN", 
"goog.i18n.DateTimePatterns_asa", "goog.i18n.DateTimePatterns_asa_TZ", "goog.i18n.DateTimePatterns_az", "goog.i18n.DateTimePatterns_az_Cyrl", "goog.i18n.DateTimePatterns_az_Cyrl_AZ", "goog.i18n.DateTimePatterns_az_Latn", "goog.i18n.DateTimePatterns_az_Latn_AZ", "goog.i18n.DateTimePatterns_bas", "goog.i18n.DateTimePatterns_bas_CM", "goog.i18n.DateTimePatterns_be", "goog.i18n.DateTimePatterns_be_BY", "goog.i18n.DateTimePatterns_bem", "goog.i18n.DateTimePatterns_bem_ZM", "goog.i18n.DateTimePatterns_bez", 
"goog.i18n.DateTimePatterns_bez_TZ", "goog.i18n.DateTimePatterns_bg_BG", "goog.i18n.DateTimePatterns_bm", "goog.i18n.DateTimePatterns_bm_ML", "goog.i18n.DateTimePatterns_bn_BD", "goog.i18n.DateTimePatterns_bn_IN", "goog.i18n.DateTimePatterns_bo", "goog.i18n.DateTimePatterns_bo_CN", "goog.i18n.DateTimePatterns_bo_IN", "goog.i18n.DateTimePatterns_br", "goog.i18n.DateTimePatterns_br_FR", "goog.i18n.DateTimePatterns_brx", "goog.i18n.DateTimePatterns_brx_IN", "goog.i18n.DateTimePatterns_bs", "goog.i18n.DateTimePatterns_bs_BA", 
"goog.i18n.DateTimePatterns_ca_ES", "goog.i18n.DateTimePatterns_cgg", "goog.i18n.DateTimePatterns_cgg_UG", "goog.i18n.DateTimePatterns_chr_US", "goog.i18n.DateTimePatterns_cs_CZ", "goog.i18n.DateTimePatterns_cy_GB", "goog.i18n.DateTimePatterns_da_DK", "goog.i18n.DateTimePatterns_dav", "goog.i18n.DateTimePatterns_dav_KE", "goog.i18n.DateTimePatterns_de_BE", "goog.i18n.DateTimePatterns_de_DE", "goog.i18n.DateTimePatterns_de_LI", "goog.i18n.DateTimePatterns_de_LU", "goog.i18n.DateTimePatterns_dje", 
"goog.i18n.DateTimePatterns_dje_NE", "goog.i18n.DateTimePatterns_dua", "goog.i18n.DateTimePatterns_dua_CM", "goog.i18n.DateTimePatterns_dyo", "goog.i18n.DateTimePatterns_dyo_SN", "goog.i18n.DateTimePatterns_ebu", "goog.i18n.DateTimePatterns_ebu_KE", "goog.i18n.DateTimePatterns_ee", "goog.i18n.DateTimePatterns_ee_GH", "goog.i18n.DateTimePatterns_ee_TG", "goog.i18n.DateTimePatterns_el_CY", "goog.i18n.DateTimePatterns_el_GR", "goog.i18n.DateTimePatterns_en_AS", "goog.i18n.DateTimePatterns_en_BB", "goog.i18n.DateTimePatterns_en_BE", 
"goog.i18n.DateTimePatterns_en_BM", "goog.i18n.DateTimePatterns_en_BW", "goog.i18n.DateTimePatterns_en_BZ", "goog.i18n.DateTimePatterns_en_CA", "goog.i18n.DateTimePatterns_en_GU", "goog.i18n.DateTimePatterns_en_GY", "goog.i18n.DateTimePatterns_en_HK", "goog.i18n.DateTimePatterns_en_JM", "goog.i18n.DateTimePatterns_en_MH", "goog.i18n.DateTimePatterns_en_MP", "goog.i18n.DateTimePatterns_en_MT", "goog.i18n.DateTimePatterns_en_MU", "goog.i18n.DateTimePatterns_en_NA", "goog.i18n.DateTimePatterns_en_NZ", 
"goog.i18n.DateTimePatterns_en_PH", "goog.i18n.DateTimePatterns_en_PK", "goog.i18n.DateTimePatterns_en_TT", "goog.i18n.DateTimePatterns_en_UM", "goog.i18n.DateTimePatterns_en_US_POSIX", "goog.i18n.DateTimePatterns_en_VI", "goog.i18n.DateTimePatterns_en_ZW", "goog.i18n.DateTimePatterns_eo", "goog.i18n.DateTimePatterns_es_AR", "goog.i18n.DateTimePatterns_es_BO", "goog.i18n.DateTimePatterns_es_CL", "goog.i18n.DateTimePatterns_es_CO", "goog.i18n.DateTimePatterns_es_CR", "goog.i18n.DateTimePatterns_es_DO", 
"goog.i18n.DateTimePatterns_es_EC", "goog.i18n.DateTimePatterns_es_ES", "goog.i18n.DateTimePatterns_es_GQ", "goog.i18n.DateTimePatterns_es_GT", "goog.i18n.DateTimePatterns_es_HN", "goog.i18n.DateTimePatterns_es_MX", "goog.i18n.DateTimePatterns_es_NI", "goog.i18n.DateTimePatterns_es_PA", "goog.i18n.DateTimePatterns_es_PE", "goog.i18n.DateTimePatterns_es_PR", "goog.i18n.DateTimePatterns_es_PY", "goog.i18n.DateTimePatterns_es_SV", "goog.i18n.DateTimePatterns_es_US", "goog.i18n.DateTimePatterns_es_UY", 
"goog.i18n.DateTimePatterns_es_VE", "goog.i18n.DateTimePatterns_et_EE", "goog.i18n.DateTimePatterns_eu_ES", "goog.i18n.DateTimePatterns_ewo", "goog.i18n.DateTimePatterns_ewo_CM", "goog.i18n.DateTimePatterns_fa_AF", "goog.i18n.DateTimePatterns_fa_IR", "goog.i18n.DateTimePatterns_ff", "goog.i18n.DateTimePatterns_ff_SN", "goog.i18n.DateTimePatterns_fi_FI", "goog.i18n.DateTimePatterns_fil_PH", "goog.i18n.DateTimePatterns_fo", "goog.i18n.DateTimePatterns_fo_FO", "goog.i18n.DateTimePatterns_fr_BE", "goog.i18n.DateTimePatterns_fr_BF", 
"goog.i18n.DateTimePatterns_fr_BI", "goog.i18n.DateTimePatterns_fr_BJ", "goog.i18n.DateTimePatterns_fr_BL", "goog.i18n.DateTimePatterns_fr_CD", "goog.i18n.DateTimePatterns_fr_CF", "goog.i18n.DateTimePatterns_fr_CG", "goog.i18n.DateTimePatterns_fr_CH", "goog.i18n.DateTimePatterns_fr_CI", "goog.i18n.DateTimePatterns_fr_CM", "goog.i18n.DateTimePatterns_fr_DJ", "goog.i18n.DateTimePatterns_fr_FR", "goog.i18n.DateTimePatterns_fr_GA", "goog.i18n.DateTimePatterns_fr_GF", "goog.i18n.DateTimePatterns_fr_GN", 
"goog.i18n.DateTimePatterns_fr_GP", "goog.i18n.DateTimePatterns_fr_GQ", "goog.i18n.DateTimePatterns_fr_KM", "goog.i18n.DateTimePatterns_fr_LU", "goog.i18n.DateTimePatterns_fr_MC", "goog.i18n.DateTimePatterns_fr_MF", "goog.i18n.DateTimePatterns_fr_MG", "goog.i18n.DateTimePatterns_fr_ML", "goog.i18n.DateTimePatterns_fr_MQ", "goog.i18n.DateTimePatterns_fr_NE", "goog.i18n.DateTimePatterns_fr_RE", "goog.i18n.DateTimePatterns_fr_RW", "goog.i18n.DateTimePatterns_fr_SN", "goog.i18n.DateTimePatterns_fr_TD", 
"goog.i18n.DateTimePatterns_fr_TG", "goog.i18n.DateTimePatterns_fr_YT", "goog.i18n.DateTimePatterns_ga", "goog.i18n.DateTimePatterns_ga_IE", "goog.i18n.DateTimePatterns_gl_ES", "goog.i18n.DateTimePatterns_gsw_CH", "goog.i18n.DateTimePatterns_gu_IN", "goog.i18n.DateTimePatterns_guz", "goog.i18n.DateTimePatterns_guz_KE", "goog.i18n.DateTimePatterns_gv", "goog.i18n.DateTimePatterns_gv_GB", "goog.i18n.DateTimePatterns_ha", "goog.i18n.DateTimePatterns_ha_Latn", "goog.i18n.DateTimePatterns_ha_Latn_GH", 
"goog.i18n.DateTimePatterns_ha_Latn_NE", "goog.i18n.DateTimePatterns_ha_Latn_NG", "goog.i18n.DateTimePatterns_haw_US", "goog.i18n.DateTimePatterns_he_IL", "goog.i18n.DateTimePatterns_hi_IN", "goog.i18n.DateTimePatterns_hr_HR", "goog.i18n.DateTimePatterns_hu_HU", "goog.i18n.DateTimePatterns_hy", "goog.i18n.DateTimePatterns_hy_AM", "goog.i18n.DateTimePatterns_id_ID", "goog.i18n.DateTimePatterns_ig", "goog.i18n.DateTimePatterns_ig_NG", "goog.i18n.DateTimePatterns_ii", "goog.i18n.DateTimePatterns_ii_CN", 
"goog.i18n.DateTimePatterns_is_IS", "goog.i18n.DateTimePatterns_it_CH", "goog.i18n.DateTimePatterns_it_IT", "goog.i18n.DateTimePatterns_ja_JP", "goog.i18n.DateTimePatterns_jmc", "goog.i18n.DateTimePatterns_jmc_TZ", "goog.i18n.DateTimePatterns_ka", "goog.i18n.DateTimePatterns_ka_GE", "goog.i18n.DateTimePatterns_kab", "goog.i18n.DateTimePatterns_kab_DZ", "goog.i18n.DateTimePatterns_kam", "goog.i18n.DateTimePatterns_kam_KE", "goog.i18n.DateTimePatterns_kde", "goog.i18n.DateTimePatterns_kde_TZ", "goog.i18n.DateTimePatterns_kea", 
"goog.i18n.DateTimePatterns_kea_CV", "goog.i18n.DateTimePatterns_khq", "goog.i18n.DateTimePatterns_khq_ML", "goog.i18n.DateTimePatterns_ki", "goog.i18n.DateTimePatterns_ki_KE", "goog.i18n.DateTimePatterns_kk", "goog.i18n.DateTimePatterns_kk_Cyrl", "goog.i18n.DateTimePatterns_kk_Cyrl_KZ", "goog.i18n.DateTimePatterns_kl", "goog.i18n.DateTimePatterns_kl_GL", "goog.i18n.DateTimePatterns_kln", "goog.i18n.DateTimePatterns_kln_KE", "goog.i18n.DateTimePatterns_km", "goog.i18n.DateTimePatterns_km_KH", "goog.i18n.DateTimePatterns_kn_IN", 
"goog.i18n.DateTimePatterns_ko_KR", "goog.i18n.DateTimePatterns_kok", "goog.i18n.DateTimePatterns_kok_IN", "goog.i18n.DateTimePatterns_ksb", "goog.i18n.DateTimePatterns_ksb_TZ", "goog.i18n.DateTimePatterns_ksf", "goog.i18n.DateTimePatterns_ksf_CM", "goog.i18n.DateTimePatterns_kw", "goog.i18n.DateTimePatterns_kw_GB", "goog.i18n.DateTimePatterns_lag", "goog.i18n.DateTimePatterns_lag_TZ", "goog.i18n.DateTimePatterns_lg", "goog.i18n.DateTimePatterns_lg_UG", "goog.i18n.DateTimePatterns_ln_CD", "goog.i18n.DateTimePatterns_ln_CG", 
"goog.i18n.DateTimePatterns_lt_LT", "goog.i18n.DateTimePatterns_lu", "goog.i18n.DateTimePatterns_lu_CD", "goog.i18n.DateTimePatterns_luo", "goog.i18n.DateTimePatterns_luo_KE", "goog.i18n.DateTimePatterns_luy", "goog.i18n.DateTimePatterns_luy_KE", "goog.i18n.DateTimePatterns_lv_LV", "goog.i18n.DateTimePatterns_mas", "goog.i18n.DateTimePatterns_mas_KE", "goog.i18n.DateTimePatterns_mas_TZ", "goog.i18n.DateTimePatterns_mer", "goog.i18n.DateTimePatterns_mer_KE", "goog.i18n.DateTimePatterns_mfe", "goog.i18n.DateTimePatterns_mfe_MU", 
"goog.i18n.DateTimePatterns_mg", "goog.i18n.DateTimePatterns_mg_MG", "goog.i18n.DateTimePatterns_mgh", "goog.i18n.DateTimePatterns_mgh_MZ", "goog.i18n.DateTimePatterns_mk", "goog.i18n.DateTimePatterns_mk_MK", "goog.i18n.DateTimePatterns_ml_IN", "goog.i18n.DateTimePatterns_mr_IN", "goog.i18n.DateTimePatterns_ms_BN", "goog.i18n.DateTimePatterns_ms_MY", "goog.i18n.DateTimePatterns_mt_MT", "goog.i18n.DateTimePatterns_mua", "goog.i18n.DateTimePatterns_mua_CM", "goog.i18n.DateTimePatterns_my", "goog.i18n.DateTimePatterns_my_MM", 
"goog.i18n.DateTimePatterns_naq", "goog.i18n.DateTimePatterns_naq_NA", "goog.i18n.DateTimePatterns_nb", "goog.i18n.DateTimePatterns_nb_NO", "goog.i18n.DateTimePatterns_nd", "goog.i18n.DateTimePatterns_nd_ZW", "goog.i18n.DateTimePatterns_ne", "goog.i18n.DateTimePatterns_ne_IN", "goog.i18n.DateTimePatterns_ne_NP", "goog.i18n.DateTimePatterns_nl_AW", "goog.i18n.DateTimePatterns_nl_BE", "goog.i18n.DateTimePatterns_nl_NL", "goog.i18n.DateTimePatterns_nmg", "goog.i18n.DateTimePatterns_nmg_CM", "goog.i18n.DateTimePatterns_nn", 
"goog.i18n.DateTimePatterns_nn_NO", "goog.i18n.DateTimePatterns_nus", "goog.i18n.DateTimePatterns_nus_SD", "goog.i18n.DateTimePatterns_nyn", "goog.i18n.DateTimePatterns_nyn_UG", "goog.i18n.DateTimePatterns_om", "goog.i18n.DateTimePatterns_om_ET", "goog.i18n.DateTimePatterns_om_KE", "goog.i18n.DateTimePatterns_or_IN", "goog.i18n.DateTimePatterns_pa", "goog.i18n.DateTimePatterns_pa_Arab", "goog.i18n.DateTimePatterns_pa_Arab_PK", "goog.i18n.DateTimePatterns_pa_Guru", "goog.i18n.DateTimePatterns_pa_Guru_IN", 
"goog.i18n.DateTimePatterns_pl_PL", "goog.i18n.DateTimePatterns_ps", "goog.i18n.DateTimePatterns_ps_AF", "goog.i18n.DateTimePatterns_pt_AO", "goog.i18n.DateTimePatterns_pt_GW", "goog.i18n.DateTimePatterns_pt_MZ", "goog.i18n.DateTimePatterns_pt_ST", "goog.i18n.DateTimePatterns_rm", "goog.i18n.DateTimePatterns_rm_CH", "goog.i18n.DateTimePatterns_rn", "goog.i18n.DateTimePatterns_rn_BI", "goog.i18n.DateTimePatterns_ro_MD", "goog.i18n.DateTimePatterns_ro_RO", "goog.i18n.DateTimePatterns_rof", "goog.i18n.DateTimePatterns_rof_TZ", 
"goog.i18n.DateTimePatterns_ru_MD", "goog.i18n.DateTimePatterns_ru_RU", "goog.i18n.DateTimePatterns_ru_UA", "goog.i18n.DateTimePatterns_rw", "goog.i18n.DateTimePatterns_rw_RW", "goog.i18n.DateTimePatterns_rwk", "goog.i18n.DateTimePatterns_rwk_TZ", "goog.i18n.DateTimePatterns_saq", "goog.i18n.DateTimePatterns_saq_KE", "goog.i18n.DateTimePatterns_sbp", "goog.i18n.DateTimePatterns_sbp_TZ", "goog.i18n.DateTimePatterns_seh", "goog.i18n.DateTimePatterns_seh_MZ", "goog.i18n.DateTimePatterns_ses", "goog.i18n.DateTimePatterns_ses_ML", 
"goog.i18n.DateTimePatterns_sg", "goog.i18n.DateTimePatterns_sg_CF", "goog.i18n.DateTimePatterns_shi", "goog.i18n.DateTimePatterns_shi_Latn", "goog.i18n.DateTimePatterns_shi_Latn_MA", "goog.i18n.DateTimePatterns_shi_Tfng", "goog.i18n.DateTimePatterns_shi_Tfng_MA", "goog.i18n.DateTimePatterns_si", "goog.i18n.DateTimePatterns_si_LK", "goog.i18n.DateTimePatterns_sk_SK", "goog.i18n.DateTimePatterns_sl_SI", "goog.i18n.DateTimePatterns_sn", "goog.i18n.DateTimePatterns_sn_ZW", "goog.i18n.DateTimePatterns_so", 
"goog.i18n.DateTimePatterns_so_DJ", "goog.i18n.DateTimePatterns_so_ET", "goog.i18n.DateTimePatterns_so_KE", "goog.i18n.DateTimePatterns_so_SO", "goog.i18n.DateTimePatterns_sq_AL", "goog.i18n.DateTimePatterns_sr_Cyrl", "goog.i18n.DateTimePatterns_sr_Cyrl_BA", "goog.i18n.DateTimePatterns_sr_Cyrl_ME", "goog.i18n.DateTimePatterns_sr_Cyrl_RS", "goog.i18n.DateTimePatterns_sr_Latn", "goog.i18n.DateTimePatterns_sr_Latn_BA", "goog.i18n.DateTimePatterns_sr_Latn_ME", "goog.i18n.DateTimePatterns_sr_Latn_RS", 
"goog.i18n.DateTimePatterns_sv_FI", "goog.i18n.DateTimePatterns_sv_SE", "goog.i18n.DateTimePatterns_sw_KE", "goog.i18n.DateTimePatterns_sw_TZ", "goog.i18n.DateTimePatterns_swc", "goog.i18n.DateTimePatterns_swc_CD", "goog.i18n.DateTimePatterns_ta_IN", "goog.i18n.DateTimePatterns_ta_LK", "goog.i18n.DateTimePatterns_te_IN", "goog.i18n.DateTimePatterns_teo", "goog.i18n.DateTimePatterns_teo_KE", "goog.i18n.DateTimePatterns_teo_UG", "goog.i18n.DateTimePatterns_th_TH", "goog.i18n.DateTimePatterns_ti", "goog.i18n.DateTimePatterns_ti_ER", 
"goog.i18n.DateTimePatterns_ti_ET", "goog.i18n.DateTimePatterns_to", "goog.i18n.DateTimePatterns_to_TO", "goog.i18n.DateTimePatterns_tr_TR", "goog.i18n.DateTimePatterns_twq", "goog.i18n.DateTimePatterns_twq_NE", "goog.i18n.DateTimePatterns_tzm", "goog.i18n.DateTimePatterns_tzm_Latn", "goog.i18n.DateTimePatterns_tzm_Latn_MA", "goog.i18n.DateTimePatterns_uk_UA", "goog.i18n.DateTimePatterns_ur_IN", "goog.i18n.DateTimePatterns_ur_PK", "goog.i18n.DateTimePatterns_uz", "goog.i18n.DateTimePatterns_uz_Arab", 
"goog.i18n.DateTimePatterns_uz_Arab_AF", "goog.i18n.DateTimePatterns_uz_Cyrl", "goog.i18n.DateTimePatterns_uz_Cyrl_UZ", "goog.i18n.DateTimePatterns_uz_Latn", "goog.i18n.DateTimePatterns_uz_Latn_UZ", "goog.i18n.DateTimePatterns_vai", "goog.i18n.DateTimePatterns_vai_Latn", "goog.i18n.DateTimePatterns_vai_Latn_LR", "goog.i18n.DateTimePatterns_vai_Vaii", "goog.i18n.DateTimePatterns_vai_Vaii_LR", "goog.i18n.DateTimePatterns_vi_VN", "goog.i18n.DateTimePatterns_vun", "goog.i18n.DateTimePatterns_vun_TZ", 
"goog.i18n.DateTimePatterns_xog", "goog.i18n.DateTimePatterns_xog_UG", "goog.i18n.DateTimePatterns_yav", "goog.i18n.DateTimePatterns_yav_CM", "goog.i18n.DateTimePatterns_yo", "goog.i18n.DateTimePatterns_yo_NG", "goog.i18n.DateTimePatterns_zh_Hans", "goog.i18n.DateTimePatterns_zh_Hans_CN", "goog.i18n.DateTimePatterns_zh_Hans_HK", "goog.i18n.DateTimePatterns_zh_Hans_MO", "goog.i18n.DateTimePatterns_zh_Hans_SG", "goog.i18n.DateTimePatterns_zh_Hant", "goog.i18n.DateTimePatterns_zh_Hant_HK", "goog.i18n.DateTimePatterns_zh_Hant_MO", 
"goog.i18n.DateTimePatterns_zh_Hant_TW", "goog.i18n.DateTimePatterns_zu_ZA"], ["goog.i18n.DateTimePatterns"]);
goog.addDependency("i18n/datetimesymbols.js", ["goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_af", "goog.i18n.DateTimeSymbols_am", "goog.i18n.DateTimeSymbols_ar", "goog.i18n.DateTimeSymbols_bg", "goog.i18n.DateTimeSymbols_bn", "goog.i18n.DateTimeSymbols_ca", "goog.i18n.DateTimeSymbols_chr", "goog.i18n.DateTimeSymbols_cs", "goog.i18n.DateTimeSymbols_cy", "goog.i18n.DateTimeSymbols_da", "goog.i18n.DateTimeSymbols_de", "goog.i18n.DateTimeSymbols_de_AT", "goog.i18n.DateTimeSymbols_de_CH", "goog.i18n.DateTimeSymbols_el", 
"goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_en_AU", "goog.i18n.DateTimeSymbols_en_GB", "goog.i18n.DateTimeSymbols_en_IE", "goog.i18n.DateTimeSymbols_en_IN", "goog.i18n.DateTimeSymbols_en_ISO", "goog.i18n.DateTimeSymbols_en_SG", "goog.i18n.DateTimeSymbols_en_US", "goog.i18n.DateTimeSymbols_en_ZA", "goog.i18n.DateTimeSymbols_es", "goog.i18n.DateTimeSymbols_es_419", "goog.i18n.DateTimeSymbols_et", "goog.i18n.DateTimeSymbols_eu", "goog.i18n.DateTimeSymbols_fa", "goog.i18n.DateTimeSymbols_fi", 
"goog.i18n.DateTimeSymbols_fil", "goog.i18n.DateTimeSymbols_fr", "goog.i18n.DateTimeSymbols_fr_CA", "goog.i18n.DateTimeSymbols_gl", "goog.i18n.DateTimeSymbols_gsw", "goog.i18n.DateTimeSymbols_gu", "goog.i18n.DateTimeSymbols_haw", "goog.i18n.DateTimeSymbols_he", "goog.i18n.DateTimeSymbols_hi", "goog.i18n.DateTimeSymbols_hr", "goog.i18n.DateTimeSymbols_hu", "goog.i18n.DateTimeSymbols_id", "goog.i18n.DateTimeSymbols_in", "goog.i18n.DateTimeSymbols_is", "goog.i18n.DateTimeSymbols_it", "goog.i18n.DateTimeSymbols_iw", 
"goog.i18n.DateTimeSymbols_ja", "goog.i18n.DateTimeSymbols_kn", "goog.i18n.DateTimeSymbols_ko", "goog.i18n.DateTimeSymbols_ln", "goog.i18n.DateTimeSymbols_lt", "goog.i18n.DateTimeSymbols_lv", "goog.i18n.DateTimeSymbols_ml", "goog.i18n.DateTimeSymbols_mr", "goog.i18n.DateTimeSymbols_ms", "goog.i18n.DateTimeSymbols_mt", "goog.i18n.DateTimeSymbols_nl", "goog.i18n.DateTimeSymbols_no", "goog.i18n.DateTimeSymbols_or", "goog.i18n.DateTimeSymbols_pl", "goog.i18n.DateTimeSymbols_pt", "goog.i18n.DateTimeSymbols_pt_BR", 
"goog.i18n.DateTimeSymbols_pt_PT", "goog.i18n.DateTimeSymbols_ro", "goog.i18n.DateTimeSymbols_ru", "goog.i18n.DateTimeSymbols_sk", "goog.i18n.DateTimeSymbols_sl", "goog.i18n.DateTimeSymbols_sq", "goog.i18n.DateTimeSymbols_sr", "goog.i18n.DateTimeSymbols_sv", "goog.i18n.DateTimeSymbols_sw", "goog.i18n.DateTimeSymbols_ta", "goog.i18n.DateTimeSymbols_te", "goog.i18n.DateTimeSymbols_th", "goog.i18n.DateTimeSymbols_tl", "goog.i18n.DateTimeSymbols_tr", "goog.i18n.DateTimeSymbols_uk", "goog.i18n.DateTimeSymbols_ur", 
"goog.i18n.DateTimeSymbols_vi", "goog.i18n.DateTimeSymbols_zh", "goog.i18n.DateTimeSymbols_zh_CN", "goog.i18n.DateTimeSymbols_zh_HK", "goog.i18n.DateTimeSymbols_zh_TW", "goog.i18n.DateTimeSymbols_zu"], []);
goog.addDependency("i18n/datetimesymbolsext.js", ["goog.i18n.DateTimeSymbolsExt", "goog.i18n.DateTimeSymbols_aa", "goog.i18n.DateTimeSymbols_aa_DJ", "goog.i18n.DateTimeSymbols_aa_ER", "goog.i18n.DateTimeSymbols_aa_ET", "goog.i18n.DateTimeSymbols_af_NA", "goog.i18n.DateTimeSymbols_af_ZA", "goog.i18n.DateTimeSymbols_agq", "goog.i18n.DateTimeSymbols_agq_CM", "goog.i18n.DateTimeSymbols_ak", "goog.i18n.DateTimeSymbols_ak_GH", "goog.i18n.DateTimeSymbols_am_ET", "goog.i18n.DateTimeSymbols_ar_AE", "goog.i18n.DateTimeSymbols_ar_BH", 
"goog.i18n.DateTimeSymbols_ar_DZ", "goog.i18n.DateTimeSymbols_ar_EG", "goog.i18n.DateTimeSymbols_ar_IQ", "goog.i18n.DateTimeSymbols_ar_JO", "goog.i18n.DateTimeSymbols_ar_KW", "goog.i18n.DateTimeSymbols_ar_LB", "goog.i18n.DateTimeSymbols_ar_LY", "goog.i18n.DateTimeSymbols_ar_MA", "goog.i18n.DateTimeSymbols_ar_OM", "goog.i18n.DateTimeSymbols_ar_QA", "goog.i18n.DateTimeSymbols_ar_SA", "goog.i18n.DateTimeSymbols_ar_SD", "goog.i18n.DateTimeSymbols_ar_SY", "goog.i18n.DateTimeSymbols_ar_TN", "goog.i18n.DateTimeSymbols_ar_YE", 
"goog.i18n.DateTimeSymbols_as", "goog.i18n.DateTimeSymbols_as_IN", "goog.i18n.DateTimeSymbols_asa", "goog.i18n.DateTimeSymbols_asa_TZ", "goog.i18n.DateTimeSymbols_az", "goog.i18n.DateTimeSymbols_az_Cyrl", "goog.i18n.DateTimeSymbols_az_Cyrl_AZ", "goog.i18n.DateTimeSymbols_az_Latn", "goog.i18n.DateTimeSymbols_az_Latn_AZ", "goog.i18n.DateTimeSymbols_bas", "goog.i18n.DateTimeSymbols_bas_CM", "goog.i18n.DateTimeSymbols_be", "goog.i18n.DateTimeSymbols_be_BY", "goog.i18n.DateTimeSymbols_bem", "goog.i18n.DateTimeSymbols_bem_ZM", 
"goog.i18n.DateTimeSymbols_bez", "goog.i18n.DateTimeSymbols_bez_TZ", "goog.i18n.DateTimeSymbols_bg_BG", "goog.i18n.DateTimeSymbols_bm", "goog.i18n.DateTimeSymbols_bm_ML", "goog.i18n.DateTimeSymbols_bn_BD", "goog.i18n.DateTimeSymbols_bn_IN", "goog.i18n.DateTimeSymbols_bo", "goog.i18n.DateTimeSymbols_bo_CN", "goog.i18n.DateTimeSymbols_bo_IN", "goog.i18n.DateTimeSymbols_br", "goog.i18n.DateTimeSymbols_br_FR", "goog.i18n.DateTimeSymbols_brx", "goog.i18n.DateTimeSymbols_brx_IN", "goog.i18n.DateTimeSymbols_bs", 
"goog.i18n.DateTimeSymbols_bs_BA", "goog.i18n.DateTimeSymbols_byn", "goog.i18n.DateTimeSymbols_byn_ER", "goog.i18n.DateTimeSymbols_ca_ES", "goog.i18n.DateTimeSymbols_cgg", "goog.i18n.DateTimeSymbols_cgg_UG", "goog.i18n.DateTimeSymbols_chr_US", "goog.i18n.DateTimeSymbols_ckb", "goog.i18n.DateTimeSymbols_ckb_Arab", "goog.i18n.DateTimeSymbols_ckb_Arab_IQ", "goog.i18n.DateTimeSymbols_ckb_Arab_IR", "goog.i18n.DateTimeSymbols_ckb_IQ", "goog.i18n.DateTimeSymbols_ckb_IR", "goog.i18n.DateTimeSymbols_ckb_Latn", 
"goog.i18n.DateTimeSymbols_ckb_Latn_IQ", "goog.i18n.DateTimeSymbols_cs_CZ", "goog.i18n.DateTimeSymbols_cy_GB", "goog.i18n.DateTimeSymbols_da_DK", "goog.i18n.DateTimeSymbols_dav", "goog.i18n.DateTimeSymbols_dav_KE", "goog.i18n.DateTimeSymbols_de_BE", "goog.i18n.DateTimeSymbols_de_DE", "goog.i18n.DateTimeSymbols_de_LI", "goog.i18n.DateTimeSymbols_de_LU", "goog.i18n.DateTimeSymbols_dje", "goog.i18n.DateTimeSymbols_dje_NE", "goog.i18n.DateTimeSymbols_dua", "goog.i18n.DateTimeSymbols_dua_CM", "goog.i18n.DateTimeSymbols_dyo", 
"goog.i18n.DateTimeSymbols_dyo_SN", "goog.i18n.DateTimeSymbols_dz", "goog.i18n.DateTimeSymbols_dz_BT", "goog.i18n.DateTimeSymbols_ebu", "goog.i18n.DateTimeSymbols_ebu_KE", "goog.i18n.DateTimeSymbols_ee", "goog.i18n.DateTimeSymbols_ee_GH", "goog.i18n.DateTimeSymbols_ee_TG", "goog.i18n.DateTimeSymbols_el_CY", "goog.i18n.DateTimeSymbols_el_GR", "goog.i18n.DateTimeSymbols_en_AS", "goog.i18n.DateTimeSymbols_en_BB", "goog.i18n.DateTimeSymbols_en_BE", "goog.i18n.DateTimeSymbols_en_BM", "goog.i18n.DateTimeSymbols_en_BW", 
"goog.i18n.DateTimeSymbols_en_BZ", "goog.i18n.DateTimeSymbols_en_CA", "goog.i18n.DateTimeSymbols_en_Dsrt", "goog.i18n.DateTimeSymbols_en_Dsrt_US", "goog.i18n.DateTimeSymbols_en_GU", "goog.i18n.DateTimeSymbols_en_GY", "goog.i18n.DateTimeSymbols_en_HK", "goog.i18n.DateTimeSymbols_en_JM", "goog.i18n.DateTimeSymbols_en_MH", "goog.i18n.DateTimeSymbols_en_MP", "goog.i18n.DateTimeSymbols_en_MT", "goog.i18n.DateTimeSymbols_en_MU", "goog.i18n.DateTimeSymbols_en_NA", "goog.i18n.DateTimeSymbols_en_NZ", "goog.i18n.DateTimeSymbols_en_PH", 
"goog.i18n.DateTimeSymbols_en_PK", "goog.i18n.DateTimeSymbols_en_TT", "goog.i18n.DateTimeSymbols_en_UM", "goog.i18n.DateTimeSymbols_en_VI", "goog.i18n.DateTimeSymbols_en_ZW", "goog.i18n.DateTimeSymbols_eo", "goog.i18n.DateTimeSymbols_es_AR", "goog.i18n.DateTimeSymbols_es_BO", "goog.i18n.DateTimeSymbols_es_CL", "goog.i18n.DateTimeSymbols_es_CO", "goog.i18n.DateTimeSymbols_es_CR", "goog.i18n.DateTimeSymbols_es_DO", "goog.i18n.DateTimeSymbols_es_EC", "goog.i18n.DateTimeSymbols_es_ES", "goog.i18n.DateTimeSymbols_es_GQ", 
"goog.i18n.DateTimeSymbols_es_GT", "goog.i18n.DateTimeSymbols_es_HN", "goog.i18n.DateTimeSymbols_es_MX", "goog.i18n.DateTimeSymbols_es_NI", "goog.i18n.DateTimeSymbols_es_PA", "goog.i18n.DateTimeSymbols_es_PE", "goog.i18n.DateTimeSymbols_es_PR", "goog.i18n.DateTimeSymbols_es_PY", "goog.i18n.DateTimeSymbols_es_SV", "goog.i18n.DateTimeSymbols_es_US", "goog.i18n.DateTimeSymbols_es_UY", "goog.i18n.DateTimeSymbols_es_VE", "goog.i18n.DateTimeSymbols_et_EE", "goog.i18n.DateTimeSymbols_eu_ES", "goog.i18n.DateTimeSymbols_ewo", 
"goog.i18n.DateTimeSymbols_ewo_CM", "goog.i18n.DateTimeSymbols_fa_AF", "goog.i18n.DateTimeSymbols_fa_IR", "goog.i18n.DateTimeSymbols_ff", "goog.i18n.DateTimeSymbols_ff_SN", "goog.i18n.DateTimeSymbols_fi_FI", "goog.i18n.DateTimeSymbols_fil_PH", "goog.i18n.DateTimeSymbols_fo", "goog.i18n.DateTimeSymbols_fo_FO", "goog.i18n.DateTimeSymbols_fr_BE", "goog.i18n.DateTimeSymbols_fr_BF", "goog.i18n.DateTimeSymbols_fr_BI", "goog.i18n.DateTimeSymbols_fr_BJ", "goog.i18n.DateTimeSymbols_fr_BL", "goog.i18n.DateTimeSymbols_fr_CD", 
"goog.i18n.DateTimeSymbols_fr_CF", "goog.i18n.DateTimeSymbols_fr_CG", "goog.i18n.DateTimeSymbols_fr_CH", "goog.i18n.DateTimeSymbols_fr_CI", "goog.i18n.DateTimeSymbols_fr_CM", "goog.i18n.DateTimeSymbols_fr_DJ", "goog.i18n.DateTimeSymbols_fr_FR", "goog.i18n.DateTimeSymbols_fr_GA", "goog.i18n.DateTimeSymbols_fr_GF", "goog.i18n.DateTimeSymbols_fr_GN", "goog.i18n.DateTimeSymbols_fr_GP", "goog.i18n.DateTimeSymbols_fr_GQ", "goog.i18n.DateTimeSymbols_fr_KM", "goog.i18n.DateTimeSymbols_fr_LU", "goog.i18n.DateTimeSymbols_fr_MC", 
"goog.i18n.DateTimeSymbols_fr_MF", "goog.i18n.DateTimeSymbols_fr_MG", "goog.i18n.DateTimeSymbols_fr_ML", "goog.i18n.DateTimeSymbols_fr_MQ", "goog.i18n.DateTimeSymbols_fr_NE", "goog.i18n.DateTimeSymbols_fr_RE", "goog.i18n.DateTimeSymbols_fr_RW", "goog.i18n.DateTimeSymbols_fr_SN", "goog.i18n.DateTimeSymbols_fr_TD", "goog.i18n.DateTimeSymbols_fr_TG", "goog.i18n.DateTimeSymbols_fr_YT", "goog.i18n.DateTimeSymbols_fur", "goog.i18n.DateTimeSymbols_fur_IT", "goog.i18n.DateTimeSymbols_ga", "goog.i18n.DateTimeSymbols_ga_IE", 
"goog.i18n.DateTimeSymbols_gl_ES", "goog.i18n.DateTimeSymbols_gsw_CH", "goog.i18n.DateTimeSymbols_gu_IN", "goog.i18n.DateTimeSymbols_guz", "goog.i18n.DateTimeSymbols_guz_KE", "goog.i18n.DateTimeSymbols_gv", "goog.i18n.DateTimeSymbols_gv_GB", "goog.i18n.DateTimeSymbols_ha", "goog.i18n.DateTimeSymbols_ha_Latn", "goog.i18n.DateTimeSymbols_ha_Latn_GH", "goog.i18n.DateTimeSymbols_ha_Latn_NE", "goog.i18n.DateTimeSymbols_ha_Latn_NG", "goog.i18n.DateTimeSymbols_haw_US", "goog.i18n.DateTimeSymbols_he_IL", 
"goog.i18n.DateTimeSymbols_hi_IN", "goog.i18n.DateTimeSymbols_hr_HR", "goog.i18n.DateTimeSymbols_hu_HU", "goog.i18n.DateTimeSymbols_hy", "goog.i18n.DateTimeSymbols_hy_AM", "goog.i18n.DateTimeSymbols_ia", "goog.i18n.DateTimeSymbols_id_ID", "goog.i18n.DateTimeSymbols_ig", "goog.i18n.DateTimeSymbols_ig_NG", "goog.i18n.DateTimeSymbols_ii", "goog.i18n.DateTimeSymbols_ii_CN", "goog.i18n.DateTimeSymbols_is_IS", "goog.i18n.DateTimeSymbols_it_CH", "goog.i18n.DateTimeSymbols_it_IT", "goog.i18n.DateTimeSymbols_ja_JP", 
"goog.i18n.DateTimeSymbols_jmc", "goog.i18n.DateTimeSymbols_jmc_TZ", "goog.i18n.DateTimeSymbols_ka", "goog.i18n.DateTimeSymbols_ka_GE", "goog.i18n.DateTimeSymbols_kab", "goog.i18n.DateTimeSymbols_kab_DZ", "goog.i18n.DateTimeSymbols_kam", "goog.i18n.DateTimeSymbols_kam_KE", "goog.i18n.DateTimeSymbols_kde", "goog.i18n.DateTimeSymbols_kde_TZ", "goog.i18n.DateTimeSymbols_kea", "goog.i18n.DateTimeSymbols_kea_CV", "goog.i18n.DateTimeSymbols_khq", "goog.i18n.DateTimeSymbols_khq_ML", "goog.i18n.DateTimeSymbols_ki", 
"goog.i18n.DateTimeSymbols_ki_KE", "goog.i18n.DateTimeSymbols_kk", "goog.i18n.DateTimeSymbols_kk_Cyrl", "goog.i18n.DateTimeSymbols_kk_Cyrl_KZ", "goog.i18n.DateTimeSymbols_kl", "goog.i18n.DateTimeSymbols_kl_GL", "goog.i18n.DateTimeSymbols_kln", "goog.i18n.DateTimeSymbols_kln_KE", "goog.i18n.DateTimeSymbols_km", "goog.i18n.DateTimeSymbols_km_KH", "goog.i18n.DateTimeSymbols_kn_IN", "goog.i18n.DateTimeSymbols_ko_KR", "goog.i18n.DateTimeSymbols_kok", "goog.i18n.DateTimeSymbols_kok_IN", "goog.i18n.DateTimeSymbols_ksb", 
"goog.i18n.DateTimeSymbols_ksb_TZ", "goog.i18n.DateTimeSymbols_ksf", "goog.i18n.DateTimeSymbols_ksf_CM", "goog.i18n.DateTimeSymbols_ksh", "goog.i18n.DateTimeSymbols_ksh_DE", "goog.i18n.DateTimeSymbols_ku", "goog.i18n.DateTimeSymbols_kw", "goog.i18n.DateTimeSymbols_kw_GB", "goog.i18n.DateTimeSymbols_lag", "goog.i18n.DateTimeSymbols_lag_TZ", "goog.i18n.DateTimeSymbols_lg", "goog.i18n.DateTimeSymbols_lg_UG", "goog.i18n.DateTimeSymbols_ln_CD", "goog.i18n.DateTimeSymbols_ln_CG", "goog.i18n.DateTimeSymbols_lo", 
"goog.i18n.DateTimeSymbols_lo_LA", "goog.i18n.DateTimeSymbols_lt_LT", "goog.i18n.DateTimeSymbols_lu", "goog.i18n.DateTimeSymbols_lu_CD", "goog.i18n.DateTimeSymbols_luo", "goog.i18n.DateTimeSymbols_luo_KE", "goog.i18n.DateTimeSymbols_luy", "goog.i18n.DateTimeSymbols_luy_KE", "goog.i18n.DateTimeSymbols_lv_LV", "goog.i18n.DateTimeSymbols_mas", "goog.i18n.DateTimeSymbols_mas_KE", "goog.i18n.DateTimeSymbols_mas_TZ", "goog.i18n.DateTimeSymbols_mer", "goog.i18n.DateTimeSymbols_mer_KE", "goog.i18n.DateTimeSymbols_mfe", 
"goog.i18n.DateTimeSymbols_mfe_MU", "goog.i18n.DateTimeSymbols_mg", "goog.i18n.DateTimeSymbols_mg_MG", "goog.i18n.DateTimeSymbols_mgh", "goog.i18n.DateTimeSymbols_mgh_MZ", "goog.i18n.DateTimeSymbols_mk", "goog.i18n.DateTimeSymbols_mk_MK", "goog.i18n.DateTimeSymbols_ml_IN", "goog.i18n.DateTimeSymbols_mr_IN", "goog.i18n.DateTimeSymbols_ms_BN", "goog.i18n.DateTimeSymbols_ms_MY", "goog.i18n.DateTimeSymbols_mt_MT", "goog.i18n.DateTimeSymbols_mua", "goog.i18n.DateTimeSymbols_mua_CM", "goog.i18n.DateTimeSymbols_my", 
"goog.i18n.DateTimeSymbols_my_MM", "goog.i18n.DateTimeSymbols_naq", "goog.i18n.DateTimeSymbols_naq_NA", "goog.i18n.DateTimeSymbols_nb", "goog.i18n.DateTimeSymbols_nb_NO", "goog.i18n.DateTimeSymbols_nd", "goog.i18n.DateTimeSymbols_nd_ZW", "goog.i18n.DateTimeSymbols_ne", "goog.i18n.DateTimeSymbols_ne_IN", "goog.i18n.DateTimeSymbols_ne_NP", "goog.i18n.DateTimeSymbols_nl_AW", "goog.i18n.DateTimeSymbols_nl_BE", "goog.i18n.DateTimeSymbols_nl_NL", "goog.i18n.DateTimeSymbols_nmg", "goog.i18n.DateTimeSymbols_nmg_CM", 
"goog.i18n.DateTimeSymbols_nn", "goog.i18n.DateTimeSymbols_nn_NO", "goog.i18n.DateTimeSymbols_nr", "goog.i18n.DateTimeSymbols_nr_ZA", "goog.i18n.DateTimeSymbols_nso", "goog.i18n.DateTimeSymbols_nso_ZA", "goog.i18n.DateTimeSymbols_nus", "goog.i18n.DateTimeSymbols_nus_SD", "goog.i18n.DateTimeSymbols_nyn", "goog.i18n.DateTimeSymbols_nyn_UG", "goog.i18n.DateTimeSymbols_om", "goog.i18n.DateTimeSymbols_om_ET", "goog.i18n.DateTimeSymbols_om_KE", "goog.i18n.DateTimeSymbols_or_IN", "goog.i18n.DateTimeSymbols_pa", 
"goog.i18n.DateTimeSymbols_pa_Arab", "goog.i18n.DateTimeSymbols_pa_Arab_PK", "goog.i18n.DateTimeSymbols_pa_Guru", "goog.i18n.DateTimeSymbols_pa_Guru_IN", "goog.i18n.DateTimeSymbols_pl_PL", "goog.i18n.DateTimeSymbols_ps", "goog.i18n.DateTimeSymbols_ps_AF", "goog.i18n.DateTimeSymbols_pt_AO", "goog.i18n.DateTimeSymbols_pt_GW", "goog.i18n.DateTimeSymbols_pt_MZ", "goog.i18n.DateTimeSymbols_pt_ST", "goog.i18n.DateTimeSymbols_rm", "goog.i18n.DateTimeSymbols_rm_CH", "goog.i18n.DateTimeSymbols_rn", "goog.i18n.DateTimeSymbols_rn_BI", 
"goog.i18n.DateTimeSymbols_ro_MD", "goog.i18n.DateTimeSymbols_ro_RO", "goog.i18n.DateTimeSymbols_rof", "goog.i18n.DateTimeSymbols_rof_TZ", "goog.i18n.DateTimeSymbols_ru_MD", "goog.i18n.DateTimeSymbols_ru_RU", "goog.i18n.DateTimeSymbols_ru_UA", "goog.i18n.DateTimeSymbols_rw", "goog.i18n.DateTimeSymbols_rw_RW", "goog.i18n.DateTimeSymbols_rwk", "goog.i18n.DateTimeSymbols_rwk_TZ", "goog.i18n.DateTimeSymbols_sah", "goog.i18n.DateTimeSymbols_sah_RU", "goog.i18n.DateTimeSymbols_saq", "goog.i18n.DateTimeSymbols_saq_KE", 
"goog.i18n.DateTimeSymbols_sbp", "goog.i18n.DateTimeSymbols_sbp_TZ", "goog.i18n.DateTimeSymbols_se", "goog.i18n.DateTimeSymbols_se_FI", "goog.i18n.DateTimeSymbols_se_NO", "goog.i18n.DateTimeSymbols_seh", "goog.i18n.DateTimeSymbols_seh_MZ", "goog.i18n.DateTimeSymbols_ses", "goog.i18n.DateTimeSymbols_ses_ML", "goog.i18n.DateTimeSymbols_sg", "goog.i18n.DateTimeSymbols_sg_CF", "goog.i18n.DateTimeSymbols_shi", "goog.i18n.DateTimeSymbols_shi_Latn", "goog.i18n.DateTimeSymbols_shi_Latn_MA", "goog.i18n.DateTimeSymbols_shi_Tfng", 
"goog.i18n.DateTimeSymbols_shi_Tfng_MA", "goog.i18n.DateTimeSymbols_si", "goog.i18n.DateTimeSymbols_si_LK", "goog.i18n.DateTimeSymbols_sk_SK", "goog.i18n.DateTimeSymbols_sl_SI", "goog.i18n.DateTimeSymbols_sn", "goog.i18n.DateTimeSymbols_sn_ZW", "goog.i18n.DateTimeSymbols_so", "goog.i18n.DateTimeSymbols_so_DJ", "goog.i18n.DateTimeSymbols_so_ET", "goog.i18n.DateTimeSymbols_so_KE", "goog.i18n.DateTimeSymbols_so_SO", "goog.i18n.DateTimeSymbols_sq_AL", "goog.i18n.DateTimeSymbols_sr_Cyrl", "goog.i18n.DateTimeSymbols_sr_Cyrl_BA", 
"goog.i18n.DateTimeSymbols_sr_Cyrl_ME", "goog.i18n.DateTimeSymbols_sr_Cyrl_RS", "goog.i18n.DateTimeSymbols_sr_Latn", "goog.i18n.DateTimeSymbols_sr_Latn_BA", "goog.i18n.DateTimeSymbols_sr_Latn_ME", "goog.i18n.DateTimeSymbols_sr_Latn_RS", "goog.i18n.DateTimeSymbols_ss", "goog.i18n.DateTimeSymbols_ss_SZ", "goog.i18n.DateTimeSymbols_ss_ZA", "goog.i18n.DateTimeSymbols_ssy", "goog.i18n.DateTimeSymbols_ssy_ER", "goog.i18n.DateTimeSymbols_st", "goog.i18n.DateTimeSymbols_st_LS", "goog.i18n.DateTimeSymbols_st_ZA", 
"goog.i18n.DateTimeSymbols_sv_FI", "goog.i18n.DateTimeSymbols_sv_SE", "goog.i18n.DateTimeSymbols_sw_KE", "goog.i18n.DateTimeSymbols_sw_TZ", "goog.i18n.DateTimeSymbols_swc", "goog.i18n.DateTimeSymbols_swc_CD", "goog.i18n.DateTimeSymbols_ta_IN", "goog.i18n.DateTimeSymbols_ta_LK", "goog.i18n.DateTimeSymbols_te_IN", "goog.i18n.DateTimeSymbols_teo", "goog.i18n.DateTimeSymbols_teo_KE", "goog.i18n.DateTimeSymbols_teo_UG", "goog.i18n.DateTimeSymbols_tg", "goog.i18n.DateTimeSymbols_tg_Cyrl", "goog.i18n.DateTimeSymbols_tg_Cyrl_TJ", 
"goog.i18n.DateTimeSymbols_th_TH", "goog.i18n.DateTimeSymbols_ti", "goog.i18n.DateTimeSymbols_ti_ER", "goog.i18n.DateTimeSymbols_ti_ET", "goog.i18n.DateTimeSymbols_tig", "goog.i18n.DateTimeSymbols_tig_ER", "goog.i18n.DateTimeSymbols_tn", "goog.i18n.DateTimeSymbols_tn_ZA", "goog.i18n.DateTimeSymbols_to", "goog.i18n.DateTimeSymbols_to_TO", "goog.i18n.DateTimeSymbols_tr_TR", "goog.i18n.DateTimeSymbols_ts", "goog.i18n.DateTimeSymbols_ts_ZA", "goog.i18n.DateTimeSymbols_twq", "goog.i18n.DateTimeSymbols_twq_NE", 
"goog.i18n.DateTimeSymbols_tzm", "goog.i18n.DateTimeSymbols_tzm_Latn", "goog.i18n.DateTimeSymbols_tzm_Latn_MA", "goog.i18n.DateTimeSymbols_uk_UA", "goog.i18n.DateTimeSymbols_ur_IN", "goog.i18n.DateTimeSymbols_ur_PK", "goog.i18n.DateTimeSymbols_uz", "goog.i18n.DateTimeSymbols_uz_Arab", "goog.i18n.DateTimeSymbols_uz_Arab_AF", "goog.i18n.DateTimeSymbols_uz_Cyrl", "goog.i18n.DateTimeSymbols_uz_Cyrl_UZ", "goog.i18n.DateTimeSymbols_uz_Latn", "goog.i18n.DateTimeSymbols_uz_Latn_UZ", "goog.i18n.DateTimeSymbols_vai", 
"goog.i18n.DateTimeSymbols_vai_Latn", "goog.i18n.DateTimeSymbols_vai_Latn_LR", "goog.i18n.DateTimeSymbols_vai_Vaii", "goog.i18n.DateTimeSymbols_vai_Vaii_LR", "goog.i18n.DateTimeSymbols_ve", "goog.i18n.DateTimeSymbols_ve_ZA", "goog.i18n.DateTimeSymbols_vi_VN", "goog.i18n.DateTimeSymbols_vun", "goog.i18n.DateTimeSymbols_vun_TZ", "goog.i18n.DateTimeSymbols_wae", "goog.i18n.DateTimeSymbols_wae_CH", "goog.i18n.DateTimeSymbols_wal", "goog.i18n.DateTimeSymbols_wal_ET", "goog.i18n.DateTimeSymbols_xh", "goog.i18n.DateTimeSymbols_xh_ZA", 
"goog.i18n.DateTimeSymbols_xog", "goog.i18n.DateTimeSymbols_xog_UG", "goog.i18n.DateTimeSymbols_yav", "goog.i18n.DateTimeSymbols_yav_CM", "goog.i18n.DateTimeSymbols_yo", "goog.i18n.DateTimeSymbols_yo_NG", "goog.i18n.DateTimeSymbols_zh_Hans", "goog.i18n.DateTimeSymbols_zh_Hans_CN", "goog.i18n.DateTimeSymbols_zh_Hans_HK", "goog.i18n.DateTimeSymbols_zh_Hans_MO", "goog.i18n.DateTimeSymbols_zh_Hans_SG", "goog.i18n.DateTimeSymbols_zh_Hant", "goog.i18n.DateTimeSymbols_zh_Hant_HK", "goog.i18n.DateTimeSymbols_zh_Hant_MO", 
"goog.i18n.DateTimeSymbols_zh_Hant_TW", "goog.i18n.DateTimeSymbols_zu_ZA"], ["goog.i18n.DateTimeSymbols"]);
goog.addDependency("i18n/graphemebreak.js", ["goog.i18n.GraphemeBreak"], ["goog.structs.InversionMap"]);
goog.addDependency("i18n/messageformat.js", ["goog.i18n.MessageFormat"], ["goog.asserts", "goog.i18n.NumberFormat", "goog.i18n.ordinalRules", "goog.i18n.pluralRules"]);
goog.addDependency("i18n/mime.js", ["goog.i18n.mime", "goog.i18n.mime.encode"], ["goog.array"]);
goog.addDependency("i18n/numberformat.js", ["goog.i18n.NumberFormat", "goog.i18n.NumberFormat.CurrencyStyle", "goog.i18n.NumberFormat.Format"], ["goog.i18n.CompactNumberFormatSymbols", "goog.i18n.NumberFormatSymbols", "goog.i18n.currency"]);
goog.addDependency("i18n/numberformatsymbols.js", ["goog.i18n.NumberFormatSymbols", "goog.i18n.NumberFormatSymbols_af", "goog.i18n.NumberFormatSymbols_af_ZA", "goog.i18n.NumberFormatSymbols_am", "goog.i18n.NumberFormatSymbols_am_ET", "goog.i18n.NumberFormatSymbols_ar", "goog.i18n.NumberFormatSymbols_ar_001", "goog.i18n.NumberFormatSymbols_ar_EG", "goog.i18n.NumberFormatSymbols_bg", "goog.i18n.NumberFormatSymbols_bg_BG", "goog.i18n.NumberFormatSymbols_bn", "goog.i18n.NumberFormatSymbols_bn_BD", "goog.i18n.NumberFormatSymbols_ca", 
"goog.i18n.NumberFormatSymbols_ca_AD", "goog.i18n.NumberFormatSymbols_ca_ES", "goog.i18n.NumberFormatSymbols_cs", "goog.i18n.NumberFormatSymbols_cs_CZ", "goog.i18n.NumberFormatSymbols_da", "goog.i18n.NumberFormatSymbols_da_DK", "goog.i18n.NumberFormatSymbols_de", "goog.i18n.NumberFormatSymbols_de_AT", "goog.i18n.NumberFormatSymbols_de_BE", "goog.i18n.NumberFormatSymbols_de_CH", "goog.i18n.NumberFormatSymbols_de_DE", "goog.i18n.NumberFormatSymbols_de_LU", "goog.i18n.NumberFormatSymbols_el", "goog.i18n.NumberFormatSymbols_el_GR", 
"goog.i18n.NumberFormatSymbols_en", "goog.i18n.NumberFormatSymbols_en_AS", "goog.i18n.NumberFormatSymbols_en_AU", "goog.i18n.NumberFormatSymbols_en_Dsrt_US", "goog.i18n.NumberFormatSymbols_en_FM", "goog.i18n.NumberFormatSymbols_en_GB", "goog.i18n.NumberFormatSymbols_en_GU", "goog.i18n.NumberFormatSymbols_en_IE", "goog.i18n.NumberFormatSymbols_en_IN", "goog.i18n.NumberFormatSymbols_en_MH", "goog.i18n.NumberFormatSymbols_en_MP", "goog.i18n.NumberFormatSymbols_en_PR", "goog.i18n.NumberFormatSymbols_en_PW", 
"goog.i18n.NumberFormatSymbols_en_SG", "goog.i18n.NumberFormatSymbols_en_TC", "goog.i18n.NumberFormatSymbols_en_UM", "goog.i18n.NumberFormatSymbols_en_US", "goog.i18n.NumberFormatSymbols_en_VG", "goog.i18n.NumberFormatSymbols_en_VI", "goog.i18n.NumberFormatSymbols_en_ZA", "goog.i18n.NumberFormatSymbols_es", "goog.i18n.NumberFormatSymbols_es_419", "goog.i18n.NumberFormatSymbols_es_EA", "goog.i18n.NumberFormatSymbols_es_ES", "goog.i18n.NumberFormatSymbols_es_IC", "goog.i18n.NumberFormatSymbols_et", 
"goog.i18n.NumberFormatSymbols_et_EE", "goog.i18n.NumberFormatSymbols_eu", "goog.i18n.NumberFormatSymbols_eu_ES", "goog.i18n.NumberFormatSymbols_fa", "goog.i18n.NumberFormatSymbols_fa_IR", "goog.i18n.NumberFormatSymbols_fi", "goog.i18n.NumberFormatSymbols_fi_FI", "goog.i18n.NumberFormatSymbols_fil", "goog.i18n.NumberFormatSymbols_fil_PH", "goog.i18n.NumberFormatSymbols_fr", "goog.i18n.NumberFormatSymbols_fr_BL", "goog.i18n.NumberFormatSymbols_fr_CA", "goog.i18n.NumberFormatSymbols_fr_FR", "goog.i18n.NumberFormatSymbols_fr_GF", 
"goog.i18n.NumberFormatSymbols_fr_GP", "goog.i18n.NumberFormatSymbols_fr_MC", "goog.i18n.NumberFormatSymbols_fr_MF", "goog.i18n.NumberFormatSymbols_fr_MQ", "goog.i18n.NumberFormatSymbols_fr_RE", "goog.i18n.NumberFormatSymbols_fr_YT", "goog.i18n.NumberFormatSymbols_gl", "goog.i18n.NumberFormatSymbols_gl_ES", "goog.i18n.NumberFormatSymbols_gsw", "goog.i18n.NumberFormatSymbols_gsw_CH", "goog.i18n.NumberFormatSymbols_gu", "goog.i18n.NumberFormatSymbols_gu_IN", "goog.i18n.NumberFormatSymbols_he", "goog.i18n.NumberFormatSymbols_he_IL", 
"goog.i18n.NumberFormatSymbols_hi", "goog.i18n.NumberFormatSymbols_hi_IN", "goog.i18n.NumberFormatSymbols_hr", "goog.i18n.NumberFormatSymbols_hr_HR", "goog.i18n.NumberFormatSymbols_hu", "goog.i18n.NumberFormatSymbols_hu_HU", "goog.i18n.NumberFormatSymbols_id", "goog.i18n.NumberFormatSymbols_id_ID", "goog.i18n.NumberFormatSymbols_in", "goog.i18n.NumberFormatSymbols_is", "goog.i18n.NumberFormatSymbols_is_IS", "goog.i18n.NumberFormatSymbols_it", "goog.i18n.NumberFormatSymbols_it_IT", "goog.i18n.NumberFormatSymbols_it_SM", 
"goog.i18n.NumberFormatSymbols_iw", "goog.i18n.NumberFormatSymbols_ja", "goog.i18n.NumberFormatSymbols_ja_JP", "goog.i18n.NumberFormatSymbols_kn", "goog.i18n.NumberFormatSymbols_kn_IN", "goog.i18n.NumberFormatSymbols_ko", "goog.i18n.NumberFormatSymbols_ko_KR", "goog.i18n.NumberFormatSymbols_ln", "goog.i18n.NumberFormatSymbols_ln_CD", "goog.i18n.NumberFormatSymbols_lt", "goog.i18n.NumberFormatSymbols_lt_LT", "goog.i18n.NumberFormatSymbols_lv", "goog.i18n.NumberFormatSymbols_lv_LV", "goog.i18n.NumberFormatSymbols_ml", 
"goog.i18n.NumberFormatSymbols_ml_IN", "goog.i18n.NumberFormatSymbols_mr", "goog.i18n.NumberFormatSymbols_mr_IN", "goog.i18n.NumberFormatSymbols_ms", "goog.i18n.NumberFormatSymbols_ms_MY", "goog.i18n.NumberFormatSymbols_mt", "goog.i18n.NumberFormatSymbols_mt_MT", "goog.i18n.NumberFormatSymbols_nl", "goog.i18n.NumberFormatSymbols_nl_CW", "goog.i18n.NumberFormatSymbols_nl_NL", "goog.i18n.NumberFormatSymbols_nl_SX", "goog.i18n.NumberFormatSymbols_no", "goog.i18n.NumberFormatSymbols_or", "goog.i18n.NumberFormatSymbols_or_IN", 
"goog.i18n.NumberFormatSymbols_pl", "goog.i18n.NumberFormatSymbols_pl_PL", "goog.i18n.NumberFormatSymbols_pt", "goog.i18n.NumberFormatSymbols_pt_BR", "goog.i18n.NumberFormatSymbols_pt_PT", "goog.i18n.NumberFormatSymbols_ro", "goog.i18n.NumberFormatSymbols_ro_RO", "goog.i18n.NumberFormatSymbols_ru", "goog.i18n.NumberFormatSymbols_ru_RU", "goog.i18n.NumberFormatSymbols_sk", "goog.i18n.NumberFormatSymbols_sk_SK", "goog.i18n.NumberFormatSymbols_sl", "goog.i18n.NumberFormatSymbols_sl_SI", "goog.i18n.NumberFormatSymbols_sq", 
"goog.i18n.NumberFormatSymbols_sq_AL", "goog.i18n.NumberFormatSymbols_sr", "goog.i18n.NumberFormatSymbols_sr_Cyrl_RS", "goog.i18n.NumberFormatSymbols_sr_Latn_RS", "goog.i18n.NumberFormatSymbols_sv", "goog.i18n.NumberFormatSymbols_sv_SE", "goog.i18n.NumberFormatSymbols_sw", "goog.i18n.NumberFormatSymbols_sw_TZ", "goog.i18n.NumberFormatSymbols_ta", "goog.i18n.NumberFormatSymbols_ta_IN", "goog.i18n.NumberFormatSymbols_te", "goog.i18n.NumberFormatSymbols_te_IN", "goog.i18n.NumberFormatSymbols_th", "goog.i18n.NumberFormatSymbols_th_TH", 
"goog.i18n.NumberFormatSymbols_tl", "goog.i18n.NumberFormatSymbols_tr", "goog.i18n.NumberFormatSymbols_tr_TR", "goog.i18n.NumberFormatSymbols_uk", "goog.i18n.NumberFormatSymbols_uk_UA", "goog.i18n.NumberFormatSymbols_ur", "goog.i18n.NumberFormatSymbols_ur_PK", "goog.i18n.NumberFormatSymbols_vi", "goog.i18n.NumberFormatSymbols_vi_VN", "goog.i18n.NumberFormatSymbols_zh", "goog.i18n.NumberFormatSymbols_zh_CN", "goog.i18n.NumberFormatSymbols_zh_HK", "goog.i18n.NumberFormatSymbols_zh_Hans_CN", "goog.i18n.NumberFormatSymbols_zh_TW", 
"goog.i18n.NumberFormatSymbols_zu", "goog.i18n.NumberFormatSymbols_zu_ZA"], []);
goog.addDependency("i18n/numberformatsymbolsext.js", ["goog.i18n.NumberFormatSymbolsExt", "goog.i18n.NumberFormatSymbols_aa", "goog.i18n.NumberFormatSymbols_aa_DJ", "goog.i18n.NumberFormatSymbols_aa_ER", "goog.i18n.NumberFormatSymbols_aa_ET", "goog.i18n.NumberFormatSymbols_af_NA", "goog.i18n.NumberFormatSymbols_agq", "goog.i18n.NumberFormatSymbols_agq_CM", "goog.i18n.NumberFormatSymbols_ak", "goog.i18n.NumberFormatSymbols_ak_GH", "goog.i18n.NumberFormatSymbols_ar_AE", "goog.i18n.NumberFormatSymbols_ar_BH", 
"goog.i18n.NumberFormatSymbols_ar_DJ", "goog.i18n.NumberFormatSymbols_ar_DZ", "goog.i18n.NumberFormatSymbols_ar_EH", "goog.i18n.NumberFormatSymbols_ar_ER", "goog.i18n.NumberFormatSymbols_ar_IL", "goog.i18n.NumberFormatSymbols_ar_IQ", "goog.i18n.NumberFormatSymbols_ar_JO", "goog.i18n.NumberFormatSymbols_ar_KM", "goog.i18n.NumberFormatSymbols_ar_KW", "goog.i18n.NumberFormatSymbols_ar_LB", "goog.i18n.NumberFormatSymbols_ar_LY", "goog.i18n.NumberFormatSymbols_ar_MA", "goog.i18n.NumberFormatSymbols_ar_MR", 
"goog.i18n.NumberFormatSymbols_ar_OM", "goog.i18n.NumberFormatSymbols_ar_PS", "goog.i18n.NumberFormatSymbols_ar_QA", "goog.i18n.NumberFormatSymbols_ar_SA", "goog.i18n.NumberFormatSymbols_ar_SD", "goog.i18n.NumberFormatSymbols_ar_SO", "goog.i18n.NumberFormatSymbols_ar_SY", "goog.i18n.NumberFormatSymbols_ar_TD", "goog.i18n.NumberFormatSymbols_ar_TN", "goog.i18n.NumberFormatSymbols_ar_YE", "goog.i18n.NumberFormatSymbols_as", "goog.i18n.NumberFormatSymbols_as_IN", "goog.i18n.NumberFormatSymbols_asa", 
"goog.i18n.NumberFormatSymbols_asa_TZ", "goog.i18n.NumberFormatSymbols_ast", "goog.i18n.NumberFormatSymbols_ast_ES", "goog.i18n.NumberFormatSymbols_az", "goog.i18n.NumberFormatSymbols_az_Cyrl", "goog.i18n.NumberFormatSymbols_az_Cyrl_AZ", "goog.i18n.NumberFormatSymbols_az_Latn", "goog.i18n.NumberFormatSymbols_az_Latn_AZ", "goog.i18n.NumberFormatSymbols_bas", "goog.i18n.NumberFormatSymbols_bas_CM", "goog.i18n.NumberFormatSymbols_be", "goog.i18n.NumberFormatSymbols_be_BY", "goog.i18n.NumberFormatSymbols_bem", 
"goog.i18n.NumberFormatSymbols_bem_ZM", "goog.i18n.NumberFormatSymbols_bez", "goog.i18n.NumberFormatSymbols_bez_TZ", "goog.i18n.NumberFormatSymbols_bm", "goog.i18n.NumberFormatSymbols_bm_ML", "goog.i18n.NumberFormatSymbols_bn_IN", "goog.i18n.NumberFormatSymbols_bo", "goog.i18n.NumberFormatSymbols_bo_CN", "goog.i18n.NumberFormatSymbols_bo_IN", "goog.i18n.NumberFormatSymbols_br", "goog.i18n.NumberFormatSymbols_br_FR", "goog.i18n.NumberFormatSymbols_brx", "goog.i18n.NumberFormatSymbols_brx_IN", "goog.i18n.NumberFormatSymbols_bs", 
"goog.i18n.NumberFormatSymbols_bs_Cyrl", "goog.i18n.NumberFormatSymbols_bs_Cyrl_BA", "goog.i18n.NumberFormatSymbols_bs_Latn", "goog.i18n.NumberFormatSymbols_bs_Latn_BA", "goog.i18n.NumberFormatSymbols_byn", "goog.i18n.NumberFormatSymbols_byn_ER", "goog.i18n.NumberFormatSymbols_cgg", "goog.i18n.NumberFormatSymbols_cgg_UG", "goog.i18n.NumberFormatSymbols_chr", "goog.i18n.NumberFormatSymbols_chr_US", "goog.i18n.NumberFormatSymbols_ckb", "goog.i18n.NumberFormatSymbols_ckb_Arab", "goog.i18n.NumberFormatSymbols_ckb_Arab_IQ", 
"goog.i18n.NumberFormatSymbols_ckb_Arab_IR", "goog.i18n.NumberFormatSymbols_ckb_IQ", "goog.i18n.NumberFormatSymbols_ckb_IR", "goog.i18n.NumberFormatSymbols_ckb_Latn", "goog.i18n.NumberFormatSymbols_ckb_Latn_IQ", "goog.i18n.NumberFormatSymbols_cy", "goog.i18n.NumberFormatSymbols_cy_GB", "goog.i18n.NumberFormatSymbols_dav", "goog.i18n.NumberFormatSymbols_dav_KE", "goog.i18n.NumberFormatSymbols_de_LI", "goog.i18n.NumberFormatSymbols_dje", "goog.i18n.NumberFormatSymbols_dje_NE", "goog.i18n.NumberFormatSymbols_dua", 
"goog.i18n.NumberFormatSymbols_dua_CM", "goog.i18n.NumberFormatSymbols_dyo", "goog.i18n.NumberFormatSymbols_dyo_SN", "goog.i18n.NumberFormatSymbols_dz", "goog.i18n.NumberFormatSymbols_dz_BT", "goog.i18n.NumberFormatSymbols_ebu", "goog.i18n.NumberFormatSymbols_ebu_KE", "goog.i18n.NumberFormatSymbols_ee", "goog.i18n.NumberFormatSymbols_ee_GH", "goog.i18n.NumberFormatSymbols_ee_TG", "goog.i18n.NumberFormatSymbols_el_CY", "goog.i18n.NumberFormatSymbols_en_150", "goog.i18n.NumberFormatSymbols_en_AG", 
"goog.i18n.NumberFormatSymbols_en_BB", "goog.i18n.NumberFormatSymbols_en_BE", "goog.i18n.NumberFormatSymbols_en_BM", "goog.i18n.NumberFormatSymbols_en_BS", "goog.i18n.NumberFormatSymbols_en_BW", "goog.i18n.NumberFormatSymbols_en_BZ", "goog.i18n.NumberFormatSymbols_en_CA", "goog.i18n.NumberFormatSymbols_en_CM", "goog.i18n.NumberFormatSymbols_en_DM", "goog.i18n.NumberFormatSymbols_en_Dsrt", "goog.i18n.NumberFormatSymbols_en_FJ", "goog.i18n.NumberFormatSymbols_en_GD", "goog.i18n.NumberFormatSymbols_en_GG", 
"goog.i18n.NumberFormatSymbols_en_GH", "goog.i18n.NumberFormatSymbols_en_GI", "goog.i18n.NumberFormatSymbols_en_GM", "goog.i18n.NumberFormatSymbols_en_GY", "goog.i18n.NumberFormatSymbols_en_HK", "goog.i18n.NumberFormatSymbols_en_IM", "goog.i18n.NumberFormatSymbols_en_JE", "goog.i18n.NumberFormatSymbols_en_JM", "goog.i18n.NumberFormatSymbols_en_KE", "goog.i18n.NumberFormatSymbols_en_KI", "goog.i18n.NumberFormatSymbols_en_KN", "goog.i18n.NumberFormatSymbols_en_KY", "goog.i18n.NumberFormatSymbols_en_LC", 
"goog.i18n.NumberFormatSymbols_en_LR", "goog.i18n.NumberFormatSymbols_en_LS", "goog.i18n.NumberFormatSymbols_en_MG", "goog.i18n.NumberFormatSymbols_en_MT", "goog.i18n.NumberFormatSymbols_en_MU", "goog.i18n.NumberFormatSymbols_en_MW", "goog.i18n.NumberFormatSymbols_en_NA", "goog.i18n.NumberFormatSymbols_en_NG", "goog.i18n.NumberFormatSymbols_en_NZ", "goog.i18n.NumberFormatSymbols_en_PG", "goog.i18n.NumberFormatSymbols_en_PH", "goog.i18n.NumberFormatSymbols_en_PK", "goog.i18n.NumberFormatSymbols_en_SB", 
"goog.i18n.NumberFormatSymbols_en_SC", "goog.i18n.NumberFormatSymbols_en_SL", "goog.i18n.NumberFormatSymbols_en_SS", "goog.i18n.NumberFormatSymbols_en_SZ", "goog.i18n.NumberFormatSymbols_en_TO", "goog.i18n.NumberFormatSymbols_en_TT", "goog.i18n.NumberFormatSymbols_en_TZ", "goog.i18n.NumberFormatSymbols_en_UG", "goog.i18n.NumberFormatSymbols_en_VC", "goog.i18n.NumberFormatSymbols_en_VU", "goog.i18n.NumberFormatSymbols_en_WS", "goog.i18n.NumberFormatSymbols_en_ZM", "goog.i18n.NumberFormatSymbols_en_ZW", 
"goog.i18n.NumberFormatSymbols_eo", "goog.i18n.NumberFormatSymbols_es_AR", "goog.i18n.NumberFormatSymbols_es_BO", "goog.i18n.NumberFormatSymbols_es_CL", "goog.i18n.NumberFormatSymbols_es_CO", "goog.i18n.NumberFormatSymbols_es_CR", "goog.i18n.NumberFormatSymbols_es_CU", "goog.i18n.NumberFormatSymbols_es_DO", "goog.i18n.NumberFormatSymbols_es_EC", "goog.i18n.NumberFormatSymbols_es_GQ", "goog.i18n.NumberFormatSymbols_es_GT", "goog.i18n.NumberFormatSymbols_es_HN", "goog.i18n.NumberFormatSymbols_es_MX", 
"goog.i18n.NumberFormatSymbols_es_NI", "goog.i18n.NumberFormatSymbols_es_PA", "goog.i18n.NumberFormatSymbols_es_PE", "goog.i18n.NumberFormatSymbols_es_PH", "goog.i18n.NumberFormatSymbols_es_PR", "goog.i18n.NumberFormatSymbols_es_PY", "goog.i18n.NumberFormatSymbols_es_SV", "goog.i18n.NumberFormatSymbols_es_US", "goog.i18n.NumberFormatSymbols_es_UY", "goog.i18n.NumberFormatSymbols_es_VE", "goog.i18n.NumberFormatSymbols_ewo", "goog.i18n.NumberFormatSymbols_ewo_CM", "goog.i18n.NumberFormatSymbols_fa_AF", 
"goog.i18n.NumberFormatSymbols_ff", "goog.i18n.NumberFormatSymbols_ff_SN", "goog.i18n.NumberFormatSymbols_fo", "goog.i18n.NumberFormatSymbols_fo_FO", "goog.i18n.NumberFormatSymbols_fr_BE", "goog.i18n.NumberFormatSymbols_fr_BF", "goog.i18n.NumberFormatSymbols_fr_BI", "goog.i18n.NumberFormatSymbols_fr_BJ", "goog.i18n.NumberFormatSymbols_fr_CD", "goog.i18n.NumberFormatSymbols_fr_CF", "goog.i18n.NumberFormatSymbols_fr_CG", "goog.i18n.NumberFormatSymbols_fr_CH", "goog.i18n.NumberFormatSymbols_fr_CI", 
"goog.i18n.NumberFormatSymbols_fr_CM", "goog.i18n.NumberFormatSymbols_fr_DJ", "goog.i18n.NumberFormatSymbols_fr_DZ", "goog.i18n.NumberFormatSymbols_fr_GA", "goog.i18n.NumberFormatSymbols_fr_GN", "goog.i18n.NumberFormatSymbols_fr_GQ", "goog.i18n.NumberFormatSymbols_fr_HT", "goog.i18n.NumberFormatSymbols_fr_KM", "goog.i18n.NumberFormatSymbols_fr_LU", "goog.i18n.NumberFormatSymbols_fr_MA", "goog.i18n.NumberFormatSymbols_fr_MG", "goog.i18n.NumberFormatSymbols_fr_ML", "goog.i18n.NumberFormatSymbols_fr_MR", 
"goog.i18n.NumberFormatSymbols_fr_MU", "goog.i18n.NumberFormatSymbols_fr_NC", "goog.i18n.NumberFormatSymbols_fr_NE", "goog.i18n.NumberFormatSymbols_fr_PF", "goog.i18n.NumberFormatSymbols_fr_RW", "goog.i18n.NumberFormatSymbols_fr_SC", "goog.i18n.NumberFormatSymbols_fr_SN", "goog.i18n.NumberFormatSymbols_fr_SY", "goog.i18n.NumberFormatSymbols_fr_TD", "goog.i18n.NumberFormatSymbols_fr_TG", "goog.i18n.NumberFormatSymbols_fr_TN", "goog.i18n.NumberFormatSymbols_fr_VU", "goog.i18n.NumberFormatSymbols_fur", 
"goog.i18n.NumberFormatSymbols_fur_IT", "goog.i18n.NumberFormatSymbols_ga", "goog.i18n.NumberFormatSymbols_ga_IE", "goog.i18n.NumberFormatSymbols_gd", "goog.i18n.NumberFormatSymbols_gd_GB", "goog.i18n.NumberFormatSymbols_guz", "goog.i18n.NumberFormatSymbols_guz_KE", "goog.i18n.NumberFormatSymbols_gv", "goog.i18n.NumberFormatSymbols_gv_GB", "goog.i18n.NumberFormatSymbols_ha", "goog.i18n.NumberFormatSymbols_ha_Latn", "goog.i18n.NumberFormatSymbols_ha_Latn_GH", "goog.i18n.NumberFormatSymbols_ha_Latn_NE", 
"goog.i18n.NumberFormatSymbols_ha_Latn_NG", "goog.i18n.NumberFormatSymbols_haw", "goog.i18n.NumberFormatSymbols_haw_US", "goog.i18n.NumberFormatSymbols_hr_BA", "goog.i18n.NumberFormatSymbols_hy", "goog.i18n.NumberFormatSymbols_hy_AM", "goog.i18n.NumberFormatSymbols_ia", "goog.i18n.NumberFormatSymbols_ig", "goog.i18n.NumberFormatSymbols_ig_NG", "goog.i18n.NumberFormatSymbols_ii", "goog.i18n.NumberFormatSymbols_ii_CN", "goog.i18n.NumberFormatSymbols_it_CH", "goog.i18n.NumberFormatSymbols_jgo", "goog.i18n.NumberFormatSymbols_jgo_CM", 
"goog.i18n.NumberFormatSymbols_jmc", "goog.i18n.NumberFormatSymbols_jmc_TZ", "goog.i18n.NumberFormatSymbols_ka", "goog.i18n.NumberFormatSymbols_ka_GE", "goog.i18n.NumberFormatSymbols_kab", "goog.i18n.NumberFormatSymbols_kab_DZ", "goog.i18n.NumberFormatSymbols_kam", "goog.i18n.NumberFormatSymbols_kam_KE", "goog.i18n.NumberFormatSymbols_kde", "goog.i18n.NumberFormatSymbols_kde_TZ", "goog.i18n.NumberFormatSymbols_kea", "goog.i18n.NumberFormatSymbols_kea_CV", "goog.i18n.NumberFormatSymbols_khq", "goog.i18n.NumberFormatSymbols_khq_ML", 
"goog.i18n.NumberFormatSymbols_ki", "goog.i18n.NumberFormatSymbols_ki_KE", "goog.i18n.NumberFormatSymbols_kk", "goog.i18n.NumberFormatSymbols_kk_Cyrl", "goog.i18n.NumberFormatSymbols_kk_Cyrl_KZ", "goog.i18n.NumberFormatSymbols_kkj", "goog.i18n.NumberFormatSymbols_kkj_CM", "goog.i18n.NumberFormatSymbols_kl", "goog.i18n.NumberFormatSymbols_kl_GL", "goog.i18n.NumberFormatSymbols_kln", "goog.i18n.NumberFormatSymbols_kln_KE", "goog.i18n.NumberFormatSymbols_km", "goog.i18n.NumberFormatSymbols_km_KH", "goog.i18n.NumberFormatSymbols_ko_KP", 
"goog.i18n.NumberFormatSymbols_kok", "goog.i18n.NumberFormatSymbols_kok_IN", "goog.i18n.NumberFormatSymbols_ks", "goog.i18n.NumberFormatSymbols_ks_Arab", "goog.i18n.NumberFormatSymbols_ks_Arab_IN", "goog.i18n.NumberFormatSymbols_ksb", "goog.i18n.NumberFormatSymbols_ksb_TZ", "goog.i18n.NumberFormatSymbols_ksf", "goog.i18n.NumberFormatSymbols_ksf_CM", "goog.i18n.NumberFormatSymbols_ksh", "goog.i18n.NumberFormatSymbols_ksh_DE", "goog.i18n.NumberFormatSymbols_kw", "goog.i18n.NumberFormatSymbols_kw_GB", 
"goog.i18n.NumberFormatSymbols_ky", "goog.i18n.NumberFormatSymbols_ky_KG", "goog.i18n.NumberFormatSymbols_lag", "goog.i18n.NumberFormatSymbols_lag_TZ", "goog.i18n.NumberFormatSymbols_lg", "goog.i18n.NumberFormatSymbols_lg_UG", "goog.i18n.NumberFormatSymbols_ln_AO", "goog.i18n.NumberFormatSymbols_ln_CF", "goog.i18n.NumberFormatSymbols_ln_CG", "goog.i18n.NumberFormatSymbols_lo", "goog.i18n.NumberFormatSymbols_lo_LA", "goog.i18n.NumberFormatSymbols_lu", "goog.i18n.NumberFormatSymbols_lu_CD", "goog.i18n.NumberFormatSymbols_luo", 
"goog.i18n.NumberFormatSymbols_luo_KE", "goog.i18n.NumberFormatSymbols_luy", "goog.i18n.NumberFormatSymbols_luy_KE", "goog.i18n.NumberFormatSymbols_mas", "goog.i18n.NumberFormatSymbols_mas_KE", "goog.i18n.NumberFormatSymbols_mas_TZ", "goog.i18n.NumberFormatSymbols_mer", "goog.i18n.NumberFormatSymbols_mer_KE", "goog.i18n.NumberFormatSymbols_mfe", "goog.i18n.NumberFormatSymbols_mfe_MU", "goog.i18n.NumberFormatSymbols_mg", "goog.i18n.NumberFormatSymbols_mg_MG", "goog.i18n.NumberFormatSymbols_mgh", "goog.i18n.NumberFormatSymbols_mgh_MZ", 
"goog.i18n.NumberFormatSymbols_mgo", "goog.i18n.NumberFormatSymbols_mgo_CM", "goog.i18n.NumberFormatSymbols_mk", "goog.i18n.NumberFormatSymbols_mk_MK", "goog.i18n.NumberFormatSymbols_ms_BN", "goog.i18n.NumberFormatSymbols_ms_SG", "goog.i18n.NumberFormatSymbols_mua", "goog.i18n.NumberFormatSymbols_mua_CM", "goog.i18n.NumberFormatSymbols_my", "goog.i18n.NumberFormatSymbols_my_MM", "goog.i18n.NumberFormatSymbols_naq", "goog.i18n.NumberFormatSymbols_naq_NA", "goog.i18n.NumberFormatSymbols_nb", "goog.i18n.NumberFormatSymbols_nb_NO", 
"goog.i18n.NumberFormatSymbols_nd", "goog.i18n.NumberFormatSymbols_nd_ZW", "goog.i18n.NumberFormatSymbols_ne", "goog.i18n.NumberFormatSymbols_ne_IN", "goog.i18n.NumberFormatSymbols_ne_NP", "goog.i18n.NumberFormatSymbols_nl_AW", "goog.i18n.NumberFormatSymbols_nl_BE", "goog.i18n.NumberFormatSymbols_nl_SR", "goog.i18n.NumberFormatSymbols_nmg", "goog.i18n.NumberFormatSymbols_nmg_CM", "goog.i18n.NumberFormatSymbols_nn", "goog.i18n.NumberFormatSymbols_nn_NO", "goog.i18n.NumberFormatSymbols_nnh", "goog.i18n.NumberFormatSymbols_nnh_CM", 
"goog.i18n.NumberFormatSymbols_nr", "goog.i18n.NumberFormatSymbols_nr_ZA", "goog.i18n.NumberFormatSymbols_nso", "goog.i18n.NumberFormatSymbols_nso_ZA", "goog.i18n.NumberFormatSymbols_nus", "goog.i18n.NumberFormatSymbols_nus_SD", "goog.i18n.NumberFormatSymbols_nyn", "goog.i18n.NumberFormatSymbols_nyn_UG", "goog.i18n.NumberFormatSymbols_om", "goog.i18n.NumberFormatSymbols_om_ET", "goog.i18n.NumberFormatSymbols_om_KE", "goog.i18n.NumberFormatSymbols_os", "goog.i18n.NumberFormatSymbols_os_GE", "goog.i18n.NumberFormatSymbols_os_RU", 
"goog.i18n.NumberFormatSymbols_pa", "goog.i18n.NumberFormatSymbols_pa_Arab", "goog.i18n.NumberFormatSymbols_pa_Arab_PK", "goog.i18n.NumberFormatSymbols_pa_Guru", "goog.i18n.NumberFormatSymbols_pa_Guru_IN", "goog.i18n.NumberFormatSymbols_ps", "goog.i18n.NumberFormatSymbols_ps_AF", "goog.i18n.NumberFormatSymbols_pt_AO", "goog.i18n.NumberFormatSymbols_pt_CV", "goog.i18n.NumberFormatSymbols_pt_GW", "goog.i18n.NumberFormatSymbols_pt_MO", "goog.i18n.NumberFormatSymbols_pt_MZ", "goog.i18n.NumberFormatSymbols_pt_ST", 
"goog.i18n.NumberFormatSymbols_pt_TL", "goog.i18n.NumberFormatSymbols_rm", "goog.i18n.NumberFormatSymbols_rm_CH", "goog.i18n.NumberFormatSymbols_rn", "goog.i18n.NumberFormatSymbols_rn_BI", "goog.i18n.NumberFormatSymbols_ro_MD", "goog.i18n.NumberFormatSymbols_rof", "goog.i18n.NumberFormatSymbols_rof_TZ", "goog.i18n.NumberFormatSymbols_ru_BY", "goog.i18n.NumberFormatSymbols_ru_KG", "goog.i18n.NumberFormatSymbols_ru_KZ", "goog.i18n.NumberFormatSymbols_ru_MD", "goog.i18n.NumberFormatSymbols_ru_UA", "goog.i18n.NumberFormatSymbols_rw", 
"goog.i18n.NumberFormatSymbols_rw_RW", "goog.i18n.NumberFormatSymbols_rwk", "goog.i18n.NumberFormatSymbols_rwk_TZ", "goog.i18n.NumberFormatSymbols_sah", "goog.i18n.NumberFormatSymbols_sah_RU", "goog.i18n.NumberFormatSymbols_saq", "goog.i18n.NumberFormatSymbols_saq_KE", "goog.i18n.NumberFormatSymbols_sbp", "goog.i18n.NumberFormatSymbols_sbp_TZ", "goog.i18n.NumberFormatSymbols_se", "goog.i18n.NumberFormatSymbols_se_FI", "goog.i18n.NumberFormatSymbols_se_NO", "goog.i18n.NumberFormatSymbols_seh", "goog.i18n.NumberFormatSymbols_seh_MZ", 
"goog.i18n.NumberFormatSymbols_ses", "goog.i18n.NumberFormatSymbols_ses_ML", "goog.i18n.NumberFormatSymbols_sg", "goog.i18n.NumberFormatSymbols_sg_CF", "goog.i18n.NumberFormatSymbols_shi", "goog.i18n.NumberFormatSymbols_shi_Latn", "goog.i18n.NumberFormatSymbols_shi_Latn_MA", "goog.i18n.NumberFormatSymbols_shi_Tfng", "goog.i18n.NumberFormatSymbols_shi_Tfng_MA", "goog.i18n.NumberFormatSymbols_si", "goog.i18n.NumberFormatSymbols_si_LK", "goog.i18n.NumberFormatSymbols_sn", "goog.i18n.NumberFormatSymbols_sn_ZW", 
"goog.i18n.NumberFormatSymbols_so", "goog.i18n.NumberFormatSymbols_so_DJ", "goog.i18n.NumberFormatSymbols_so_ET", "goog.i18n.NumberFormatSymbols_so_KE", "goog.i18n.NumberFormatSymbols_so_SO", "goog.i18n.NumberFormatSymbols_sq_MK", "goog.i18n.NumberFormatSymbols_sr_Cyrl", "goog.i18n.NumberFormatSymbols_sr_Cyrl_BA", "goog.i18n.NumberFormatSymbols_sr_Cyrl_ME", "goog.i18n.NumberFormatSymbols_sr_Latn", "goog.i18n.NumberFormatSymbols_sr_Latn_BA", "goog.i18n.NumberFormatSymbols_sr_Latn_ME", "goog.i18n.NumberFormatSymbols_ss", 
"goog.i18n.NumberFormatSymbols_ss_SZ", "goog.i18n.NumberFormatSymbols_ss_ZA", "goog.i18n.NumberFormatSymbols_ssy", "goog.i18n.NumberFormatSymbols_ssy_ER", "goog.i18n.NumberFormatSymbols_st", "goog.i18n.NumberFormatSymbols_st_LS", "goog.i18n.NumberFormatSymbols_st_ZA", "goog.i18n.NumberFormatSymbols_sv_AX", "goog.i18n.NumberFormatSymbols_sv_FI", "goog.i18n.NumberFormatSymbols_sw_KE", "goog.i18n.NumberFormatSymbols_sw_UG", "goog.i18n.NumberFormatSymbols_swc", "goog.i18n.NumberFormatSymbols_swc_CD", 
"goog.i18n.NumberFormatSymbols_ta_LK", "goog.i18n.NumberFormatSymbols_ta_MY", "goog.i18n.NumberFormatSymbols_ta_SG", "goog.i18n.NumberFormatSymbols_teo", "goog.i18n.NumberFormatSymbols_teo_KE", "goog.i18n.NumberFormatSymbols_teo_UG", "goog.i18n.NumberFormatSymbols_tg", "goog.i18n.NumberFormatSymbols_tg_Cyrl", "goog.i18n.NumberFormatSymbols_tg_Cyrl_TJ", "goog.i18n.NumberFormatSymbols_ti", "goog.i18n.NumberFormatSymbols_ti_ER", "goog.i18n.NumberFormatSymbols_ti_ET", "goog.i18n.NumberFormatSymbols_tig", 
"goog.i18n.NumberFormatSymbols_tig_ER", "goog.i18n.NumberFormatSymbols_tn", "goog.i18n.NumberFormatSymbols_tn_BW", "goog.i18n.NumberFormatSymbols_tn_ZA", "goog.i18n.NumberFormatSymbols_to", "goog.i18n.NumberFormatSymbols_to_TO", "goog.i18n.NumberFormatSymbols_tr_CY", "goog.i18n.NumberFormatSymbols_ts", "goog.i18n.NumberFormatSymbols_ts_ZA", "goog.i18n.NumberFormatSymbols_twq", "goog.i18n.NumberFormatSymbols_twq_NE", "goog.i18n.NumberFormatSymbols_tzm", "goog.i18n.NumberFormatSymbols_tzm_Latn", "goog.i18n.NumberFormatSymbols_tzm_Latn_MA", 
"goog.i18n.NumberFormatSymbols_ur_IN", "goog.i18n.NumberFormatSymbols_uz", "goog.i18n.NumberFormatSymbols_uz_Arab", "goog.i18n.NumberFormatSymbols_uz_Arab_AF", "goog.i18n.NumberFormatSymbols_uz_Cyrl", "goog.i18n.NumberFormatSymbols_uz_Cyrl_UZ", "goog.i18n.NumberFormatSymbols_uz_Latn", "goog.i18n.NumberFormatSymbols_uz_Latn_UZ", "goog.i18n.NumberFormatSymbols_vai", "goog.i18n.NumberFormatSymbols_vai_Latn", "goog.i18n.NumberFormatSymbols_vai_Latn_LR", "goog.i18n.NumberFormatSymbols_vai_Vaii", "goog.i18n.NumberFormatSymbols_vai_Vaii_LR", 
"goog.i18n.NumberFormatSymbols_ve", "goog.i18n.NumberFormatSymbols_ve_ZA", "goog.i18n.NumberFormatSymbols_vo", "goog.i18n.NumberFormatSymbols_vun", "goog.i18n.NumberFormatSymbols_vun_TZ", "goog.i18n.NumberFormatSymbols_wae", "goog.i18n.NumberFormatSymbols_wae_CH", "goog.i18n.NumberFormatSymbols_wal", "goog.i18n.NumberFormatSymbols_wal_ET", "goog.i18n.NumberFormatSymbols_xh", "goog.i18n.NumberFormatSymbols_xh_ZA", "goog.i18n.NumberFormatSymbols_xog", "goog.i18n.NumberFormatSymbols_xog_UG", "goog.i18n.NumberFormatSymbols_yav", 
"goog.i18n.NumberFormatSymbols_yav_CM", "goog.i18n.NumberFormatSymbols_yo", "goog.i18n.NumberFormatSymbols_yo_NG", "goog.i18n.NumberFormatSymbols_zh_Hans", "goog.i18n.NumberFormatSymbols_zh_Hans_HK", "goog.i18n.NumberFormatSymbols_zh_Hans_MO", "goog.i18n.NumberFormatSymbols_zh_Hans_SG", "goog.i18n.NumberFormatSymbols_zh_Hant", "goog.i18n.NumberFormatSymbols_zh_Hant_HK", "goog.i18n.NumberFormatSymbols_zh_Hant_MO", "goog.i18n.NumberFormatSymbols_zh_Hant_TW"], ["goog.i18n.NumberFormatSymbols"]);
goog.addDependency("i18n/ordinalrules.js", ["goog.i18n.ordinalRules"], []);
goog.addDependency("i18n/pluralrules.js", ["goog.i18n.pluralRules"], []);
goog.addDependency("i18n/timezone.js", ["goog.i18n.TimeZone"], ["goog.array", "goog.date.DateLike", "goog.string"]);
goog.addDependency("i18n/uchar.js", ["goog.i18n.uChar"], []);
goog.addDependency("i18n/uchar/localnamefetcher.js", ["goog.i18n.uChar.LocalNameFetcher"], ["goog.debug.Logger", "goog.i18n.uChar", "goog.i18n.uChar.NameFetcher"]);
goog.addDependency("i18n/uchar/namefetcher.js", ["goog.i18n.uChar.NameFetcher"], []);
goog.addDependency("i18n/uchar/remotenamefetcher.js", ["goog.i18n.uChar.RemoteNameFetcher"], ["goog.Disposable", "goog.Uri", "goog.debug.Logger", "goog.i18n.uChar", "goog.i18n.uChar.NameFetcher", "goog.net.XhrIo", "goog.structs.Map"]);
goog.addDependency("iter/iter.js", ["goog.iter", "goog.iter.Iterator", "goog.iter.StopIteration"], ["goog.array", "goog.asserts"]);
goog.addDependency("json/evaljsonprocessor.js", ["goog.json.EvalJsonProcessor"], ["goog.json", "goog.json.Processor", "goog.json.Serializer"]);
goog.addDependency("json/json.js", ["goog.json", "goog.json.Serializer"], []);
goog.addDependency("json/nativejsonprocessor.js", ["goog.json.NativeJsonProcessor"], ["goog.asserts", "goog.json", "goog.json.Processor"]);
goog.addDependency("json/processor.js", ["goog.json.Processor"], ["goog.string.Parser", "goog.string.Stringifier"]);
goog.addDependency("labs/classdef/classdef.js", ["goog.labs.classdef"], []);
goog.addDependency("labs/mock/mock.js", ["goog.labs.mock"], ["goog.array", "goog.debug", "goog.debug.Error", "goog.functions", "goog.json"]);
goog.addDependency("labs/net/image.js", ["goog.labs.net.image"], ["goog.events.EventHandler", "goog.events.EventType", "goog.net.EventType", "goog.result.SimpleResult", "goog.userAgent"]);
goog.addDependency("labs/net/image_test.js", ["goog.labs.net.imageTest"], ["goog.events", "goog.labs.net.image", "goog.result", "goog.result.Result", "goog.string", "goog.testing.AsyncTestCase", "goog.testing.jsunit", "goog.testing.recordFunction"]);
goog.addDependency("labs/net/webchannel.js", ["goog.net.WebChannel", "goog.net.WebChannel.ErrorEvent", "goog.net.WebChannel.ErrorStatus", "goog.net.WebChannel.MessageData", "goog.net.WebChannel.MessageEvent", "goog.net.WebChannel.Options"], ["goog.events.Event", "goog.events.EventTarget"]);
goog.addDependency("labs/net/webchanneltransport.js", ["goog.net.WebChannelTransport"], ["goog.net.WebChannel", "goog.net.WebChannel.Options"]);
goog.addDependency("labs/net/xhr.js", ["goog.labs.net.xhr", "goog.labs.net.xhr.Error", "goog.labs.net.xhr.HttpError", "goog.labs.net.xhr.TimeoutError"], ["goog.debug.Error", "goog.json", "goog.net.HttpStatus", "goog.net.XmlHttp", "goog.result", "goog.result.SimpleResult", "goog.string", "goog.uri.utils"]);
goog.addDependency("labs/object/object.js", ["goog.labs.object"], []);
goog.addDependency("labs/observe/notice.js", ["goog.labs.observe.Notice"], []);
goog.addDependency("labs/observe/observable.js", ["goog.labs.observe.Observable"], ["goog.disposable.IDisposable"]);
goog.addDependency("labs/observe/observableset.js", ["goog.labs.observe.ObservableSet"], ["goog.array", "goog.labs.observe.Observer"]);
goog.addDependency("labs/observe/observationset.js", ["goog.labs.observe.ObservationSet"], ["goog.array", "goog.labs.observe.Observer"]);
goog.addDependency("labs/observe/observer.js", ["goog.labs.observe.Observer"], []);
goog.addDependency("labs/observe/simpleobservable.js", ["goog.labs.observe.SimpleObservable"], ["goog.Disposable", "goog.array", "goog.asserts", "goog.labs.observe.Notice", "goog.labs.observe.Observable", "goog.labs.observe.Observer", "goog.object"]);
goog.addDependency("labs/structs/map.js", ["goog.labs.structs.Map"], ["goog.array", "goog.asserts", "goog.labs.object", "goog.object"]);
goog.addDependency("labs/structs/map_perf.js", ["goog.labs.structs.mapPerf"], ["goog.dom", "goog.labs.structs.Map", "goog.structs.Map", "goog.testing.PerformanceTable", "goog.testing.jsunit"]);
goog.addDependency("labs/structs/multimap.js", ["goog.labs.structs.Multimap"], ["goog.array", "goog.labs.object", "goog.labs.structs.Map"]);
goog.addDependency("labs/style/pixeldensitymonitor.js", ["goog.labs.style.PixelDensityMonitor", "goog.labs.style.PixelDensityMonitor.Density", "goog.labs.style.PixelDensityMonitor.EventType"], ["goog.asserts", "goog.events", "goog.events.EventTarget"]);
goog.addDependency("labs/style/pixeldensitymonitor_test.js", ["goog.labs.style.PixelDensityMonitorTest"], ["goog.array", "goog.dom.DomHelper", "goog.events", "goog.events.EventTarget", "goog.labs.style.PixelDensityMonitor", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.recordFunction"]);
goog.addDependency("labs/testing/assertthat.js", ["goog.labs.testing.MatcherError", "goog.labs.testing.assertThat"], ["goog.asserts", "goog.debug.Error", "goog.labs.testing.Matcher"]);
goog.addDependency("labs/testing/decoratormatcher.js", ["goog.labs.testing.AnythingMatcher"], ["goog.labs.testing.Matcher"]);
goog.addDependency("labs/testing/dictionarymatcher.js", ["goog.labs.testing.HasEntriesMatcher", "goog.labs.testing.HasEntryMatcher", "goog.labs.testing.HasKeyMatcher", "goog.labs.testing.HasValueMatcher"], ["goog.array", "goog.asserts", "goog.labs.testing.Matcher", "goog.string"]);
goog.addDependency("labs/testing/logicmatcher.js", ["goog.labs.testing.AllOfMatcher", "goog.labs.testing.AnyOfMatcher", "goog.labs.testing.IsNotMatcher"], ["goog.array", "goog.labs.testing.Matcher"]);
goog.addDependency("labs/testing/matcher.js", ["goog.labs.testing.Matcher"], []);
goog.addDependency("labs/testing/numbermatcher.js", ["goog.labs.testing.CloseToMatcher", "goog.labs.testing.EqualToMatcher", "goog.labs.testing.GreaterThanEqualToMatcher", "goog.labs.testing.GreaterThanMatcher", "goog.labs.testing.LessThanEqualToMatcher", "goog.labs.testing.LessThanMatcher"], ["goog.asserts", "goog.labs.testing.Matcher"]);
goog.addDependency("labs/testing/objectmatcher.js", ["goog.labs.testing.HasPropertyMatcher", "goog.labs.testing.InstanceOfMatcher", "goog.labs.testing.IsNullMatcher", "goog.labs.testing.IsNullOrUndefinedMatcher", "goog.labs.testing.IsUndefinedMatcher", "goog.labs.testing.ObjectEqualsMatcher"], ["goog.labs.testing.Matcher", "goog.string"]);
goog.addDependency("labs/testing/stringmatcher.js", ["goog.labs.testing.ContainsStringMatcher", "goog.labs.testing.EndsWithMatcher", "goog.labs.testing.EqualToIgnoringCaseMatcher", "goog.labs.testing.EqualToIgnoringWhitespaceMatcher", "goog.labs.testing.EqualsMatcher", "goog.labs.testing.RegexMatcher", "goog.labs.testing.StartsWithMatcher", "goog.labs.testing.StringContainsInOrderMatcher"], ["goog.asserts", "goog.labs.testing.Matcher", "goog.string"]);
goog.addDependency("labs/useragent/engine.js", ["goog.labs.userAgent.engine"], ["goog.array", "goog.labs.userAgent.util", "goog.memoize", "goog.string"]);
goog.addDependency("labs/useragent/engine_test.js", ["goog.labs.userAgent.engineTest"], ["goog.labs.userAgent.engine", "goog.testing.PropertyReplacer", "goog.testing.jsunit"]);
goog.addDependency("labs/useragent/test_agents.js", ["goog.labs.userAgent.testAgents"], []);
goog.addDependency("labs/useragent/util.js", ["goog.labs.userAgent.util"], []);
goog.addDependency("labs/useragent/util_test.js", ["goog.labs.userAgent.utilTest"], ["goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.jsunit"]);
goog.addDependency("locale/countries.js", ["goog.locale.countries"], []);
goog.addDependency("locale/defaultlocalenameconstants.js", ["goog.locale.defaultLocaleNameConstants"], []);
goog.addDependency("locale/genericfontnames.js", ["goog.locale.genericFontNames"], []);
goog.addDependency("locale/genericfontnamesdata.js", ["goog.locale.genericFontNamesData"], []);
goog.addDependency("locale/locale.js", ["goog.locale"], ["goog.locale.nativeNameConstants"]);
goog.addDependency("locale/nativenameconstants.js", ["goog.locale.nativeNameConstants"], []);
goog.addDependency("locale/scriptToLanguages.js", ["goog.locale.scriptToLanguages"], ["goog.locale"]);
goog.addDependency("locale/timezonedetection.js", ["goog.locale.timeZoneDetection"], ["goog.locale", "goog.locale.TimeZoneFingerprint"]);
goog.addDependency("locale/timezonefingerprint.js", ["goog.locale.TimeZoneFingerprint"], []);
goog.addDependency("locale/timezonelist.js", ["goog.locale.TimeZoneList"], ["goog.locale"]);
goog.addDependency("math/bezier.js", ["goog.math.Bezier"], ["goog.math", "goog.math.Coordinate"]);
goog.addDependency("math/box.js", ["goog.math.Box"], ["goog.math.Coordinate"]);
goog.addDependency("math/coordinate.js", ["goog.math.Coordinate"], ["goog.math"]);
goog.addDependency("math/coordinate3.js", ["goog.math.Coordinate3"], []);
goog.addDependency("math/exponentialbackoff.js", ["goog.math.ExponentialBackoff"], ["goog.asserts"]);
goog.addDependency("math/integer.js", ["goog.math.Integer"], []);
goog.addDependency("math/interpolator/interpolator1.js", ["goog.math.interpolator.Interpolator1"], []);
goog.addDependency("math/interpolator/linear1.js", ["goog.math.interpolator.Linear1"], ["goog.array", "goog.math", "goog.math.interpolator.Interpolator1"]);
goog.addDependency("math/interpolator/pchip1.js", ["goog.math.interpolator.Pchip1"], ["goog.math", "goog.math.interpolator.Spline1"]);
goog.addDependency("math/interpolator/spline1.js", ["goog.math.interpolator.Spline1"], ["goog.array", "goog.math", "goog.math.interpolator.Interpolator1", "goog.math.tdma"]);
goog.addDependency("math/line.js", ["goog.math.Line"], ["goog.math", "goog.math.Coordinate"]);
goog.addDependency("math/long.js", ["goog.math.Long"], []);
goog.addDependency("math/math.js", ["goog.math"], ["goog.array", "goog.asserts"]);
goog.addDependency("math/matrix.js", ["goog.math.Matrix"], ["goog.array", "goog.math", "goog.math.Size"]);
goog.addDependency("math/range.js", ["goog.math.Range"], []);
goog.addDependency("math/rangeset.js", ["goog.math.RangeSet"], ["goog.array", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.math.Range"]);
goog.addDependency("math/rect.js", ["goog.math.Rect"], ["goog.math.Box", "goog.math.Coordinate", "goog.math.Size"]);
goog.addDependency("math/size.js", ["goog.math.Size"], []);
goog.addDependency("math/tdma.js", ["goog.math.tdma"], []);
goog.addDependency("math/vec2.js", ["goog.math.Vec2"], ["goog.math", "goog.math.Coordinate"]);
goog.addDependency("math/vec3.js", ["goog.math.Vec3"], ["goog.math", "goog.math.Coordinate3"]);
goog.addDependency("memoize/memoize.js", ["goog.memoize"], []);
goog.addDependency("messaging/abstractchannel.js", ["goog.messaging.AbstractChannel"], ["goog.Disposable", "goog.debug", "goog.debug.Logger", "goog.json", "goog.messaging.MessageChannel"]);
goog.addDependency("messaging/bufferedchannel.js", ["goog.messaging.BufferedChannel"], ["goog.Timer", "goog.Uri", "goog.debug.Error", "goog.debug.Logger", "goog.events", "goog.messaging.MessageChannel", "goog.messaging.MultiChannel"]);
goog.addDependency("messaging/deferredchannel.js", ["goog.messaging.DeferredChannel"], ["goog.Disposable", "goog.async.Deferred", "goog.messaging.MessageChannel"]);
goog.addDependency("messaging/loggerclient.js", ["goog.messaging.LoggerClient"], ["goog.Disposable", "goog.debug", "goog.debug.LogManager", "goog.debug.Logger"]);
goog.addDependency("messaging/loggerserver.js", ["goog.messaging.LoggerServer"], ["goog.Disposable", "goog.debug.Logger"]);
goog.addDependency("messaging/messagechannel.js", ["goog.messaging.MessageChannel"], []);
goog.addDependency("messaging/messaging.js", ["goog.messaging"], ["goog.messaging.MessageChannel"]);
goog.addDependency("messaging/multichannel.js", ["goog.messaging.MultiChannel", "goog.messaging.MultiChannel.VirtualChannel"], ["goog.Disposable", "goog.debug.Logger", "goog.events.EventHandler", "goog.messaging.MessageChannel", "goog.object"]);
goog.addDependency("messaging/portcaller.js", ["goog.messaging.PortCaller"], ["goog.Disposable", "goog.async.Deferred", "goog.messaging.DeferredChannel", "goog.messaging.PortChannel", "goog.messaging.PortNetwork", "goog.object"]);
goog.addDependency("messaging/portchannel.js", ["goog.messaging.PortChannel"], ["goog.Timer", "goog.array", "goog.async.Deferred", "goog.debug", "goog.debug.Logger", "goog.dom", "goog.dom.DomHelper", "goog.events", "goog.events.EventType", "goog.json", "goog.messaging.AbstractChannel", "goog.messaging.DeferredChannel", "goog.object", "goog.string"]);
goog.addDependency("messaging/portnetwork.js", ["goog.messaging.PortNetwork"], []);
goog.addDependency("messaging/portoperator.js", ["goog.messaging.PortOperator"], ["goog.Disposable", "goog.asserts", "goog.debug.Logger", "goog.messaging.PortChannel", "goog.messaging.PortNetwork", "goog.object"]);
goog.addDependency("messaging/respondingchannel.js", ["goog.messaging.RespondingChannel"], ["goog.Disposable", "goog.debug.Logger", "goog.messaging.MessageChannel", "goog.messaging.MultiChannel", "goog.messaging.MultiChannel.VirtualChannel"]);
goog.addDependency("messaging/testdata/portchannel_worker.js", ["goog.messaging.testdata.portchannel_worker"], ["goog.messaging.PortChannel"]);
goog.addDependency("messaging/testdata/portnetwork_worker1.js", ["goog.messaging.testdata.portnetwork_worker1"], ["goog.messaging.PortCaller", "goog.messaging.PortChannel"]);
goog.addDependency("messaging/testdata/portnetwork_worker2.js", ["goog.messaging.testdata.portnetwork_worker2"], ["goog.messaging.PortCaller", "goog.messaging.PortChannel"]);
goog.addDependency("module/abstractmoduleloader.js", ["goog.module.AbstractModuleLoader"], []);
goog.addDependency("module/basemodule.js", ["goog.module.BaseModule"], ["goog.Disposable"]);
goog.addDependency("module/loader.js", ["goog.module.Loader"], ["goog.Timer", "goog.array", "goog.dom", "goog.object"]);
goog.addDependency("module/module.js", ["goog.module"], ["goog.array", "goog.module.Loader"]);
goog.addDependency("module/moduleinfo.js", ["goog.module.ModuleInfo"], ["goog.Disposable", "goog.functions", "goog.module.BaseModule", "goog.module.ModuleLoadCallback"]);
goog.addDependency("module/moduleloadcallback.js", ["goog.module.ModuleLoadCallback"], ["goog.debug.entryPointRegistry", "goog.debug.errorHandlerWeakDep"]);
goog.addDependency("module/moduleloader.js", ["goog.module.ModuleLoader"], ["goog.Timer", "goog.array", "goog.debug.Logger", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.module.AbstractModuleLoader", "goog.net.BulkLoader", "goog.net.EventType", "goog.net.jsloader", "goog.userAgent.product"]);
goog.addDependency("module/moduleloader_test.js", ["goog.module.ModuleLoaderTest"], ["goog.array", "goog.dom", "goog.functions", "goog.module.ModuleLoader", "goog.module.ModuleManager", "goog.module.ModuleManager.CallbackType", "goog.object", "goog.testing.AsyncTestCase", "goog.testing.PropertyReplacer", "goog.testing.events.EventObserver", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent.product"]);
goog.addDependency("module/modulemanager.js", ["goog.module.ModuleManager", "goog.module.ModuleManager.CallbackType", "goog.module.ModuleManager.FailureType"], ["goog.Disposable", "goog.array", "goog.asserts", "goog.async.Deferred", "goog.debug.Logger", "goog.debug.Trace", "goog.dispose", "goog.module.ModuleInfo", "goog.module.ModuleLoadCallback", "goog.object"]);
goog.addDependency("module/testdata/modA_1.js", ["goog.module.testdata.modA_1"], []);
goog.addDependency("module/testdata/modA_2.js", ["goog.module.testdata.modA_2"], ["goog.module.ModuleManager"]);
goog.addDependency("module/testdata/modB_1.js", ["goog.module.testdata.modB_1"], ["goog.module.ModuleManager"]);
goog.addDependency("net/browserchannel.js", ["goog.net.BrowserChannel", "goog.net.BrowserChannel.Error", "goog.net.BrowserChannel.Event", "goog.net.BrowserChannel.Handler", "goog.net.BrowserChannel.LogSaver", "goog.net.BrowserChannel.QueuedMap", "goog.net.BrowserChannel.ServerReachability", "goog.net.BrowserChannel.ServerReachabilityEvent", "goog.net.BrowserChannel.Stat", "goog.net.BrowserChannel.StatEvent", "goog.net.BrowserChannel.State", "goog.net.BrowserChannel.TimingEvent"], ["goog.Uri", "goog.array", 
"goog.asserts", "goog.debug.Logger", "goog.debug.TextFormatter", "goog.events.Event", "goog.events.EventTarget", "goog.json", "goog.json.EvalJsonProcessor", "goog.net.BrowserTestChannel", "goog.net.ChannelDebug", "goog.net.ChannelRequest", "goog.net.XhrIo", "goog.net.tmpnetwork", "goog.string", "goog.structs", "goog.structs.CircularBuffer"]);
goog.addDependency("net/browsertestchannel.js", ["goog.net.BrowserTestChannel"], ["goog.json.EvalJsonProcessor", "goog.net.ChannelRequest", "goog.net.ChannelRequest.Error", "goog.net.tmpnetwork", "goog.string.Parser", "goog.userAgent"]);
goog.addDependency("net/bulkloader.js", ["goog.net.BulkLoader"], ["goog.debug.Logger", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.net.BulkLoaderHelper", "goog.net.EventType", "goog.net.XhrIo"]);
goog.addDependency("net/bulkloaderhelper.js", ["goog.net.BulkLoaderHelper"], ["goog.Disposable", "goog.debug.Logger"]);
goog.addDependency("net/channeldebug.js", ["goog.net.ChannelDebug"], ["goog.debug.Logger", "goog.json"]);
goog.addDependency("net/channelrequest.js", ["goog.net.ChannelRequest", "goog.net.ChannelRequest.Error"], ["goog.Timer", "goog.async.Throttle", "goog.events.EventHandler", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.XmlHttp", "goog.object", "goog.userAgent"]);
goog.addDependency("net/cookies.js", ["goog.net.Cookies", "goog.net.cookies"], []);
goog.addDependency("net/crossdomainrpc.js", ["goog.net.CrossDomainRpc"], ["goog.Uri.QueryData", "goog.debug.Logger", "goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.json", "goog.net.EventType", "goog.net.HttpStatus", "goog.userAgent"]);
goog.addDependency("net/errorcode.js", ["goog.net.ErrorCode"], []);
goog.addDependency("net/eventtype.js", ["goog.net.EventType"], []);
goog.addDependency("net/filedownloader.js", ["goog.net.FileDownloader", "goog.net.FileDownloader.Error"], ["goog.Disposable", "goog.asserts", "goog.async.Deferred", "goog.crypt.hash32", "goog.debug.Error", "goog.events.EventHandler", "goog.fs", "goog.fs.DirectoryEntry.Behavior", "goog.fs.Error.ErrorCode", "goog.fs.FileSaver.EventType", "goog.net.EventType", "goog.net.XhrIo.ResponseType", "goog.net.XhrIoPool"]);
goog.addDependency("net/httpstatus.js", ["goog.net.HttpStatus"], []);
goog.addDependency("net/iframeio.js", ["goog.net.IframeIo", "goog.net.IframeIo.IncrementalDataEvent"], ["goog.Timer", "goog.Uri", "goog.debug", "goog.debug.Logger", "goog.dom", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.json", "goog.net.ErrorCode", "goog.net.EventType", "goog.reflect", "goog.string", "goog.structs", "goog.userAgent"]);
goog.addDependency("net/iframeloadmonitor.js", ["goog.net.IframeLoadMonitor"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.userAgent"]);
goog.addDependency("net/imageloader.js", ["goog.net.ImageLoader"], ["goog.array", "goog.dom", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.net.EventType", "goog.object", "goog.userAgent"]);
goog.addDependency("net/ipaddress.js", ["goog.net.IpAddress", "goog.net.Ipv4Address", "goog.net.Ipv6Address"], ["goog.array", "goog.math.Integer", "goog.object", "goog.string"]);
goog.addDependency("net/jsloader.js", ["goog.net.jsloader", "goog.net.jsloader.Error"], ["goog.array", "goog.async.Deferred", "goog.debug.Error", "goog.dom", "goog.userAgent"]);
goog.addDependency("net/jsonp.js", ["goog.net.Jsonp"], ["goog.Uri", "goog.dom", "goog.net.jsloader"]);
goog.addDependency("net/mockiframeio.js", ["goog.net.MockIFrameIo"], ["goog.events.EventTarget", "goog.json", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.IframeIo"]);
goog.addDependency("net/mockxhrlite.js", ["goog.net.MockXhrLite"], ["goog.testing.net.XhrIo"]);
goog.addDependency("net/multiiframeloadmonitor.js", ["goog.net.MultiIframeLoadMonitor"], ["goog.events", "goog.net.IframeLoadMonitor"]);
goog.addDependency("net/networkstatusmonitor.js", ["goog.net.NetworkStatusMonitor"], ["goog.events.EventTarget"]);
goog.addDependency("net/networktester.js", ["goog.net.NetworkTester"], ["goog.Timer", "goog.Uri", "goog.debug.Logger"]);
goog.addDependency("net/testdata/jsloader_test1.js", ["goog.net.testdata.jsloader_test1"], []);
goog.addDependency("net/testdata/jsloader_test2.js", ["goog.net.testdata.jsloader_test2"], []);
goog.addDependency("net/testdata/jsloader_test3.js", ["goog.net.testdata.jsloader_test3"], []);
goog.addDependency("net/testdata/jsloader_test4.js", ["goog.net.testdata.jsloader_test4"], []);
goog.addDependency("net/tmpnetwork.js", ["goog.net.tmpnetwork"], ["goog.Uri", "goog.net.ChannelDebug"]);
goog.addDependency("net/websocket.js", ["goog.net.WebSocket", "goog.net.WebSocket.ErrorEvent", "goog.net.WebSocket.EventType", "goog.net.WebSocket.MessageEvent"], ["goog.Timer", "goog.asserts", "goog.debug.Logger", "goog.debug.entryPointRegistry", "goog.events", "goog.events.Event", "goog.events.EventTarget"]);
goog.addDependency("net/wrapperxmlhttpfactory.js", ["goog.net.WrapperXmlHttpFactory"], ["goog.net.XmlHttpFactory"]);
goog.addDependency("net/xhrio.js", ["goog.net.XhrIo", "goog.net.XhrIo.ResponseType"], ["goog.Timer", "goog.array", "goog.debug.Logger", "goog.debug.entryPointRegistry", "goog.events", "goog.events.EventTarget", "goog.json", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.HttpStatus", "goog.net.XmlHttp", "goog.object", "goog.structs", "goog.structs.Map", "goog.uri.utils"]);
goog.addDependency("net/xhriopool.js", ["goog.net.XhrIoPool"], ["goog.net.XhrIo", "goog.structs", "goog.structs.PriorityPool"]);
goog.addDependency("net/xhrlite.js", ["goog.net.XhrLite"], ["goog.net.XhrIo"]);
goog.addDependency("net/xhrlitepool.js", ["goog.net.XhrLitePool"], ["goog.net.XhrIoPool"]);
goog.addDependency("net/xhrmanager.js", ["goog.net.XhrManager", "goog.net.XhrManager.Event", "goog.net.XhrManager.Request"], ["goog.Disposable", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.net.EventType", "goog.net.XhrIo", "goog.net.XhrIoPool", "goog.structs.Map"]);
goog.addDependency("net/xmlhttp.js", ["goog.net.DefaultXmlHttpFactory", "goog.net.XmlHttp", "goog.net.XmlHttp.OptionType", "goog.net.XmlHttp.ReadyState"], ["goog.net.WrapperXmlHttpFactory", "goog.net.XmlHttpFactory"]);
goog.addDependency("net/xmlhttpfactory.js", ["goog.net.XmlHttpFactory"], []);
goog.addDependency("net/xpc/crosspagechannel.js", ["goog.net.xpc.CrossPageChannel"], ["goog.Disposable", "goog.Uri", "goog.async.Deferred", "goog.async.Delay", "goog.dom", "goog.events", "goog.events.EventHandler", "goog.json", "goog.messaging.AbstractChannel", "goog.net.xpc", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.FrameElementMethodTransport", "goog.net.xpc.IframePollingTransport", "goog.net.xpc.IframeRelayTransport", "goog.net.xpc.NativeMessagingTransport", "goog.net.xpc.NixTransport", 
"goog.net.xpc.Transport", "goog.userAgent"]);
goog.addDependency("net/xpc/crosspagechannelrole.js", ["goog.net.xpc.CrossPageChannelRole"], []);
goog.addDependency("net/xpc/frameelementmethodtransport.js", ["goog.net.xpc.FrameElementMethodTransport"], ["goog.net.xpc", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport"]);
goog.addDependency("net/xpc/iframepollingtransport.js", ["goog.net.xpc.IframePollingTransport", "goog.net.xpc.IframePollingTransport.Receiver", "goog.net.xpc.IframePollingTransport.Sender"], ["goog.array", "goog.dom", "goog.net.xpc", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.userAgent"]);
goog.addDependency("net/xpc/iframerelaytransport.js", ["goog.net.xpc.IframeRelayTransport"], ["goog.dom", "goog.events", "goog.net.xpc", "goog.net.xpc.Transport", "goog.userAgent"]);
goog.addDependency("net/xpc/nativemessagingtransport.js", ["goog.net.xpc.NativeMessagingTransport"], ["goog.Timer", "goog.asserts", "goog.async.Deferred", "goog.events", "goog.events.EventHandler", "goog.net.xpc", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport"]);
goog.addDependency("net/xpc/nixtransport.js", ["goog.net.xpc.NixTransport"], ["goog.net.xpc", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.reflect"]);
goog.addDependency("net/xpc/relay.js", ["goog.net.xpc.relay"], []);
goog.addDependency("net/xpc/transport.js", ["goog.net.xpc.Transport"], ["goog.Disposable", "goog.dom", "goog.net.xpc"]);
goog.addDependency("net/xpc/xpc.js", ["goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.ChannelStates", "goog.net.xpc.TransportNames", "goog.net.xpc.TransportTypes", "goog.net.xpc.UriCfgFields"], ["goog.debug.Logger"]);
goog.addDependency("object/object.js", ["goog.object"], []);
goog.addDependency("positioning/absoluteposition.js", ["goog.positioning.AbsolutePosition"], ["goog.math.Box", "goog.math.Coordinate", "goog.math.Size", "goog.positioning", "goog.positioning.AbstractPosition"]);
goog.addDependency("positioning/abstractposition.js", ["goog.positioning.AbstractPosition"], ["goog.math.Box", "goog.math.Size", "goog.positioning.Corner"]);
goog.addDependency("positioning/anchoredposition.js", ["goog.positioning.AnchoredPosition"], ["goog.math.Box", "goog.positioning", "goog.positioning.AbstractPosition"]);
goog.addDependency("positioning/anchoredviewportposition.js", ["goog.positioning.AnchoredViewportPosition"], ["goog.math.Box", "goog.positioning", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.OverflowStatus"]);
goog.addDependency("positioning/clientposition.js", ["goog.positioning.ClientPosition"], ["goog.asserts", "goog.math.Box", "goog.math.Coordinate", "goog.math.Size", "goog.positioning", "goog.positioning.AbstractPosition", "goog.style"]);
goog.addDependency("positioning/clientposition_test.js", ["goog.positioning.clientPositionTest"], ["goog.dom", "goog.positioning.ClientPosition", "goog.style", "goog.testing.jsunit"]);
goog.addDependency("positioning/menuanchoredposition.js", ["goog.positioning.MenuAnchoredPosition"], ["goog.math.Box", "goog.math.Size", "goog.positioning", "goog.positioning.AnchoredViewportPosition", "goog.positioning.Corner", "goog.positioning.Overflow"]);
goog.addDependency("positioning/positioning.js", ["goog.positioning", "goog.positioning.Corner", "goog.positioning.CornerBit", "goog.positioning.Overflow", "goog.positioning.OverflowStatus"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.math.Box", "goog.math.Coordinate", "goog.math.Size", "goog.style", "goog.style.bidi"]);
goog.addDependency("positioning/positioning_test.js", ["goog.positioningTest"], ["goog.dom", "goog.dom.DomHelper", "goog.math.Box", "goog.math.Coordinate", "goog.math.Size", "goog.positioning", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.OverflowStatus", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"]);
goog.addDependency("positioning/viewportclientposition.js", ["goog.positioning.ViewportClientPosition"], ["goog.math.Box", "goog.math.Coordinate", "goog.math.Size", "goog.positioning.ClientPosition"]);
goog.addDependency("positioning/viewportposition.js", ["goog.positioning.ViewportPosition"], ["goog.math.Box", "goog.math.Coordinate", "goog.math.Size", "goog.positioning.AbstractPosition"]);
goog.addDependency("proto/proto.js", ["goog.proto"], ["goog.proto.Serializer"]);
goog.addDependency("proto/serializer.js", ["goog.proto.Serializer"], ["goog.json.Serializer", "goog.string"]);
goog.addDependency("proto2/descriptor.js", ["goog.proto2.Descriptor", "goog.proto2.Metadata"], ["goog.array", "goog.object", "goog.proto2.Util"]);
goog.addDependency("proto2/fielddescriptor.js", ["goog.proto2.FieldDescriptor"], ["goog.proto2.Util", "goog.string"]);
goog.addDependency("proto2/lazydeserializer.js", ["goog.proto2.LazyDeserializer"], ["goog.proto2.Message", "goog.proto2.Serializer", "goog.proto2.Util"]);
goog.addDependency("proto2/message.js", ["goog.proto2.Message"], ["goog.proto2.Descriptor", "goog.proto2.FieldDescriptor", "goog.proto2.Util", "goog.string"]);
goog.addDependency("proto2/objectserializer.js", ["goog.proto2.ObjectSerializer"], ["goog.proto2.Serializer", "goog.proto2.Util", "goog.string"]);
goog.addDependency("proto2/package_test.pb.js", ["someprotopackage.TestPackageTypes"], ["goog.proto2.Message", "proto2.TestAllTypes"]);
goog.addDependency("proto2/pbliteserializer.js", ["goog.proto2.PbLiteSerializer"], ["goog.proto2.LazyDeserializer", "goog.proto2.Util"]);
goog.addDependency("proto2/serializer.js", ["goog.proto2.Serializer"], ["goog.proto2.Descriptor", "goog.proto2.FieldDescriptor", "goog.proto2.Message", "goog.proto2.Util"]);
goog.addDependency("proto2/test.pb.js", ["proto2.TestAllTypes", "proto2.TestAllTypes.NestedEnum", "proto2.TestAllTypes.NestedMessage", "proto2.TestAllTypes.OptionalGroup", "proto2.TestAllTypes.RepeatedGroup"], ["goog.proto2.Message"]);
goog.addDependency("proto2/textformatserializer.js", ["goog.proto2.TextFormatSerializer", "goog.proto2.TextFormatSerializer.Parser"], ["goog.array", "goog.asserts", "goog.json", "goog.proto2.Serializer", "goog.proto2.Util", "goog.string"]);
goog.addDependency("proto2/textformatserializer_test.js", ["goog.proto2.TextFormatSerializerTest"], ["goog.proto2.TextFormatSerializer", "goog.testing.jsunit", "proto2.TestAllTypes"]);
goog.addDependency("proto2/util.js", ["goog.proto2.Util"], ["goog.asserts"]);
goog.addDependency("pubsub/pubsub.js", ["goog.pubsub.PubSub"], ["goog.Disposable", "goog.array"]);
goog.addDependency("reflect/reflect.js", ["goog.reflect"], []);
goog.addDependency("result/deferredadaptor.js", ["goog.result.DeferredAdaptor"], ["goog.async.Deferred", "goog.result", "goog.result.Result"]);
goog.addDependency("result/dependentresult.js", ["goog.result.DependentResult"], ["goog.result.Result"]);
goog.addDependency("result/result_interface.js", ["goog.result.Result"], ["goog.debug.Error"]);
goog.addDependency("result/resultutil.js", ["goog.result"], ["goog.array", "goog.result.DependentResult", "goog.result.Result", "goog.result.SimpleResult"]);
goog.addDependency("result/simpleresult.js", ["goog.result.SimpleResult", "goog.result.SimpleResult.StateError"], ["goog.debug.Error", "goog.result.Result"]);
goog.addDependency("soy/data.js", ["goog.soy.data", "goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind"], []);
goog.addDependency("soy/renderer.js", ["goog.soy.InjectedDataSupplier", "goog.soy.Renderer"], ["goog.asserts", "goog.dom", "goog.soy", "goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind"]);
goog.addDependency("soy/soy.js", ["goog.soy"], ["goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.soy.data", "goog.string"]);
goog.addDependency("soy/soy_test.js", ["goog.soy.testHelper"], ["goog.dom", "goog.dom.TagName", "goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind", "goog.string", "goog.userAgent"]);
goog.addDependency("spell/spellcheck.js", ["goog.spell.SpellCheck", "goog.spell.SpellCheck.WordChangedEvent"], ["goog.Timer", "goog.events.EventTarget", "goog.structs.Set"]);
goog.addDependency("stats/basicstat.js", ["goog.stats.BasicStat"], ["goog.array", "goog.debug.Logger", "goog.iter", "goog.object", "goog.string.format", "goog.structs.CircularBuffer"]);
goog.addDependency("storage/collectablestorage.js", ["goog.storage.CollectableStorage"], ["goog.array", "goog.asserts", "goog.iter", "goog.storage.ErrorCode", "goog.storage.ExpiringStorage", "goog.storage.RichStorage.Wrapper", "goog.storage.mechanism.IterableMechanism"]);
goog.addDependency("storage/encryptedstorage.js", ["goog.storage.EncryptedStorage"], ["goog.crypt", "goog.crypt.Arc4", "goog.crypt.Sha1", "goog.crypt.base64", "goog.json", "goog.json.Serializer", "goog.storage.CollectableStorage", "goog.storage.ErrorCode", "goog.storage.RichStorage", "goog.storage.RichStorage.Wrapper", "goog.storage.mechanism.IterableMechanism"]);
goog.addDependency("storage/errorcode.js", ["goog.storage.ErrorCode"], []);
goog.addDependency("storage/expiringstorage.js", ["goog.storage.ExpiringStorage"], ["goog.storage.RichStorage", "goog.storage.RichStorage.Wrapper", "goog.storage.mechanism.Mechanism"]);
goog.addDependency("storage/mechanism/errorcode.js", ["goog.storage.mechanism.ErrorCode"], []);
goog.addDependency("storage/mechanism/errorhandlingmechanism.js", ["goog.storage.mechanism.ErrorHandlingMechanism"], ["goog.storage.mechanism.Mechanism"]);
goog.addDependency("storage/mechanism/html5localstorage.js", ["goog.storage.mechanism.HTML5LocalStorage"], ["goog.storage.mechanism.HTML5WebStorage"]);
goog.addDependency("storage/mechanism/html5sessionstorage.js", ["goog.storage.mechanism.HTML5SessionStorage"], ["goog.storage.mechanism.HTML5WebStorage"]);
goog.addDependency("storage/mechanism/html5webstorage.js", ["goog.storage.mechanism.HTML5WebStorage"], ["goog.asserts", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.storage.mechanism.ErrorCode", "goog.storage.mechanism.IterableMechanism"]);
goog.addDependency("storage/mechanism/ieuserdata.js", ["goog.storage.mechanism.IEUserData"], ["goog.asserts", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.storage.mechanism.ErrorCode", "goog.storage.mechanism.IterableMechanism", "goog.structs.Map", "goog.userAgent"]);
goog.addDependency("storage/mechanism/iterablemechanism.js", ["goog.storage.mechanism.IterableMechanism"], ["goog.array", "goog.asserts", "goog.iter", "goog.iter.Iterator", "goog.storage.mechanism.Mechanism"]);
goog.addDependency("storage/mechanism/iterablemechanismtester.js", ["goog.storage.mechanism.iterableMechanismTester"], ["goog.iter.Iterator", "goog.storage.mechanism.IterableMechanism", "goog.testing.asserts"]);
goog.addDependency("storage/mechanism/mechanism.js", ["goog.storage.mechanism.Mechanism"], []);
goog.addDependency("storage/mechanism/mechanismfactory.js", ["goog.storage.mechanism.mechanismfactory"], ["goog.storage.mechanism.HTML5LocalStorage", "goog.storage.mechanism.HTML5SessionStorage", "goog.storage.mechanism.IEUserData", "goog.storage.mechanism.IterableMechanism", "goog.storage.mechanism.PrefixedMechanism"]);
goog.addDependency("storage/mechanism/mechanismseparationtester.js", ["goog.storage.mechanism.mechanismSeparationTester"], ["goog.iter.Iterator", "goog.storage.mechanism.IterableMechanism", "goog.testing.asserts"]);
goog.addDependency("storage/mechanism/mechanismsharingtester.js", ["goog.storage.mechanism.mechanismSharingTester"], ["goog.iter.Iterator", "goog.storage.mechanism.IterableMechanism", "goog.testing.asserts"]);
goog.addDependency("storage/mechanism/mechanismtester.js", ["goog.storage.mechanism.mechanismTester"], ["goog.storage.mechanism.ErrorCode", "goog.storage.mechanism.HTML5LocalStorage", "goog.storage.mechanism.Mechanism", "goog.testing.asserts", "goog.userAgent.product", "goog.userAgent.product.isVersion"]);
goog.addDependency("storage/mechanism/prefixedmechanism.js", ["goog.storage.mechanism.PrefixedMechanism"], ["goog.iter.Iterator", "goog.storage.mechanism.IterableMechanism"]);
goog.addDependency("storage/richstorage.js", ["goog.storage.RichStorage", "goog.storage.RichStorage.Wrapper"], ["goog.storage.ErrorCode", "goog.storage.Storage", "goog.storage.mechanism.Mechanism"]);
goog.addDependency("storage/storage.js", ["goog.storage.Storage"], ["goog.json", "goog.json.Serializer", "goog.storage.ErrorCode"]);
goog.addDependency("storage/storage_test.js", ["goog.storage.storage_test"], ["goog.storage.Storage", "goog.structs.Map", "goog.testing.asserts"]);
goog.addDependency("string/linkify.js", ["goog.string.linkify"], ["goog.string"]);
goog.addDependency("string/newlines.js", ["goog.string.newlines"], ["goog.array"]);
goog.addDependency("string/newlines_test.js", ["goog.string.newlinesTest"], ["goog.string.newlines", "goog.testing.jsunit"]);
goog.addDependency("string/parser.js", ["goog.string.Parser"], []);
goog.addDependency("string/path.js", ["goog.string.path"], ["goog.array", "goog.string"]);
goog.addDependency("string/string.js", ["goog.string", "goog.string.Unicode"], []);
goog.addDependency("string/string_test.js", ["goog.stringTest"], ["goog.functions", "goog.object", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.jsunit"]);
goog.addDependency("string/stringbuffer.js", ["goog.string.StringBuffer"], []);
goog.addDependency("string/stringformat.js", ["goog.string.format"], ["goog.string"]);
goog.addDependency("string/stringifier.js", ["goog.string.Stringifier"], []);
goog.addDependency("structs/avltree.js", ["goog.structs.AvlTree", "goog.structs.AvlTree.Node"], ["goog.structs", "goog.structs.Collection"]);
goog.addDependency("structs/circularbuffer.js", ["goog.structs.CircularBuffer"], []);
goog.addDependency("structs/collection.js", ["goog.structs.Collection"], []);
goog.addDependency("structs/heap.js", ["goog.structs.Heap"], ["goog.array", "goog.object", "goog.structs.Node"]);
goog.addDependency("structs/inversionmap.js", ["goog.structs.InversionMap"], ["goog.array"]);
goog.addDependency("structs/linkedmap.js", ["goog.structs.LinkedMap"], ["goog.structs.Map"]);
goog.addDependency("structs/map.js", ["goog.structs.Map"], ["goog.iter.Iterator", "goog.iter.StopIteration", "goog.object", "goog.structs"]);
goog.addDependency("structs/node.js", ["goog.structs.Node"], []);
goog.addDependency("structs/pool.js", ["goog.structs.Pool"], ["goog.Disposable", "goog.structs.Queue", "goog.structs.Set"]);
goog.addDependency("structs/prioritypool.js", ["goog.structs.PriorityPool"], ["goog.structs.Pool", "goog.structs.PriorityQueue"]);
goog.addDependency("structs/priorityqueue.js", ["goog.structs.PriorityQueue"], ["goog.structs", "goog.structs.Heap"]);
goog.addDependency("structs/quadtree.js", ["goog.structs.QuadTree", "goog.structs.QuadTree.Node", "goog.structs.QuadTree.Point"], ["goog.math.Coordinate"]);
goog.addDependency("structs/queue.js", ["goog.structs.Queue"], ["goog.array"]);
goog.addDependency("structs/set.js", ["goog.structs.Set"], ["goog.structs", "goog.structs.Collection", "goog.structs.Map"]);
goog.addDependency("structs/simplepool.js", ["goog.structs.SimplePool"], ["goog.Disposable"]);
goog.addDependency("structs/stringset.js", ["goog.structs.StringSet"], ["goog.iter"]);
goog.addDependency("structs/structs.js", ["goog.structs"], ["goog.array", "goog.object"]);
goog.addDependency("structs/treenode.js", ["goog.structs.TreeNode"], ["goog.array", "goog.asserts", "goog.structs.Node"]);
goog.addDependency("structs/trie.js", ["goog.structs.Trie"], ["goog.object", "goog.structs"]);
goog.addDependency("style/bidi.js", ["goog.style.bidi"], ["goog.dom", "goog.style", "goog.userAgent"]);
goog.addDependency("style/cursor.js", ["goog.style.cursor"], ["goog.userAgent"]);
goog.addDependency("style/style.js", ["goog.style"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.vendor", "goog.math.Box", "goog.math.Coordinate", "goog.math.Rect", "goog.math.Size", "goog.object", "goog.string", "goog.userAgent"]);
goog.addDependency("style/style_test.js", ["goog.style_test"], ["goog.array", "goog.color", "goog.dom", "goog.events.BrowserEvent", "goog.math.Box", "goog.math.Coordinate", "goog.math.Rect", "goog.math.Size", "goog.object", "goog.string", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"]);
goog.addDependency("style/stylescrollbartester.js", ["goog.styleScrollbarTester"], ["goog.dom", "goog.style", "goog.testing.asserts"]);
goog.addDependency("style/transition.js", ["goog.style.transition", "goog.style.transition.Css3Property"], ["goog.array", "goog.asserts", "goog.dom.vendor", "goog.style", "goog.userAgent"]);
goog.addDependency("testing/asserts.js", ["goog.testing.JsUnitException", "goog.testing.asserts"], ["goog.testing.stacktrace"]);
goog.addDependency("testing/async/mockcontrol.js", ["goog.testing.async.MockControl"], ["goog.asserts", "goog.async.Deferred", "goog.debug", "goog.testing.asserts", "goog.testing.mockmatchers.IgnoreArgument"]);
goog.addDependency("testing/asynctestcase.js", ["goog.testing.AsyncTestCase", "goog.testing.AsyncTestCase.ControlBreakingException"], ["goog.testing.TestCase", "goog.testing.TestCase.Test", "goog.testing.asserts"]);
goog.addDependency("testing/benchmark.js", ["goog.testing.benchmark"], ["goog.dom", "goog.dom.TagName", "goog.testing.PerformanceTable", "goog.testing.PerformanceTimer", "goog.testing.TestCase"]);
goog.addDependency("testing/benchmarks/jsbinarysizebutton.js", ["goog.ui.benchmarks.jsbinarysizebutton"], ["goog.array", "goog.dom", "goog.events", "goog.ui.Button", "goog.ui.ButtonSide", "goog.ui.Component.EventType", "goog.ui.CustomButton"]);
goog.addDependency("testing/benchmarks/jsbinarysizetoolbar.js", ["goog.ui.benchmarks.jsbinarysizetoolbar"], ["goog.array", "goog.dom", "goog.events", "goog.object", "goog.ui.Option", "goog.ui.Toolbar", "goog.ui.ToolbarButton", "goog.ui.ToolbarSelect", "goog.ui.ToolbarSeparator"]);
goog.addDependency("testing/continuationtestcase.js", ["goog.testing.ContinuationTestCase", "goog.testing.ContinuationTestCase.Step", "goog.testing.ContinuationTestCase.Test"], ["goog.array", "goog.events.EventHandler", "goog.testing.TestCase", "goog.testing.TestCase.Test", "goog.testing.asserts"]);
goog.addDependency("testing/deferredtestcase.js", ["goog.testing.DeferredTestCase"], ["goog.async.Deferred", "goog.testing.AsyncTestCase", "goog.testing.TestCase"]);
goog.addDependency("testing/dom.js", ["goog.testing.dom"], ["goog.dom", "goog.dom.NodeIterator", "goog.dom.NodeType", "goog.dom.TagIterator", "goog.dom.TagName", "goog.dom.classes", "goog.iter", "goog.object", "goog.string", "goog.style", "goog.testing.asserts", "goog.userAgent"]);
goog.addDependency("testing/editor/dom.js", ["goog.testing.editor.dom"], ["goog.dom.NodeType", "goog.dom.TagIterator", "goog.dom.TagWalkType", "goog.iter", "goog.string", "goog.testing.asserts"]);
goog.addDependency("testing/editor/fieldmock.js", ["goog.testing.editor.FieldMock"], ["goog.dom", "goog.dom.Range", "goog.editor.Field", "goog.testing.LooseMock", "goog.testing.mockmatchers"]);
goog.addDependency("testing/editor/testhelper.js", ["goog.testing.editor.TestHelper"], ["goog.Disposable", "goog.dom", "goog.dom.Range", "goog.editor.BrowserFeature", "goog.editor.node", "goog.editor.plugins.AbstractBubblePlugin", "goog.testing.dom"]);
goog.addDependency("testing/events/eventobserver.js", ["goog.testing.events.EventObserver"], ["goog.array"]);
goog.addDependency("testing/events/events.js", ["goog.testing.events", "goog.testing.events.Event"], ["goog.Disposable", "goog.dom.NodeType", "goog.events", "goog.events.BrowserEvent", "goog.events.BrowserFeature", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.Listenable", "goog.object", "goog.style", "goog.userAgent"]);
goog.addDependency("testing/events/matchers.js", ["goog.testing.events.EventMatcher"], ["goog.events.Event", "goog.testing.mockmatchers.ArgumentMatcher"]);
goog.addDependency("testing/events/onlinehandler.js", ["goog.testing.events.OnlineHandler"], ["goog.events.EventTarget", "goog.net.NetworkStatusMonitor"]);
goog.addDependency("testing/expectedfailures.js", ["goog.testing.ExpectedFailures"], ["goog.debug.DivConsole", "goog.debug.Logger", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.style", "goog.testing.JsUnitException", "goog.testing.TestCase", "goog.testing.asserts"]);
goog.addDependency("testing/fs/blob.js", ["goog.testing.fs.Blob"], ["goog.crypt.base64"]);
goog.addDependency("testing/fs/entry.js", ["goog.testing.fs.DirectoryEntry", "goog.testing.fs.Entry", "goog.testing.fs.FileEntry"], ["goog.Timer", "goog.array", "goog.async.Deferred", "goog.fs.DirectoryEntry", "goog.fs.DirectoryEntry.Behavior", "goog.fs.Error", "goog.functions", "goog.object", "goog.string", "goog.testing.fs.File", "goog.testing.fs.FileWriter"]);
goog.addDependency("testing/fs/file.js", ["goog.testing.fs.File"], ["goog.testing.fs.Blob"]);
goog.addDependency("testing/fs/filereader.js", ["goog.testing.fs.FileReader"], ["goog.Timer", "goog.events.EventTarget", "goog.fs.Error", "goog.fs.FileReader.EventType", "goog.fs.FileReader.ReadyState", "goog.testing.fs.File", "goog.testing.fs.ProgressEvent"]);
goog.addDependency("testing/fs/filesystem.js", ["goog.testing.fs.FileSystem"], ["goog.testing.fs.DirectoryEntry"]);
goog.addDependency("testing/fs/filewriter.js", ["goog.testing.fs.FileWriter"], ["goog.Timer", "goog.events.Event", "goog.events.EventTarget", "goog.fs.Error", "goog.fs.FileSaver.EventType", "goog.fs.FileSaver.ReadyState", "goog.string", "goog.testing.fs.File", "goog.testing.fs.ProgressEvent"]);
goog.addDependency("testing/fs/fs.js", ["goog.testing.fs"], ["goog.Timer", "goog.array", "goog.async.Deferred", "goog.fs", "goog.testing.fs.Blob", "goog.testing.fs.FileSystem"]);
goog.addDependency("testing/fs/progressevent.js", ["goog.testing.fs.ProgressEvent"], ["goog.events.Event"]);
goog.addDependency("testing/functionmock.js", ["goog.testing", "goog.testing.FunctionMock", "goog.testing.GlobalFunctionMock", "goog.testing.MethodMock"], ["goog.object", "goog.testing.LooseMock", "goog.testing.Mock", "goog.testing.MockInterface", "goog.testing.PropertyReplacer", "goog.testing.StrictMock"]);
goog.addDependency("testing/graphics.js", ["goog.testing.graphics"], ["goog.graphics.Path.Segment", "goog.testing.asserts"]);
goog.addDependency("testing/jsunit.js", ["goog.testing.jsunit"], ["goog.testing.TestCase", "goog.testing.TestRunner"]);
goog.addDependency("testing/loosemock.js", ["goog.testing.LooseExpectationCollection", "goog.testing.LooseMock"], ["goog.array", "goog.structs.Map", "goog.testing.Mock"]);
goog.addDependency("testing/messaging/mockmessagechannel.js", ["goog.testing.messaging.MockMessageChannel"], ["goog.messaging.AbstractChannel", "goog.testing.asserts"]);
goog.addDependency("testing/messaging/mockmessageevent.js", ["goog.testing.messaging.MockMessageEvent"], ["goog.events.BrowserEvent", "goog.events.EventType", "goog.testing.events"]);
goog.addDependency("testing/messaging/mockmessageport.js", ["goog.testing.messaging.MockMessagePort"], ["goog.events.EventTarget"]);
goog.addDependency("testing/messaging/mockportnetwork.js", ["goog.testing.messaging.MockPortNetwork"], ["goog.messaging.PortNetwork", "goog.testing.messaging.MockMessageChannel"]);
goog.addDependency("testing/mock.js", ["goog.testing.Mock", "goog.testing.MockExpectation"], ["goog.array", "goog.object", "goog.testing.JsUnitException", "goog.testing.MockInterface", "goog.testing.mockmatchers"]);
goog.addDependency("testing/mockclassfactory.js", ["goog.testing.MockClassFactory", "goog.testing.MockClassRecord"], ["goog.array", "goog.object", "goog.testing.LooseMock", "goog.testing.StrictMock", "goog.testing.TestCase", "goog.testing.mockmatchers"]);
goog.addDependency("testing/mockclock.js", ["goog.testing.MockClock"], ["goog.Disposable", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.events.Event"]);
goog.addDependency("testing/mockcontrol.js", ["goog.testing.MockControl"], ["goog.array", "goog.testing", "goog.testing.LooseMock", "goog.testing.MockInterface", "goog.testing.StrictMock"]);
goog.addDependency("testing/mockinterface.js", ["goog.testing.MockInterface"], []);
goog.addDependency("testing/mockmatchers.js", ["goog.testing.mockmatchers", "goog.testing.mockmatchers.ArgumentMatcher", "goog.testing.mockmatchers.IgnoreArgument", "goog.testing.mockmatchers.InstanceOf", "goog.testing.mockmatchers.ObjectEquals", "goog.testing.mockmatchers.RegexpMatch", "goog.testing.mockmatchers.SaveArgument", "goog.testing.mockmatchers.TypeOf"], ["goog.array", "goog.dom", "goog.testing.asserts"]);
goog.addDependency("testing/mockrandom.js", ["goog.testing.MockRandom"], ["goog.Disposable"]);
goog.addDependency("testing/mockrange.js", ["goog.testing.MockRange"], ["goog.dom.AbstractRange", "goog.testing.LooseMock"]);
goog.addDependency("testing/mockstorage.js", ["goog.testing.MockStorage"], ["goog.structs.Map"]);
goog.addDependency("testing/mockuseragent.js", ["goog.testing.MockUserAgent"], ["goog.Disposable", "goog.userAgent"]);
goog.addDependency("testing/multitestrunner.js", ["goog.testing.MultiTestRunner", "goog.testing.MultiTestRunner.TestFrame"], ["goog.Timer", "goog.array", "goog.dom", "goog.dom.classes", "goog.events.EventHandler", "goog.functions", "goog.string", "goog.ui.Component", "goog.ui.ServerChart", "goog.ui.TableSorter"]);
goog.addDependency("testing/net/xhrio.js", ["goog.testing.net.XhrIo"], ["goog.array", "goog.dom.xml", "goog.events", "goog.events.EventTarget", "goog.json", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.HttpStatus", "goog.net.XhrIo", "goog.net.XmlHttp", "goog.object", "goog.structs.Map"]);
goog.addDependency("testing/net/xhriopool.js", ["goog.testing.net.XhrIoPool"], ["goog.net.XhrIoPool", "goog.testing.net.XhrIo"]);
goog.addDependency("testing/objectpropertystring.js", ["goog.testing.ObjectPropertyString"], []);
goog.addDependency("testing/performancetable.js", ["goog.testing.PerformanceTable"], ["goog.dom", "goog.testing.PerformanceTimer"]);
goog.addDependency("testing/performancetimer.js", ["goog.testing.PerformanceTimer", "goog.testing.PerformanceTimer.Task"], ["goog.array", "goog.async.Deferred", "goog.math"]);
goog.addDependency("testing/propertyreplacer.js", ["goog.testing.PropertyReplacer"], ["goog.userAgent"]);
goog.addDependency("testing/proto2/proto2.js", ["goog.testing.proto2"], ["goog.proto2.Message", "goog.testing.asserts"]);
goog.addDependency("testing/pseudorandom.js", ["goog.testing.PseudoRandom"], ["goog.Disposable"]);
goog.addDependency("testing/recordfunction.js", ["goog.testing.FunctionCall", "goog.testing.recordConstructor", "goog.testing.recordFunction"], []);
goog.addDependency("testing/shardingtestcase.js", ["goog.testing.ShardingTestCase"], ["goog.asserts", "goog.testing.TestCase"]);
goog.addDependency("testing/singleton.js", ["goog.testing.singleton"], []);
goog.addDependency("testing/stacktrace.js", ["goog.testing.stacktrace", "goog.testing.stacktrace.Frame"], []);
goog.addDependency("testing/storage/fakemechanism.js", ["goog.testing.storage.FakeMechanism"], ["goog.storage.mechanism.IterableMechanism", "goog.structs.Map"]);
goog.addDependency("testing/strictmock.js", ["goog.testing.StrictMock"], ["goog.array", "goog.testing.Mock"]);
goog.addDependency("testing/style/layoutasserts.js", ["goog.testing.style.layoutasserts"], ["goog.style", "goog.testing.asserts", "goog.testing.style"]);
goog.addDependency("testing/style/style.js", ["goog.testing.style"], ["goog.dom", "goog.math.Rect", "goog.style"]);
goog.addDependency("testing/testcase.js", ["goog.testing.TestCase", "goog.testing.TestCase.Error", "goog.testing.TestCase.Order", "goog.testing.TestCase.Result", "goog.testing.TestCase.Test"], ["goog.object", "goog.testing.asserts", "goog.testing.stacktrace"]);
goog.addDependency("testing/testqueue.js", ["goog.testing.TestQueue"], []);
goog.addDependency("testing/testrunner.js", ["goog.testing.TestRunner"], ["goog.testing.TestCase"]);
goog.addDependency("testing/ui/rendererasserts.js", ["goog.testing.ui.rendererasserts"], ["goog.testing.asserts"]);
goog.addDependency("testing/ui/rendererharness.js", ["goog.testing.ui.RendererHarness"], ["goog.Disposable", "goog.dom.NodeType", "goog.testing.asserts", "goog.testing.dom"]);
goog.addDependency("testing/ui/style.js", ["goog.testing.ui.style"], ["goog.array", "goog.dom", "goog.dom.classes", "goog.testing.asserts"]);
goog.addDependency("timer/timer.js", ["goog.Timer"], ["goog.events.EventTarget"]);
goog.addDependency("tweak/entries.js", ["goog.tweak.BaseEntry", "goog.tweak.BasePrimitiveSetting", "goog.tweak.BaseSetting", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.StringSetting"], ["goog.array", "goog.asserts", "goog.debug.Logger", "goog.object"]);
goog.addDependency("tweak/registry.js", ["goog.tweak.Registry"], ["goog.asserts", "goog.debug.Logger", "goog.object", "goog.string", "goog.tweak.BaseEntry", "goog.uri.utils"]);
goog.addDependency("tweak/testhelpers.js", ["goog.tweak.testhelpers"], ["goog.tweak", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.Registry", "goog.tweak.StringSetting"]);
goog.addDependency("tweak/tweak.js", ["goog.tweak", "goog.tweak.ConfigParams"], ["goog.asserts", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.Registry", "goog.tweak.StringSetting"]);
goog.addDependency("tweak/tweakui.js", ["goog.tweak.EntriesPanel", "goog.tweak.TweakUi"], ["goog.array", "goog.asserts", "goog.dom.DomHelper", "goog.object", "goog.style", "goog.tweak", "goog.ui.Zippy", "goog.userAgent"]);
goog.addDependency("ui/abstractspellchecker.js", ["goog.ui.AbstractSpellChecker", "goog.ui.AbstractSpellChecker.AsyncResult"], ["goog.a11y.aria", "goog.asserts", "goog.dom", "goog.dom.classes", "goog.dom.selection", "goog.events.EventType", "goog.math.Coordinate", "goog.spell.SpellCheck", "goog.structs.Set", "goog.style", "goog.ui.MenuItem", "goog.ui.MenuSeparator", "goog.ui.PopupMenu"]);
goog.addDependency("ui/ac/ac.js", ["goog.ui.ac"], ["goog.ui.ac.ArrayMatcher", "goog.ui.ac.AutoComplete", "goog.ui.ac.InputHandler", "goog.ui.ac.Renderer"]);
goog.addDependency("ui/ac/arraymatcher.js", ["goog.ui.ac.ArrayMatcher"], ["goog.string"]);
goog.addDependency("ui/ac/autocomplete.js", ["goog.ui.ac.AutoComplete", "goog.ui.ac.AutoComplete.EventType"], ["goog.events", "goog.events.EventTarget"]);
goog.addDependency("ui/ac/inputhandler.js", ["goog.ui.ac.InputHandler"], ["goog.Disposable", "goog.Timer", "goog.a11y.aria", "goog.dom", "goog.dom.selection", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.string", "goog.userAgent", "goog.userAgent.product"]);
goog.addDependency("ui/ac/remote.js", ["goog.ui.ac.Remote"], ["goog.ui.ac.AutoComplete", "goog.ui.ac.InputHandler", "goog.ui.ac.RemoteArrayMatcher", "goog.ui.ac.Renderer"]);
goog.addDependency("ui/ac/remotearraymatcher.js", ["goog.ui.ac.RemoteArrayMatcher"], ["goog.Disposable", "goog.Uri", "goog.events", "goog.json", "goog.net.XhrIo"]);
goog.addDependency("ui/ac/renderer.js", ["goog.ui.ac.Renderer", "goog.ui.ac.Renderer.CustomRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.dispose", "goog.dom", "goog.dom.classes", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.fx.dom.FadeInAndShow", "goog.fx.dom.FadeOutAndHide", "goog.positioning", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.string", "goog.style", "goog.ui.IdGenerator", "goog.ui.ac.AutoComplete.EventType", 
"goog.userAgent"]);
goog.addDependency("ui/ac/renderoptions.js", ["goog.ui.ac.RenderOptions"], []);
goog.addDependency("ui/ac/richinputhandler.js", ["goog.ui.ac.RichInputHandler"], ["goog.ui.ac.InputHandler"]);
goog.addDependency("ui/ac/richremote.js", ["goog.ui.ac.RichRemote"], ["goog.ui.ac.AutoComplete", "goog.ui.ac.Remote", "goog.ui.ac.Renderer", "goog.ui.ac.RichInputHandler", "goog.ui.ac.RichRemoteArrayMatcher"]);
goog.addDependency("ui/ac/richremotearraymatcher.js", ["goog.ui.ac.RichRemoteArrayMatcher"], ["goog.ui.ac.RemoteArrayMatcher"]);
goog.addDependency("ui/activitymonitor.js", ["goog.ui.ActivityMonitor"], ["goog.array", "goog.dom", "goog.events", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType"]);
goog.addDependency("ui/advancedtooltip.js", ["goog.ui.AdvancedTooltip"], ["goog.events.EventType", "goog.math.Coordinate", "goog.ui.Tooltip", "goog.userAgent"]);
goog.addDependency("ui/animatedzippy.js", ["goog.ui.AnimatedZippy"], ["goog.dom", "goog.events", "goog.fx.Animation", "goog.fx.Animation.EventType", "goog.fx.Transition.EventType", "goog.fx.easing", "goog.ui.Zippy", "goog.ui.ZippyEvent"]);
goog.addDependency("ui/attachablemenu.js", ["goog.ui.AttachableMenu"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.classes", "goog.events.Event", "goog.events.KeyCodes", "goog.string", "goog.style", "goog.ui.ItemEvent", "goog.ui.MenuBase", "goog.ui.PopupBase", "goog.userAgent"]);
goog.addDependency("ui/bidiinput.js", ["goog.ui.BidiInput"], ["goog.events", "goog.events.InputHandler", "goog.i18n.bidi", "goog.ui.Component"]);
goog.addDependency("ui/bubble.js", ["goog.ui.Bubble"], ["goog.Timer", "goog.events", "goog.events.EventType", "goog.math.Box", "goog.positioning", "goog.positioning.AbsolutePosition", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.CornerBit", "goog.style", "goog.ui.Component", "goog.ui.Popup"]);
goog.addDependency("ui/button.js", ["goog.ui.Button", "goog.ui.Button.Side"], ["goog.events.KeyCodes", "goog.ui.ButtonRenderer", "goog.ui.ButtonSide", "goog.ui.Control", "goog.ui.ControlContent", "goog.ui.NativeButtonRenderer"]);
goog.addDependency("ui/buttonrenderer.js", ["goog.ui.ButtonRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.string", "goog.ui.ButtonSide", "goog.ui.Component.State", "goog.ui.ControlRenderer"]);
goog.addDependency("ui/buttonside.js", ["goog.ui.ButtonSide"], []);
goog.addDependency("ui/charcounter.js", ["goog.ui.CharCounter", "goog.ui.CharCounter.Display"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.InputHandler"]);
goog.addDependency("ui/charpicker.js", ["goog.ui.CharPicker"], ["goog.a11y.aria", "goog.array", "goog.asserts", "goog.dom", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.events.InputHandler", "goog.events.KeyHandler", "goog.i18n.CharListDecompressor", "goog.i18n.uChar", "goog.i18n.uChar.NameFetcher", "goog.structs.Set", "goog.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.ContainerScroller", "goog.ui.FlatButtonRenderer", "goog.ui.HoverCard", "goog.ui.LabelInput", 
"goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.Tooltip.ElementTooltipPosition"]);
goog.addDependency("ui/checkbox.js", ["goog.ui.Checkbox", "goog.ui.Checkbox.State"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.events.EventType", "goog.events.KeyCodes", "goog.ui.CheckboxRenderer", "goog.ui.Component.EventType", "goog.ui.Component.State", "goog.ui.Control", "goog.ui.registry"]);
goog.addDependency("ui/checkboxmenuitem.js", ["goog.ui.CheckBoxMenuItem"], ["goog.ui.MenuItem", "goog.ui.registry"]);
goog.addDependency("ui/checkboxrenderer.js", ["goog.ui.CheckboxRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom.classes", "goog.object", "goog.ui.ControlRenderer"]);
goog.addDependency("ui/colorbutton.js", ["goog.ui.ColorButton"], ["goog.ui.Button", "goog.ui.ColorButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/colorbuttonrenderer.js", ["goog.ui.ColorButtonRenderer"], ["goog.dom.classes", "goog.functions", "goog.ui.ColorMenuButtonRenderer"]);
goog.addDependency("ui/colormenubutton.js", ["goog.ui.ColorMenuButton"], ["goog.array", "goog.object", "goog.ui.ColorMenuButtonRenderer", "goog.ui.ColorPalette", "goog.ui.Component", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.registry"]);
goog.addDependency("ui/colormenubuttonrenderer.js", ["goog.ui.ColorMenuButtonRenderer"], ["goog.color", "goog.dom.classes", "goog.ui.ControlContent", "goog.ui.MenuButtonRenderer", "goog.userAgent"]);
goog.addDependency("ui/colorpalette.js", ["goog.ui.ColorPalette"], ["goog.array", "goog.color", "goog.style", "goog.ui.Palette", "goog.ui.PaletteRenderer"]);
goog.addDependency("ui/colorpicker.js", ["goog.ui.ColorPicker", "goog.ui.ColorPicker.EventType"], ["goog.ui.ColorPalette", "goog.ui.Component", "goog.ui.Component.State"]);
goog.addDependency("ui/colorsplitbehavior.js", ["goog.ui.ColorSplitBehavior"], ["goog.ui.ColorButton", "goog.ui.ColorMenuButton", "goog.ui.SplitBehavior"]);
goog.addDependency("ui/combobox.js", ["goog.ui.ComboBox", "goog.ui.ComboBoxItem"], ["goog.Timer", "goog.debug.Logger", "goog.dom.classlist", "goog.events", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.ItemEvent", "goog.ui.LabelInput", "goog.ui.Menu", "goog.ui.MenuItem", "goog.ui.registry", "goog.userAgent"]);
goog.addDependency("ui/component.js", ["goog.ui.Component", "goog.ui.Component.Error", "goog.ui.Component.EventType", "goog.ui.Component.State"], ["goog.array", "goog.array.ArrayLike", "goog.dom", "goog.events.EventHandler", "goog.events.EventTarget", "goog.object", "goog.style", "goog.ui.IdGenerator"]);
goog.addDependency("ui/container.js", ["goog.ui.Container", "goog.ui.Container.EventType", "goog.ui.Container.Orientation"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.events.KeyHandler.EventType", "goog.object", "goog.style", "goog.ui.Component", "goog.ui.Component.Error", "goog.ui.Component.EventType", "goog.ui.Component.State", "goog.ui.ContainerRenderer", "goog.ui.Control"]);
goog.addDependency("ui/containerrenderer.js", ["goog.ui.ContainerRenderer"], ["goog.a11y.aria", "goog.array", "goog.asserts", "goog.dom.NodeType", "goog.dom.classes", "goog.string", "goog.style", "goog.ui.registry", "goog.userAgent"]);
goog.addDependency("ui/containerscroller.js", ["goog.ui.ContainerScroller"], ["goog.Timer", "goog.events.EventHandler", "goog.style", "goog.ui.Component", "goog.ui.Component.EventType", "goog.ui.Container.EventType"]);
goog.addDependency("ui/control.js", ["goog.ui.Control"], ["goog.array", "goog.dom", "goog.events.BrowserEvent.MouseButton", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.events.KeyHandler.EventType", "goog.string", "goog.ui.Component", "goog.ui.Component.Error", "goog.ui.Component.EventType", "goog.ui.Component.State", "goog.ui.ControlContent", "goog.ui.ControlRenderer", "goog.ui.decorate", "goog.ui.registry", "goog.userAgent"]);
goog.addDependency("ui/controlcontent.js", ["goog.ui.ControlContent"], []);
goog.addDependency("ui/controlrenderer.js", ["goog.ui.ControlRenderer"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.classes", "goog.object", "goog.style", "goog.ui.Component", "goog.userAgent"]);
goog.addDependency("ui/cookieeditor.js", ["goog.ui.CookieEditor"], ["goog.dom", "goog.dom.TagName", "goog.events.EventType", "goog.net.cookies", "goog.string", "goog.style", "goog.ui.Component"]);
goog.addDependency("ui/css3buttonrenderer.js", ["goog.ui.Css3ButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.dom.classes", "goog.ui.Button", "goog.ui.ButtonRenderer", "goog.ui.ControlContent", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"]);
goog.addDependency("ui/css3menubuttonrenderer.js", ["goog.ui.Css3MenuButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.ui.ControlContent", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.MenuButton", "goog.ui.MenuButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/cssnames.js", ["goog.ui.INLINE_BLOCK_CLASSNAME"], []);
goog.addDependency("ui/custombutton.js", ["goog.ui.CustomButton"], ["goog.ui.Button", "goog.ui.ControlContent", "goog.ui.CustomButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/custombuttonrenderer.js", ["goog.ui.CustomButtonRenderer"], ["goog.a11y.aria.Role", "goog.dom", "goog.dom.classes", "goog.string", "goog.ui.ButtonRenderer", "goog.ui.ControlContent", "goog.ui.INLINE_BLOCK_CLASSNAME"]);
goog.addDependency("ui/customcolorpalette.js", ["goog.ui.CustomColorPalette"], ["goog.color", "goog.dom", "goog.dom.classes", "goog.ui.ColorPalette", "goog.ui.Component"]);
goog.addDependency("ui/datepicker.js", ["goog.ui.DatePicker", "goog.ui.DatePicker.Events", "goog.ui.DatePickerEvent"], ["goog.a11y.aria", "goog.asserts", "goog.date", "goog.date.Date", "goog.date.Interval", "goog.dom", "goog.dom.NodeType", "goog.dom.classes", "goog.events.Event", "goog.events.EventType", "goog.events.KeyHandler", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeSymbols", "goog.style", "goog.ui.Component", "goog.ui.IdGenerator"]);
goog.addDependency("ui/decorate.js", ["goog.ui.decorate"], ["goog.ui.registry"]);
goog.addDependency("ui/dialog.js", ["goog.ui.Dialog", "goog.ui.Dialog.ButtonSet", "goog.ui.Dialog.ButtonSet.DefaultButtons", "goog.ui.Dialog.DefaultButtonCaptions", "goog.ui.Dialog.DefaultButtonKeys", "goog.ui.Dialog.Event", "goog.ui.Dialog.EventType"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classes", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", "goog.fx.Dragger", 
"goog.math.Rect", "goog.structs", "goog.structs.Map", "goog.style", "goog.ui.ModalPopup", "goog.userAgent"]);
goog.addDependency("ui/dimensionpicker.js", ["goog.ui.DimensionPicker"], ["goog.events.EventType", "goog.math.Size", "goog.ui.Control", "goog.ui.DimensionPickerRenderer", "goog.ui.registry"]);
goog.addDependency("ui/dimensionpickerrenderer.js", ["goog.ui.DimensionPickerRenderer"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.i18n.bidi", "goog.style", "goog.ui.ControlRenderer", "goog.userAgent"]);
goog.addDependency("ui/dragdropdetector.js", ["goog.ui.DragDropDetector", "goog.ui.DragDropDetector.EventType", "goog.ui.DragDropDetector.ImageDropEvent", "goog.ui.DragDropDetector.LinkDropEvent"], ["goog.dom", "goog.dom.TagName", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Coordinate", "goog.string", "goog.style", "goog.userAgent"]);
goog.addDependency("ui/drilldownrow.js", ["goog.ui.DrilldownRow"], ["goog.dom", "goog.dom.classes", "goog.events", "goog.ui.Component"]);
goog.addDependency("ui/editor/abstractdialog.js", ["goog.ui.editor.AbstractDialog", "goog.ui.editor.AbstractDialog.Builder", "goog.ui.editor.AbstractDialog.EventType"], ["goog.dom", "goog.dom.classes", "goog.events.EventTarget", "goog.ui.Dialog", "goog.ui.Dialog.ButtonSet", "goog.ui.Dialog.DefaultButtonKeys", "goog.ui.Dialog.Event", "goog.ui.Dialog.EventType"]);
goog.addDependency("ui/editor/bubble.js", ["goog.ui.editor.Bubble"], ["goog.debug.Logger", "goog.dom", "goog.dom.ViewportSizeMonitor", "goog.editor.style", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.math.Box", "goog.positioning", "goog.string", "goog.style", "goog.ui.Component.EventType", "goog.ui.PopupBase", "goog.ui.PopupBase.EventType", "goog.userAgent"]);
goog.addDependency("ui/editor/defaulttoolbar.js", ["goog.ui.editor.ButtonDescriptor", "goog.ui.editor.DefaultToolbar"], ["goog.dom", "goog.dom.TagName", "goog.dom.classes", "goog.editor.Command", "goog.style", "goog.ui.editor.ToolbarFactory", "goog.ui.editor.messages", "goog.userAgent"]);
goog.addDependency("ui/editor/equationeditordialog.js", ["goog.ui.editor.EquationEditorDialog"], ["goog.editor.Command", "goog.ui.editor.AbstractDialog", "goog.ui.editor.EquationEditorOkEvent", "goog.ui.equation.ChangeEvent", "goog.ui.equation.TexEditor"]);
goog.addDependency("ui/editor/equationeditorokevent.js", ["goog.ui.editor.EquationEditorOkEvent"], ["goog.events.Event", "goog.ui.editor.AbstractDialog"]);
goog.addDependency("ui/editor/linkdialog.js", ["goog.ui.editor.LinkDialog", "goog.ui.editor.LinkDialog.BeforeTestLinkEvent", "goog.ui.editor.LinkDialog.EventType", "goog.ui.editor.LinkDialog.OkEvent"], ["goog.dom", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Link", "goog.editor.focus", "goog.editor.node", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventType", "goog.events.InputHandler", "goog.string", "goog.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.LinkButtonRenderer", 
"goog.ui.editor.AbstractDialog", "goog.ui.editor.TabPane", "goog.ui.editor.messages", "goog.userAgent", "goog.window"]);
goog.addDependency("ui/editor/messages.js", ["goog.ui.editor.messages"], []);
goog.addDependency("ui/editor/tabpane.js", ["goog.ui.editor.TabPane"], ["goog.dom.TagName", "goog.dom.classes", "goog.events.EventHandler", "goog.events.EventType", "goog.style", "goog.ui.Component", "goog.ui.Control", "goog.ui.Tab", "goog.ui.TabBar"]);
goog.addDependency("ui/editor/toolbarcontroller.js", ["goog.ui.editor.ToolbarController"], ["goog.editor.Field.EventType", "goog.events.EventHandler", "goog.events.EventTarget", "goog.ui.Component.EventType"]);
goog.addDependency("ui/editor/toolbarfactory.js", ["goog.ui.editor.ToolbarFactory"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.string", "goog.string.Unicode", "goog.style", "goog.ui.Component", "goog.ui.Container", "goog.ui.Option", "goog.ui.Toolbar", "goog.ui.ToolbarButton", "goog.ui.ToolbarColorMenuButton", "goog.ui.ToolbarMenuButton", "goog.ui.ToolbarRenderer", "goog.ui.ToolbarSelect", "goog.userAgent"]);
goog.addDependency("ui/emoji/emoji.js", ["goog.ui.emoji.Emoji"], []);
goog.addDependency("ui/emoji/emojipalette.js", ["goog.ui.emoji.EmojiPalette"], ["goog.events.Event", "goog.events.EventType", "goog.net.ImageLoader", "goog.ui.Palette", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPaletteRenderer"]);
goog.addDependency("ui/emoji/emojipaletterenderer.js", ["goog.ui.emoji.EmojiPaletteRenderer"], ["goog.a11y.aria", "goog.dom", "goog.ui.PaletteRenderer", "goog.ui.emoji.Emoji", "goog.ui.emoji.SpriteInfo"]);
goog.addDependency("ui/emoji/emojipicker.js", ["goog.ui.emoji.EmojiPicker"], ["goog.debug.Logger", "goog.dom", "goog.ui.Component", "goog.ui.TabPane", "goog.ui.TabPane.TabPage", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPalette", "goog.ui.emoji.EmojiPaletteRenderer", "goog.ui.emoji.ProgressiveEmojiPaletteRenderer"]);
goog.addDependency("ui/emoji/popupemojipicker.js", ["goog.ui.emoji.PopupEmojiPicker"], ["goog.dom", "goog.events.EventType", "goog.positioning.AnchoredPosition", "goog.ui.Component", "goog.ui.Popup", "goog.ui.emoji.EmojiPicker"]);
goog.addDependency("ui/emoji/progressiveemojipaletterenderer.js", ["goog.ui.emoji.ProgressiveEmojiPaletteRenderer"], ["goog.ui.emoji.EmojiPaletteRenderer"]);
goog.addDependency("ui/emoji/spriteinfo.js", ["goog.ui.emoji.SpriteInfo"], []);
goog.addDependency("ui/equation/arrowpalette.js", ["goog.ui.equation.ArrowPalette"], ["goog.math.Size", "goog.ui.equation.Palette"]);
goog.addDependency("ui/equation/changeevent.js", ["goog.ui.equation.ChangeEvent"], ["goog.events.Event", "goog.events.EventType"]);
goog.addDependency("ui/equation/comparisonpalette.js", ["goog.ui.equation.ComparisonPalette"], ["goog.math.Size", "goog.ui.equation.Palette"]);
goog.addDependency("ui/equation/editorpane.js", ["goog.ui.equation.EditorPane"], ["goog.dom", "goog.style", "goog.ui.Component"]);
goog.addDependency("ui/equation/equationeditor.js", ["goog.ui.equation.EquationEditor"], ["goog.dom", "goog.events", "goog.ui.Component", "goog.ui.Tab", "goog.ui.TabBar", "goog.ui.equation.EditorPane", "goog.ui.equation.ImageRenderer", "goog.ui.equation.TexPane"]);
goog.addDependency("ui/equation/equationeditordialog.js", ["goog.ui.equation.EquationEditorDialog"], ["goog.dom", "goog.ui.Dialog", "goog.ui.Dialog.ButtonSet", "goog.ui.equation.EquationEditor", "goog.ui.equation.ImageRenderer", "goog.ui.equation.PaletteManager", "goog.ui.equation.TexEditor"]);
goog.addDependency("ui/equation/greekpalette.js", ["goog.ui.equation.GreekPalette"], ["goog.math.Size", "goog.ui.equation.Palette"]);
goog.addDependency("ui/equation/imagerenderer.js", ["goog.ui.equation.ImageRenderer"], ["goog.dom.TagName", "goog.dom.classes", "goog.string", "goog.uri.utils"]);
goog.addDependency("ui/equation/mathpalette.js", ["goog.ui.equation.MathPalette"], ["goog.math.Size", "goog.ui.equation.Palette"]);
goog.addDependency("ui/equation/menupalette.js", ["goog.ui.equation.MenuPalette", "goog.ui.equation.MenuPaletteRenderer"], ["goog.math.Size", "goog.style", "goog.ui.equation.Palette", "goog.ui.equation.PaletteRenderer"]);
goog.addDependency("ui/equation/palette.js", ["goog.ui.equation.Palette", "goog.ui.equation.PaletteEvent", "goog.ui.equation.PaletteRenderer"], ["goog.dom", "goog.dom.TagName", "goog.ui.Palette", "goog.ui.equation.ImageRenderer"]);
goog.addDependency("ui/equation/palettemanager.js", ["goog.ui.equation.PaletteManager"], ["goog.Timer", "goog.events.EventHandler", "goog.events.EventTarget", "goog.ui.equation.ArrowPalette", "goog.ui.equation.ComparisonPalette", "goog.ui.equation.GreekPalette", "goog.ui.equation.MathPalette", "goog.ui.equation.MenuPalette", "goog.ui.equation.Palette", "goog.ui.equation.SymbolPalette"]);
goog.addDependency("ui/equation/symbolpalette.js", ["goog.ui.equation.SymbolPalette"], ["goog.math.Size", "goog.ui.equation.Palette"]);
goog.addDependency("ui/equation/texeditor.js", ["goog.ui.equation.TexEditor"], ["goog.dom", "goog.ui.Component", "goog.ui.equation.ImageRenderer", "goog.ui.equation.TexPane"]);
goog.addDependency("ui/equation/texpane.js", ["goog.ui.equation.TexPane"], ["goog.Timer", "goog.dom", "goog.dom.TagName", "goog.dom.selection", "goog.events", "goog.events.EventType", "goog.events.InputHandler", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.equation.ChangeEvent", "goog.ui.equation.EditorPane", "goog.ui.equation.ImageRenderer", "goog.ui.equation.PaletteManager"]);
goog.addDependency("ui/filteredmenu.js", ["goog.ui.FilteredMenu"], ["goog.dom", "goog.events", "goog.events.EventType", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.FilterObservingMenuItem", "goog.ui.Menu", "goog.userAgent"]);
goog.addDependency("ui/filterobservingmenuitem.js", ["goog.ui.FilterObservingMenuItem"], ["goog.ui.ControlContent", "goog.ui.FilterObservingMenuItemRenderer", "goog.ui.MenuItem", "goog.ui.registry"]);
goog.addDependency("ui/filterobservingmenuitemrenderer.js", ["goog.ui.FilterObservingMenuItemRenderer"], ["goog.ui.MenuItemRenderer"]);
goog.addDependency("ui/flatbuttonrenderer.js", ["goog.ui.FlatButtonRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom.classes", "goog.ui.Button", "goog.ui.ButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"]);
goog.addDependency("ui/flatmenubuttonrenderer.js", ["goog.ui.FlatMenuButtonRenderer"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.string", "goog.style", "goog.ui.FlatButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuRenderer", "goog.ui.registry"]);
goog.addDependency("ui/formpost.js", ["goog.ui.FormPost"], ["goog.array", "goog.dom.TagName", "goog.string", "goog.string.StringBuffer", "goog.ui.Component"]);
goog.addDependency("ui/gauge.js", ["goog.ui.Gauge", "goog.ui.GaugeColoredRange"], ["goog.a11y.aria", "goog.asserts", "goog.dom", "goog.fx.Animation", "goog.fx.Animation.EventType", "goog.fx.Transition.EventType", "goog.fx.easing", "goog.graphics", "goog.graphics.Font", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.ui.Component", "goog.ui.GaugeTheme"]);
goog.addDependency("ui/gaugetheme.js", ["goog.ui.GaugeTheme"], ["goog.graphics.LinearGradient", "goog.graphics.SolidFill", "goog.graphics.Stroke"]);
goog.addDependency("ui/hovercard.js", ["goog.ui.HoverCard", "goog.ui.HoverCard.EventType", "goog.ui.HoverCard.TriggerEvent"], ["goog.dom", "goog.events", "goog.events.EventType", "goog.ui.AdvancedTooltip"]);
goog.addDependency("ui/hsvapalette.js", ["goog.ui.HsvaPalette"], ["goog.array", "goog.color", "goog.color.alpha", "goog.events.EventType", "goog.ui.Component.EventType", "goog.ui.HsvPalette"]);
goog.addDependency("ui/hsvpalette.js", ["goog.ui.HsvPalette"], ["goog.color", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.events.InputHandler", "goog.style", "goog.style.bidi", "goog.ui.Component", "goog.userAgent"]);
goog.addDependency("ui/idgenerator.js", ["goog.ui.IdGenerator"], []);
goog.addDependency("ui/idletimer.js", ["goog.ui.IdleTimer"], ["goog.Timer", "goog.events", "goog.events.EventTarget", "goog.structs.Set", "goog.ui.ActivityMonitor"]);
goog.addDependency("ui/iframemask.js", ["goog.ui.IframeMask"], ["goog.Disposable", "goog.Timer", "goog.dom", "goog.dom.DomHelper", "goog.dom.iframe", "goog.events.EventHandler", "goog.events.EventTarget", "goog.style"]);
goog.addDependency("ui/imagelessbuttonrenderer.js", ["goog.ui.ImagelessButtonRenderer"], ["goog.dom.classes", "goog.ui.Button", "goog.ui.ControlContent", "goog.ui.CustomButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"]);
goog.addDependency("ui/imagelessmenubuttonrenderer.js", ["goog.ui.ImagelessMenuButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.dom.classes", "goog.ui.ControlContent", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.MenuButton", "goog.ui.MenuButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/inputdatepicker.js", ["goog.ui.InputDatePicker"], ["goog.date.DateTime", "goog.dom", "goog.string", "goog.ui.Component", "goog.ui.DatePicker", "goog.ui.PopupBase", "goog.ui.PopupDatePicker"]);
goog.addDependency("ui/itemevent.js", ["goog.ui.ItemEvent"], ["goog.events.Event"]);
goog.addDependency("ui/keyboardshortcuthandler.js", ["goog.ui.KeyboardShortcutEvent", "goog.ui.KeyboardShortcutHandler", "goog.ui.KeyboardShortcutHandler.EventType"], ["goog.Timer", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyNames", "goog.object", "goog.userAgent"]);
goog.addDependency("ui/labelinput.js", ["goog.ui.LabelInput"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events.EventHandler", "goog.events.EventType", "goog.ui.Component", "goog.userAgent"]);
goog.addDependency("ui/linkbuttonrenderer.js", ["goog.ui.LinkButtonRenderer"], ["goog.ui.Button", "goog.ui.FlatButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/media/flashobject.js", ["goog.ui.media.FlashObject", "goog.ui.media.FlashObject.ScriptAccessLevel", "goog.ui.media.FlashObject.Wmodes"], ["goog.asserts", "goog.debug.Logger", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventType", "goog.object", "goog.string", "goog.structs.Map", "goog.style", "goog.ui.Component", "goog.userAgent", "goog.userAgent.flash"]);
goog.addDependency("ui/media/flickr.js", ["goog.ui.media.FlickrSet", "goog.ui.media.FlickrSetModel"], ["goog.object", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaModel.Player", "goog.ui.media.MediaRenderer"]);
goog.addDependency("ui/media/googlevideo.js", ["goog.ui.media.GoogleVideo", "goog.ui.media.GoogleVideoModel"], ["goog.string", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaModel.Player", "goog.ui.media.MediaRenderer"]);
goog.addDependency("ui/media/media.js", ["goog.ui.media.Media", "goog.ui.media.MediaRenderer"], ["goog.style", "goog.ui.Component.State", "goog.ui.Control", "goog.ui.ControlRenderer"]);
goog.addDependency("ui/media/mediamodel.js", ["goog.ui.media.MediaModel", "goog.ui.media.MediaModel.Category", "goog.ui.media.MediaModel.Credit", "goog.ui.media.MediaModel.Credit.Role", "goog.ui.media.MediaModel.Credit.Scheme", "goog.ui.media.MediaModel.Medium", "goog.ui.media.MediaModel.MimeType", "goog.ui.media.MediaModel.Player", "goog.ui.media.MediaModel.SubTitle", "goog.ui.media.MediaModel.Thumbnail"], ["goog.array"]);
goog.addDependency("ui/media/mp3.js", ["goog.ui.media.Mp3"], ["goog.string", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaRenderer"]);
goog.addDependency("ui/media/photo.js", ["goog.ui.media.Photo"], ["goog.ui.media.Media", "goog.ui.media.MediaRenderer"]);
goog.addDependency("ui/media/picasa.js", ["goog.ui.media.PicasaAlbum", "goog.ui.media.PicasaAlbumModel"], ["goog.object", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaModel.Player", "goog.ui.media.MediaRenderer"]);
goog.addDependency("ui/media/vimeo.js", ["goog.ui.media.Vimeo", "goog.ui.media.VimeoModel"], ["goog.string", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaModel.Player", "goog.ui.media.MediaRenderer"]);
goog.addDependency("ui/media/youtube.js", ["goog.ui.media.Youtube", "goog.ui.media.YoutubeModel"], ["goog.string", "goog.ui.Component.Error", "goog.ui.Component.State", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaModel.Player", "goog.ui.media.MediaModel.Thumbnail", "goog.ui.media.MediaRenderer"]);
goog.addDependency("ui/menu.js", ["goog.ui.Menu", "goog.ui.Menu.EventType"], ["goog.math.Coordinate", "goog.string", "goog.style", "goog.ui.Component.EventType", "goog.ui.Component.State", "goog.ui.Container", "goog.ui.Container.Orientation", "goog.ui.MenuHeader", "goog.ui.MenuItem", "goog.ui.MenuRenderer", "goog.ui.MenuSeparator"]);
goog.addDependency("ui/menubar.js", ["goog.ui.menuBar"], ["goog.ui.Container", "goog.ui.MenuBarRenderer"]);
goog.addDependency("ui/menubardecorator.js", ["goog.ui.menuBarDecorator"], ["goog.ui.MenuBarRenderer", "goog.ui.menuBar", "goog.ui.registry"]);
goog.addDependency("ui/menubarrenderer.js", ["goog.ui.MenuBarRenderer"], ["goog.a11y.aria.Role", "goog.dom", "goog.ui.ContainerRenderer"]);
goog.addDependency("ui/menubase.js", ["goog.ui.MenuBase"], ["goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyHandler", "goog.ui.Popup"]);
goog.addDependency("ui/menubutton.js", ["goog.ui.MenuButton"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.math.Box", "goog.math.Rect", "goog.positioning", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.positioning.Overflow", "goog.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.Menu", "goog.ui.MenuButtonRenderer", "goog.ui.registry", "goog.userAgent", 
"goog.userAgent.product"]);
goog.addDependency("ui/menubuttonrenderer.js", ["goog.ui.MenuButtonRenderer"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.string", "goog.style", "goog.ui.CustomButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.Menu", "goog.ui.MenuRenderer", "goog.userAgent"]);
goog.addDependency("ui/menuheader.js", ["goog.ui.MenuHeader"], ["goog.ui.Component.State", "goog.ui.Control", "goog.ui.MenuHeaderRenderer", "goog.ui.registry"]);
goog.addDependency("ui/menuheaderrenderer.js", ["goog.ui.MenuHeaderRenderer"], ["goog.dom", "goog.dom.classes", "goog.ui.ControlRenderer"]);
goog.addDependency("ui/menuitem.js", ["goog.ui.MenuItem"], ["goog.array", "goog.dom", "goog.dom.classes", "goog.events.KeyCodes", "goog.math.Coordinate", "goog.string", "goog.ui.Component.State", "goog.ui.Control", "goog.ui.ControlContent", "goog.ui.MenuItemRenderer", "goog.ui.registry"]);
goog.addDependency("ui/menuitemrenderer.js", ["goog.ui.MenuItemRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.dom.classes", "goog.ui.Component.State", "goog.ui.ControlContent", "goog.ui.ControlRenderer"]);
goog.addDependency("ui/menurenderer.js", ["goog.ui.MenuRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.ui.ContainerRenderer", "goog.ui.Separator"]);
goog.addDependency("ui/menuseparator.js", ["goog.ui.MenuSeparator"], ["goog.ui.MenuSeparatorRenderer", "goog.ui.Separator", "goog.ui.registry"]);
goog.addDependency("ui/menuseparatorrenderer.js", ["goog.ui.MenuSeparatorRenderer"], ["goog.dom", "goog.dom.classes", "goog.ui.ControlContent", "goog.ui.ControlRenderer"]);
goog.addDependency("ui/mockactivitymonitor.js", ["goog.ui.MockActivityMonitor"], ["goog.events.EventType", "goog.ui.ActivityMonitor"]);
goog.addDependency("ui/mockactivitymonitor_test.js", ["goog.ui.MockActivityMonitorTest"], ["goog.events", "goog.functions", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.ActivityMonitor", "goog.ui.MockActivityMonitor"]);
goog.addDependency("ui/modalpopup.js", ["goog.ui.ModalPopup"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classes", "goog.dom.iframe", "goog.events", "goog.events.EventType", "goog.events.FocusHandler", "goog.fx.Transition", "goog.style", "goog.ui.Component", "goog.ui.PopupBase.EventType", "goog.userAgent"]);
goog.addDependency("ui/nativebuttonrenderer.js", ["goog.ui.NativeButtonRenderer"], ["goog.dom.classes", "goog.events.EventType", "goog.ui.ButtonRenderer", "goog.ui.Component.State"]);
goog.addDependency("ui/offlineinstalldialog.js", ["goog.ui.OfflineInstallDialog", "goog.ui.OfflineInstallDialog.ButtonKeyType", "goog.ui.OfflineInstallDialog.EnableScreen", "goog.ui.OfflineInstallDialog.InstallScreen", "goog.ui.OfflineInstallDialog.InstallingGearsScreen", "goog.ui.OfflineInstallDialog.ScreenType", "goog.ui.OfflineInstallDialog.UpgradeScreen", "goog.ui.OfflineInstallDialogScreen"], ["goog.Disposable", "goog.dom.classes", "goog.gears", "goog.string", "goog.string.StringBuffer", "goog.ui.Dialog", 
"goog.ui.Dialog.ButtonSet", "goog.ui.Dialog.EventType", "goog.window"]);
goog.addDependency("ui/offlinestatuscard.js", ["goog.ui.OfflineStatusCard", "goog.ui.OfflineStatusCard.EventType"], ["goog.dom", "goog.events.EventType", "goog.gears.StatusType", "goog.structs.Map", "goog.style", "goog.ui.Component", "goog.ui.ProgressBar"]);
goog.addDependency("ui/offlinestatuscomponent.js", ["goog.ui.OfflineStatusComponent", "goog.ui.OfflineStatusComponent.StatusClassNames"], ["goog.dom.classes", "goog.events.EventType", "goog.gears.StatusType", "goog.positioning", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.ui.Component", "goog.ui.OfflineStatusCard.EventType", "goog.ui.Popup"]);
goog.addDependency("ui/option.js", ["goog.ui.Option"], ["goog.ui.Component", "goog.ui.MenuItem", "goog.ui.registry"]);
goog.addDependency("ui/palette.js", ["goog.ui.Palette"], ["goog.array", "goog.dom", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.math.Size", "goog.ui.Component", "goog.ui.Control", "goog.ui.PaletteRenderer", "goog.ui.SelectionModel"]);
goog.addDependency("ui/paletterenderer.js", ["goog.ui.PaletteRenderer"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.array", "goog.dom", "goog.dom.NodeIterator", "goog.dom.NodeType", "goog.dom.classes", "goog.iter", "goog.style", "goog.ui.ControlRenderer", "goog.userAgent"]);
goog.addDependency("ui/plaintextspellchecker.js", ["goog.ui.PlainTextSpellChecker"], ["goog.Timer", "goog.a11y.aria", "goog.asserts", "goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.spell.SpellCheck", "goog.style", "goog.ui.AbstractSpellChecker", "goog.ui.Component", "goog.userAgent"]);
goog.addDependency("ui/popup.js", ["goog.ui.Popup", "goog.ui.Popup.AbsolutePosition", "goog.ui.Popup.AnchoredPosition", "goog.ui.Popup.AnchoredViewPortPosition", "goog.ui.Popup.ClientPosition", "goog.ui.Popup.Corner", "goog.ui.Popup.Overflow", "goog.ui.Popup.ViewPortClientPosition", "goog.ui.Popup.ViewPortPosition"], ["goog.math.Box", "goog.positioning", "goog.positioning.AbsolutePosition", "goog.positioning.AnchoredPosition", "goog.positioning.AnchoredViewportPosition", "goog.positioning.ClientPosition", 
"goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.OverflowStatus", "goog.positioning.ViewportClientPosition", "goog.positioning.ViewportPosition", "goog.style", "goog.ui.PopupBase"]);
goog.addDependency("ui/popupbase.js", ["goog.ui.PopupBase", "goog.ui.PopupBase.EventType", "goog.ui.PopupBase.Type"], ["goog.Timer", "goog.dom", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.fx.Transition", "goog.fx.Transition.EventType", "goog.style", "goog.userAgent"]);
goog.addDependency("ui/popupcolorpicker.js", ["goog.ui.PopupColorPicker"], ["goog.dom.classes", "goog.events.EventType", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.ui.ColorPicker", "goog.ui.ColorPicker.EventType", "goog.ui.Component", "goog.ui.Popup"]);
goog.addDependency("ui/popupdatepicker.js", ["goog.ui.PopupDatePicker"], ["goog.events.EventType", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.style", "goog.ui.Component", "goog.ui.DatePicker", "goog.ui.DatePicker.Events", "goog.ui.Popup", "goog.ui.PopupBase.EventType"]);
goog.addDependency("ui/popupmenu.js", ["goog.ui.PopupMenu"], ["goog.events.EventType", "goog.positioning.AnchoredViewportPosition", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.positioning.ViewportClientPosition", "goog.structs", "goog.structs.Map", "goog.style", "goog.ui.Component.EventType", "goog.ui.Menu", "goog.ui.PopupBase", "goog.userAgent"]);
goog.addDependency("ui/progressbar.js", ["goog.ui.ProgressBar", "goog.ui.ProgressBar.Orientation"], ["goog.a11y.aria", "goog.asserts", "goog.dom", "goog.dom.classes", "goog.events", "goog.events.EventType", "goog.ui.Component", "goog.ui.RangeModel", "goog.userAgent"]);
goog.addDependency("ui/prompt.js", ["goog.ui.Prompt"], ["goog.Timer", "goog.dom", "goog.events", "goog.events.EventType", "goog.functions", "goog.ui.Component.Error", "goog.ui.Dialog", "goog.ui.Dialog.ButtonSet", "goog.ui.Dialog.DefaultButtonKeys", "goog.ui.Dialog.EventType", "goog.userAgent"]);
goog.addDependency("ui/rangemodel.js", ["goog.ui.RangeModel"], ["goog.events.EventTarget", "goog.ui.Component.EventType"]);
goog.addDependency("ui/ratings.js", ["goog.ui.Ratings", "goog.ui.Ratings.EventType"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.dom.classes", "goog.events.EventType", "goog.ui.Component"]);
goog.addDependency("ui/registry.js", ["goog.ui.registry"], ["goog.dom.classes"]);
goog.addDependency("ui/richtextspellchecker.js", ["goog.ui.RichTextSpellChecker"], ["goog.Timer", "goog.dom", "goog.dom.NodeType", "goog.events", "goog.events.EventType", "goog.string.StringBuffer", "goog.ui.AbstractSpellChecker", "goog.ui.AbstractSpellChecker.AsyncResult"]);
goog.addDependency("ui/roundedpanel.js", ["goog.ui.BaseRoundedPanel", "goog.ui.CssRoundedPanel", "goog.ui.GraphicsRoundedPanel", "goog.ui.RoundedPanel", "goog.ui.RoundedPanel.Corner"], ["goog.dom", "goog.dom.classes", "goog.graphics", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.graphics.Stroke", "goog.math", "goog.math.Coordinate", "goog.style", "goog.ui.Component", "goog.userAgent"]);
goog.addDependency("ui/roundedtabrenderer.js", ["goog.ui.RoundedTabRenderer"], ["goog.dom", "goog.ui.Tab", "goog.ui.TabBar.Location", "goog.ui.TabRenderer", "goog.ui.registry"]);
goog.addDependency("ui/scrollfloater.js", ["goog.ui.ScrollFloater", "goog.ui.ScrollFloater.EventType"], ["goog.array", "goog.dom", "goog.dom.classes", "goog.events.EventType", "goog.style", "goog.ui.Component", "goog.userAgent"]);
goog.addDependency("ui/select.js", ["goog.ui.Select"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.events.EventType", "goog.ui.Component.EventType", "goog.ui.ControlContent", "goog.ui.MenuButton", "goog.ui.SelectionModel", "goog.ui.registry"]);
goog.addDependency("ui/selectionmenubutton.js", ["goog.ui.SelectionMenuButton", "goog.ui.SelectionMenuButton.SelectionState"], ["goog.events.EventType", "goog.ui.Component.EventType", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuItem"]);
goog.addDependency("ui/selectionmodel.js", ["goog.ui.SelectionModel"], ["goog.array", "goog.events.EventTarget", "goog.events.EventType"]);
goog.addDependency("ui/separator.js", ["goog.ui.Separator"], ["goog.a11y.aria", "goog.asserts", "goog.ui.Component.State", "goog.ui.Control", "goog.ui.MenuSeparatorRenderer", "goog.ui.registry"]);
goog.addDependency("ui/serverchart.js", ["goog.ui.ServerChart", "goog.ui.ServerChart.AxisDisplayType", "goog.ui.ServerChart.ChartType", "goog.ui.ServerChart.EncodingType", "goog.ui.ServerChart.Event", "goog.ui.ServerChart.LegendPosition", "goog.ui.ServerChart.MaximumValue", "goog.ui.ServerChart.MultiAxisAlignment", "goog.ui.ServerChart.MultiAxisType", "goog.ui.ServerChart.UriParam", "goog.ui.ServerChart.UriTooLongEvent"], ["goog.Uri", "goog.array", "goog.asserts", "goog.events.Event", "goog.string", 
"goog.ui.Component"]);
goog.addDependency("ui/slider.js", ["goog.ui.Slider", "goog.ui.Slider.Orientation"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.ui.SliderBase", "goog.ui.SliderBase.Orientation"]);
goog.addDependency("ui/sliderbase.js", ["goog.ui.SliderBase", "goog.ui.SliderBase.AnimationFactory", "goog.ui.SliderBase.Orientation"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.classes", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.events.MouseWheelHandler", "goog.fx.AnimationParallelQueue", "goog.fx.Dragger", "goog.fx.Transition", "goog.fx.dom.ResizeHeight", 
"goog.fx.dom.ResizeWidth", "goog.fx.dom.Slide", "goog.math", "goog.math.Coordinate", "goog.style", "goog.style.bidi", "goog.ui.Component", "goog.ui.RangeModel"]);
goog.addDependency("ui/splitbehavior.js", ["goog.ui.SplitBehavior", "goog.ui.SplitBehavior.DefaultHandlers"], ["goog.Disposable", "goog.array", "goog.dispose", "goog.dom", "goog.dom.DomHelper", "goog.dom.classes", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.string", "goog.ui.ButtonSide", "goog.ui.Component", "goog.ui.Component.Error", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.decorate", "goog.ui.registry"]);
goog.addDependency("ui/splitpane.js", ["goog.ui.SplitPane", "goog.ui.SplitPane.Orientation"], ["goog.dom", "goog.dom.classes", "goog.events.EventType", "goog.fx.Dragger", "goog.fx.Dragger.EventType", "goog.math.Rect", "goog.math.Size", "goog.style", "goog.ui.Component", "goog.ui.Component.EventType", "goog.userAgent"]);
goog.addDependency("ui/style/app/buttonrenderer.js", ["goog.ui.style.app.ButtonRenderer"], ["goog.dom.classes", "goog.ui.Button", "goog.ui.ControlContent", "goog.ui.CustomButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"]);
goog.addDependency("ui/style/app/menubuttonrenderer.js", ["goog.ui.style.app.MenuButtonRenderer"], ["goog.a11y.aria.Role", "goog.array", "goog.dom", "goog.style", "goog.ui.ControlContent", "goog.ui.Menu", "goog.ui.MenuRenderer", "goog.ui.style.app.ButtonRenderer"]);
goog.addDependency("ui/style/app/primaryactionbuttonrenderer.js", ["goog.ui.style.app.PrimaryActionButtonRenderer"], ["goog.ui.Button", "goog.ui.registry", "goog.ui.style.app.ButtonRenderer"]);
goog.addDependency("ui/submenu.js", ["goog.ui.SubMenu"], ["goog.Timer", "goog.dom", "goog.dom.classes", "goog.events.KeyCodes", "goog.positioning.AnchoredViewportPosition", "goog.positioning.Corner", "goog.style", "goog.ui.Component", "goog.ui.Component.EventType", "goog.ui.Component.State", "goog.ui.ControlContent", "goog.ui.Menu", "goog.ui.MenuItem", "goog.ui.SubMenuRenderer", "goog.ui.registry"]);
goog.addDependency("ui/submenurenderer.js", ["goog.ui.SubMenuRenderer"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.classes", "goog.style", "goog.ui.Menu", "goog.ui.MenuItemRenderer"]);
goog.addDependency("ui/tab.js", ["goog.ui.Tab"], ["goog.ui.Component.State", "goog.ui.Control", "goog.ui.ControlContent", "goog.ui.TabRenderer", "goog.ui.registry"]);
goog.addDependency("ui/tabbar.js", ["goog.ui.TabBar", "goog.ui.TabBar.Location"], ["goog.ui.Component.EventType", "goog.ui.Container", "goog.ui.Container.Orientation", "goog.ui.Tab", "goog.ui.TabBarRenderer", "goog.ui.registry"]);
goog.addDependency("ui/tabbarrenderer.js", ["goog.ui.TabBarRenderer"], ["goog.a11y.aria.Role", "goog.object", "goog.ui.ContainerRenderer"]);
goog.addDependency("ui/tablesorter.js", ["goog.ui.TableSorter", "goog.ui.TableSorter.EventType"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.classes", "goog.events", "goog.events.EventType", "goog.functions", "goog.ui.Component"]);
goog.addDependency("ui/tabpane.js", ["goog.ui.TabPane", "goog.ui.TabPane.Events", "goog.ui.TabPane.TabLocation", "goog.ui.TabPane.TabPage", "goog.ui.TabPaneEvent"], ["goog.dom", "goog.dom.classes", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.style"]);
goog.addDependency("ui/tabrenderer.js", ["goog.ui.TabRenderer"], ["goog.a11y.aria.Role", "goog.ui.Component.State", "goog.ui.ControlRenderer"]);
goog.addDependency("ui/textarea.js", ["goog.ui.Textarea", "goog.ui.Textarea.EventType"], ["goog.Timer", "goog.events.EventType", "goog.events.KeyCodes", "goog.style", "goog.ui.Control", "goog.ui.TextareaRenderer", "goog.userAgent", "goog.userAgent.product"]);
goog.addDependency("ui/textarearenderer.js", ["goog.ui.TextareaRenderer"], ["goog.ui.Component.State", "goog.ui.ControlRenderer"]);
goog.addDependency("ui/togglebutton.js", ["goog.ui.ToggleButton"], ["goog.ui.Button", "goog.ui.Component", "goog.ui.CustomButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/toolbar.js", ["goog.ui.Toolbar"], ["goog.ui.Container", "goog.ui.ToolbarRenderer"]);
goog.addDependency("ui/toolbarbutton.js", ["goog.ui.ToolbarButton"], ["goog.ui.Button", "goog.ui.ControlContent", "goog.ui.ToolbarButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/toolbarbuttonrenderer.js", ["goog.ui.ToolbarButtonRenderer"], ["goog.ui.CustomButtonRenderer"]);
goog.addDependency("ui/toolbarcolormenubutton.js", ["goog.ui.ToolbarColorMenuButton"], ["goog.ui.ColorMenuButton", "goog.ui.ControlContent", "goog.ui.ToolbarColorMenuButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/toolbarcolormenubuttonrenderer.js", ["goog.ui.ToolbarColorMenuButtonRenderer"], ["goog.dom.classes", "goog.ui.ColorMenuButtonRenderer", "goog.ui.ControlContent", "goog.ui.MenuButtonRenderer", "goog.ui.ToolbarMenuButtonRenderer"]);
goog.addDependency("ui/toolbarmenubutton.js", ["goog.ui.ToolbarMenuButton"], ["goog.ui.ControlContent", "goog.ui.MenuButton", "goog.ui.ToolbarMenuButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/toolbarmenubuttonrenderer.js", ["goog.ui.ToolbarMenuButtonRenderer"], ["goog.ui.MenuButtonRenderer"]);
goog.addDependency("ui/toolbarrenderer.js", ["goog.ui.ToolbarRenderer"], ["goog.a11y.aria.Role", "goog.ui.Container.Orientation", "goog.ui.ContainerRenderer", "goog.ui.Separator", "goog.ui.ToolbarSeparatorRenderer"]);
goog.addDependency("ui/toolbarselect.js", ["goog.ui.ToolbarSelect"], ["goog.ui.ControlContent", "goog.ui.Select", "goog.ui.ToolbarMenuButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/toolbarseparator.js", ["goog.ui.ToolbarSeparator"], ["goog.ui.Separator", "goog.ui.ToolbarSeparatorRenderer", "goog.ui.registry"]);
goog.addDependency("ui/toolbarseparatorrenderer.js", ["goog.ui.ToolbarSeparatorRenderer"], ["goog.dom.classes", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.MenuSeparatorRenderer"]);
goog.addDependency("ui/toolbartogglebutton.js", ["goog.ui.ToolbarToggleButton"], ["goog.ui.ControlContent", "goog.ui.ToggleButton", "goog.ui.ToolbarButtonRenderer", "goog.ui.registry"]);
goog.addDependency("ui/tooltip.js", ["goog.ui.Tooltip", "goog.ui.Tooltip.CursorTooltipPosition", "goog.ui.Tooltip.ElementTooltipPosition", "goog.ui.Tooltip.State"], ["goog.Timer", "goog.array", "goog.dom", "goog.events", "goog.events.EventType", "goog.math.Box", "goog.math.Coordinate", "goog.positioning", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.OverflowStatus", "goog.positioning.ViewportPosition", "goog.structs.Set", "goog.style", 
"goog.ui.Popup", "goog.ui.PopupBase"]);
goog.addDependency("ui/tree/basenode.js", ["goog.ui.tree.BaseNode", "goog.ui.tree.BaseNode.EventType"], ["goog.Timer", "goog.a11y.aria", "goog.asserts", "goog.events.KeyCodes", "goog.string", "goog.string.StringBuffer", "goog.style", "goog.ui.Component", "goog.userAgent"]);
goog.addDependency("ui/tree/treecontrol.js", ["goog.ui.tree.TreeControl"], ["goog.a11y.aria", "goog.asserts", "goog.debug.Logger", "goog.dom.classes", "goog.events.EventType", "goog.events.FocusHandler", "goog.events.KeyHandler", "goog.events.KeyHandler.EventType", "goog.ui.tree.BaseNode", "goog.ui.tree.TreeNode", "goog.ui.tree.TypeAhead", "goog.userAgent"]);
goog.addDependency("ui/tree/treenode.js", ["goog.ui.tree.TreeNode"], ["goog.ui.tree.BaseNode"]);
goog.addDependency("ui/tree/typeahead.js", ["goog.ui.tree.TypeAhead", "goog.ui.tree.TypeAhead.Offset"], ["goog.array", "goog.events.KeyCodes", "goog.string", "goog.structs.Trie"]);
goog.addDependency("ui/tristatemenuitem.js", ["goog.ui.TriStateMenuItem", "goog.ui.TriStateMenuItem.State"], ["goog.dom.classes", "goog.ui.Component", "goog.ui.MenuItem", "goog.ui.TriStateMenuItemRenderer", "goog.ui.registry"]);
goog.addDependency("ui/tristatemenuitemrenderer.js", ["goog.ui.TriStateMenuItemRenderer"], ["goog.dom.classes", "goog.ui.MenuItemRenderer"]);
goog.addDependency("ui/twothumbslider.js", ["goog.ui.TwoThumbSlider"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.ui.SliderBase"]);
goog.addDependency("ui/zippy.js", ["goog.ui.Zippy", "goog.ui.Zippy.Events", "goog.ui.ZippyEvent"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.classes", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.style"]);
goog.addDependency("uri/uri.js", ["goog.Uri", "goog.Uri.QueryData"], ["goog.array", "goog.string", "goog.structs", "goog.structs.Map", "goog.uri.utils", "goog.uri.utils.ComponentIndex"]);
goog.addDependency("uri/utils.js", ["goog.uri.utils", "goog.uri.utils.ComponentIndex", "goog.uri.utils.QueryArray", "goog.uri.utils.QueryValue", "goog.uri.utils.StandardQueryParam"], ["goog.asserts", "goog.string", "goog.userAgent"]);
goog.addDependency("useragent/adobereader.js", ["goog.userAgent.adobeReader"], ["goog.string", "goog.userAgent"]);
goog.addDependency("useragent/flash.js", ["goog.userAgent.flash"], ["goog.string"]);
goog.addDependency("useragent/iphoto.js", ["goog.userAgent.iphoto"], ["goog.string", "goog.userAgent"]);
goog.addDependency("useragent/jscript.js", ["goog.userAgent.jscript"], ["goog.string"]);
goog.addDependency("useragent/picasa.js", ["goog.userAgent.picasa"], ["goog.string", "goog.userAgent"]);
goog.addDependency("useragent/platform.js", ["goog.userAgent.platform"], ["goog.userAgent"]);
goog.addDependency("useragent/product.js", ["goog.userAgent.product"], ["goog.userAgent"]);
goog.addDependency("useragent/product_isversion.js", ["goog.userAgent.product.isVersion"], ["goog.userAgent.product"]);
goog.addDependency("useragent/useragent.js", ["goog.userAgent"], ["goog.string"]);
goog.addDependency("vec/float32array.js", ["goog.vec.Float32Array"], []);
goog.addDependency("vec/float64array.js", ["goog.vec.Float64Array"], []);
goog.addDependency("vec/mat3.js", ["goog.vec.Mat3"], ["goog.vec", "goog.vec.Vec3"]);
goog.addDependency("vec/mat3d.js", ["goog.vec.mat3d"], ["goog.vec", "goog.vec.vec3d"]);
goog.addDependency("vec/mat3f.js", ["goog.vec.mat3f"], ["goog.vec", "goog.vec.vec3f"]);
goog.addDependency("vec/mat4.js", ["goog.vec.Mat4"], ["goog.vec", "goog.vec.Vec3", "goog.vec.Vec4"]);
goog.addDependency("vec/mat4d.js", ["goog.vec.mat4d"], ["goog.vec", "goog.vec.vec3d", "goog.vec.vec4d"]);
goog.addDependency("vec/mat4f.js", ["goog.vec.mat4f"], ["goog.vec", "goog.vec.vec3f", "goog.vec.vec4f"]);
goog.addDependency("vec/matrix3.js", ["goog.vec.Matrix3"], ["goog.vec"]);
goog.addDependency("vec/matrix4.js", ["goog.vec.Matrix4"], ["goog.vec", "goog.vec.Vec3", "goog.vec.Vec4"]);
goog.addDependency("vec/quaternion.js", ["goog.vec.Quaternion"], ["goog.vec", "goog.vec.Vec3", "goog.vec.Vec4"]);
goog.addDependency("vec/ray.js", ["goog.vec.Ray"], ["goog.vec.Vec3"]);
goog.addDependency("vec/vec.js", ["goog.vec", "goog.vec.AnyType", "goog.vec.ArrayType", "goog.vec.Float32", "goog.vec.Float64", "goog.vec.Number"], ["goog.vec.Float32Array", "goog.vec.Float64Array"]);
goog.addDependency("vec/vec2.js", ["goog.vec.Vec2"], ["goog.vec"]);
goog.addDependency("vec/vec2d.js", ["goog.vec.vec2d"], ["goog.vec"]);
goog.addDependency("vec/vec2f.js", ["goog.vec.vec2f"], ["goog.vec"]);
goog.addDependency("vec/vec3.js", ["goog.vec.Vec3"], ["goog.vec"]);
goog.addDependency("vec/vec3d.js", ["goog.vec.vec3d"], ["goog.vec"]);
goog.addDependency("vec/vec3f.js", ["goog.vec.vec3f"], ["goog.vec"]);
goog.addDependency("vec/vec4.js", ["goog.vec.Vec4"], ["goog.vec"]);
goog.addDependency("vec/vec4d.js", ["goog.vec.vec4d"], ["goog.vec"]);
goog.addDependency("vec/vec4f.js", ["goog.vec.vec4f"], ["goog.vec"]);
goog.addDependency("webgl/webgl.js", ["goog.webgl"], []);
goog.addDependency("window/window.js", ["goog.window"], ["goog.string", "goog.userAgent"]);

